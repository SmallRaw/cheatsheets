[
{
  "id": "sheets/JavaScript/101",
  "title": 101,
  "url": "/sheets/JavaScript/101",
  "category": "JavaScript libraries",
  "keywords": null,
  "content_html": "<h3 id=\"usage\">Usage</h3>\n\n<pre><code class=\"language-js\">const isObject = require('101/isObject')\nisObject({}) // → true\n</code></pre>\n\n<p>Every function is exposed as a module.</p>\n\n<p>See: <a href=\"https://github.com/tjmehta/101\">101</a></p>\n\n<h3 id=\"type-checking\">Type checking</h3>\n\n<pre><code class=\"language-js\">isObject({})\nisString('str')\nisRegExp(/regexp/)\nisBoolean(true)\nisEmpty({})\nisfunction(x =&gt; x)\nisInteger(10)\nisNumber(10.1)\ninstanceOf(obj, 'string')\n</code></pre>\n\n<h2 class=\"-three-column\" id=\"objects\">Objects</h2>\n\n<h3 class=\"-prime\" id=\"example\">Example</h3>\n\n<pre><code class=\"language-js\">let obj = {}\n</code></pre>\n\n<h4 id=\"update\">Update</h4>\n\n<pre><code class=\"language-js\">obj = put(obj, 'user.name', 'John')\n// → { user: { name: 'John' } }\n</code></pre>\n\n<h4 id=\"read\">Read</h4>\n\n<pre><code class=\"language-js\">pluck(name, 'user.name')\n// → 'John'\n</code></pre>\n\n<h4 id=\"delete\">Delete</h4>\n\n<pre><code class=\"language-js\">obj = del(obj, 'user')\n// → { }\n</code></pre>\n\n<h3 id=\"getting\">Getting</h3>\n\n<pre><code class=\"language-js\">pluck(state, 'user.profile.name')\n</code></pre>\n\n<pre><code class=\"language-js\">pick(state, ['user', 'ui'])\npick(state, /^_/)\n</code></pre>\n\n<p><code>pluck</code> returns values, <code>pick</code> returns subsets of objects.</p>\n\n<p>See:\n<a href=\"https://github.com/tjmehta/101#pluck\">pluck</a>,\n<a href=\"https://github.com/tjmehta/101#pick\">pick</a></p>\n\n<h3 id=\"setting\">Setting</h3>\n\n<pre><code class=\"language-js\">put(state, 'user.profile.name', 'john')\n</code></pre>\n\n<p>See:\n<a href=\"https://github.com/tjmehta/101#put\">put</a></p>\n\n<h3 id=\"deleting\">Deleting</h3>\n\n<pre><code class=\"language-js\">del(state, 'user.profile')\nomit(state, ['user', 'data'])\n</code></pre>\n\n<p><code>omit</code> is like <code>del</code>, but supports multiple keys to be deleted.</p>\n\n<p>See:\n<a href=\"https://github.com/tjmehta/101#omit\">omit</a>,\n<a href=\"https://github.com/tjmehta/101#del\">del</a></p>\n\n<h3 id=\"keypath-check\">Keypath check</h3>\n\n<pre><code class=\"language-js\">hasKeypaths(state, ['user'])\nhasKeypaths(state, { 'user.profile.name': 'john' })\n</code></pre>\n\n<p>See:\n<a href=\"https://github.com/tjmehta/101#haskeypaths\">hasKeypaths</a></p>\n\n<h3 id=\"get-values\">Get values</h3>\n\n<pre><code class=\"language-js\">values(state)\n</code></pre>\n\n<h2 id=\"functions\">Functions</h2>\n\n<h3 id=\"simple-functions\">Simple functions</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>and(x, y)</code></td>\n      <td><code>x &amp;&amp; y</code></td>\n    </tr>\n    <tr>\n      <td><code>or(x, y)</code></td>\n      <td><code>x || y</code></td>\n    </tr>\n    <tr>\n      <td><code>xor(x, y)</code></td>\n      <td><code>!(!x &amp;&amp; !y) &amp;&amp; !(x &amp;&amp; y)</code></td>\n    </tr>\n    <tr>\n      <td><code>equals(x, y)</code></td>\n      <td><code>x === y</code></td>\n    </tr>\n    <tr>\n      <td><code>exists(x)</code></td>\n      <td><code>!!x</code></td>\n    </tr>\n    <tr>\n      <td><code>not(x)</code></td>\n      <td><code>!x</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Useful for function composition.</p>\n\n<p>See:\n<a href=\"https://github.com/tjmehta/101#and\">and</a>,\n<a href=\"https://github.com/tjmehta/101#equals\">equals</a>,\n<a href=\"https://github.com/tjmehta/101#exists\">exists</a></p>\n\n<h3 id=\"composition\">Composition</h3>\n\n<pre><code class=\"language-js\">compose(f, g)       // x =&gt; f(g(x))\ncurry(f)            // x =&gt; y =&gt; f(x, y)\nflip(f)             // f(x, y) --&gt; f(y, x)\n</code></pre>\n\n<p>See:\n<a href=\"https://github.com/tjmehta/101#compose\">compose</a>,\n<a href=\"https://github.com/tjmehta/101#curry\">curry</a>,\n<a href=\"https://github.com/tjmehta/101#flip\">flip</a></p>\n\n<h3 id=\"andor\">And/or</h3>\n\n<pre><code class=\"language-js\">passAll(f, g)       // x =&gt; f(x) &amp;&amp; g(x)\npassAny(f, g)       // x =&gt; f(x) || g(x)\n</code></pre>\n\n<p>See:\n<a href=\"https://github.com/tjmehta/101#passall\">passAll</a>,\n<a href=\"https://github.com/tjmehta/101#passany\">passAny</a></p>\n\n<h3 id=\"converge\">Converge</h3>\n\n<pre><code class=\"language-js\">converge(and, [pluck('a'), pluck('b')])(x)\n</code></pre>\n\n<pre><code class=\"language-js\">// → and(pluck(x, 'a'), pluck(x, 'b'))\n</code></pre>\n\n<p>See:\n<a href=\"https://github.com/tjmehta/101#converge\">converge</a></p>\n\n<h2 id=\"arrays\">Arrays</h2>\n\n<h3 id=\"finding\">Finding</h3>\n\n<pre><code class=\"language-js\">find(list, x =&gt; x.y === 2)\nfindIndex(list, x =&gt; ...)\nincludes(list, 'item')\nlast(list)\n</code></pre>\n\n<pre><code class=\"language-js\">find(list, hasProps('id'))\n</code></pre>\n\n<h3 id=\"grouping\">Grouping</h3>\n\n<pre><code class=\"language-js\">groupBy(list, 'id')\nindexBy(list, 'id')\n</code></pre>\n\n<h2 id=\"examples\">Examples</h2>\n\n<h3 id=\"function-composition\">Function composition</h3>\n\n<pre><code class=\"language-js\">isFloat = passAll(isNumber, compose(isInteger, not))\n// n =&gt; isNumber(n) &amp;&amp; not(isInteger(n))\n</code></pre>\n\n<pre><code class=\"language-js\">function doStuff (object, options) { ... }\n\ndoStuffForce = curry(flip(doStuff))({ force: true })\n</code></pre>\n\n<h2 id=\"reference\">Reference</h2>\n\n<ul>\n  <li><a href=\"https://github.com/tjmehta/101\">https://github.com/tjmehta/101</a></li>\n</ul>",
  "intro_html": "<p><a href=\"https://www.npmjs.com/package/101\">101</a> is a JavaScript library for dealing with immutable data in a functional manner.</p>",
  "description_html": "",
  "tags": null,
  "updated": "2017-09-21"
},{
  "id": "sheets/Android/adb",
  "title": "adb (Android Debug Bridge)",
  "url": "/sheets/Android/adb",
  "category": "CLI",
  "keywords": null,
  "content_html": "<h3 id=\"device-basics\">Device Basics</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>adb devices</code></td>\n      <td>Lists connected devices</td>\n    </tr>\n    <tr>\n      <td><code>adb devices -l</code></td>\n      <td>Lists connected devices and kind</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>adb root</code></td>\n      <td>Restarts adbd with root permissions</td>\n    </tr>\n    <tr>\n      <td><code>adb start-server</code></td>\n      <td>Starts the adb server</td>\n    </tr>\n    <tr>\n      <td><code>adb kill-server</code></td>\n      <td>Kills the adb server</td>\n    </tr>\n    <tr>\n      <td><code>adb remount</code></td>\n      <td>Remounts file system with read/write access</td>\n    </tr>\n    <tr>\n      <td><code>adb reboot</code></td>\n      <td>Reboots the device</td>\n    </tr>\n    <tr>\n      <td><code>adb reboot bootloader</code></td>\n      <td>Reboots the device into fastboot</td>\n    </tr>\n    <tr>\n      <td><code>adb disable-verity</code></td>\n      <td>Reboots the device into fastboot</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><code>wait-for-device</code> can be specified after <code>adb</code> to ensure that the command will run once the device is connected.</p>\n\n<p><code>-s</code> can be used to send the commands to a specific device when multiple are connected.</p>\n\n<h4 id=\"examples\">Examples</h4>\n\n<pre><code>$ adb wait-for-device devices\n List of devices attached\n somedevice-1234 device\n someotherdevice-1234 device\n</code></pre>\n\n<pre><code>$ adb -s somedevice-1234 root\n</code></pre>\n\n<h3 id=\"logcat\">Logcat</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>adb logcat</code></td>\n      <td>Starts printing log messages to stdout</td>\n    </tr>\n    <tr>\n      <td><code>adb logcat -g</code></td>\n      <td>Displays current log buffer sizes</td>\n    </tr>\n    <tr>\n      <td><code>adb logcat -G &lt;size&gt;</code></td>\n      <td>Sets the buffer size (K or M)</td>\n    </tr>\n    <tr>\n      <td><code>adb logcat -c</code></td>\n      <td>Clears the log buffers</td>\n    </tr>\n    <tr>\n      <td><code>adb logcat *:V</code></td>\n      <td>Enables ALL log messages (verbose)</td>\n    </tr>\n    <tr>\n      <td><code>adb logcat -f &lt;filename&gt;</code></td>\n      <td>Dumps to specified file</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"examples-1\">Examples</h4>\n<pre><code>$ adb logcat -G 16M\n$ adb logcat *:V &gt; output.log\n</code></pre>\n\n<h3 id=\"file-management\">File Management</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>adb push &lt;local&gt; &lt;remote&gt;</code></td>\n      <td>Copies the local to the device at remote</td>\n    </tr>\n    <tr>\n      <td><code>adb pull &lt;remote&gt; &lt;local&gt;</code></td>\n      <td>Copies the remote from the device to local</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"examples-2\">Examples</h4>\n\n<pre><code>$ echo \"This is a test\" &gt; test.txt\n$ adb push  test.txt /sdcard/test.txt\n$ adb pull /sdcard/test.txt pulledTest.txt\n</code></pre>\n\n<h3 id=\"remote-shell\">Remote Shell</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>adb shell &lt;command&gt;</code></td>\n      <td>Runs the specified command on device (most unix commands work here)</td>\n    </tr>\n    <tr>\n      <td><code>adb shell wm size</code></td>\n      <td>Displays the current screen resolution</td>\n    </tr>\n    <tr>\n      <td><code>adb shell wm size WxH</code></td>\n      <td>Sets the resolution to WxH</td>\n    </tr>\n    <tr>\n      <td><code>adb shell pm list packages</code></td>\n      <td>Lists all installed packages</td>\n    </tr>\n    <tr>\n      <td><code>adb shell pm list packages -3</code></td>\n      <td>Lists all installed 3rd-party packages</td>\n    </tr>\n    <tr>\n      <td><code>adb shell monkey -p app.package.name</code></td>\n      <td>Starts the specified package</td>\n    </tr>\n  </tbody>\n</table>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2018-03-06"
},{
  "id": "sheets/Html/appcache",
  "title": "Appcache",
  "url": "/sheets/Html/appcache",
  "category": "HTML",
  "keywords": null,
  "content_html": "<h3 id=\"format\">Format</h3>\n\n<pre><code>CACHE MANIFEST\n# version\n\nCACHE:\nhttp://www.google.com/jsapi\n/assets/app.js\n/assets/bg.png\n\nNETWORK:\n*\n</code></pre>\n\n<p>Note that Appcache is deprecated!</p>\n\n<p>See: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Using_the_application_cache\">Using the application cache</a> <em>(developer.mozilla.org)</em></p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Html/applinks",
  "title": "Applinks",
  "url": "/sheets/Html/applinks",
  "category": "HTML",
  "keywords": null,
  "content_html": "<pre><code>&lt;meta property=\"al:ios:url\" content=\"applinks://docs\" /&gt;\n&lt;meta property=\"al:ios:app_store_id\" content=\"12345\" /&gt;\n&lt;meta property=\"al:ios:app_name\" content=\"App Links\" /&gt;\n\n&lt;meta property=\"al:android:url\" content=\"applinks://docs\" /&gt;\n&lt;meta property=\"al:android:app_name\" content=\"App Links\" /&gt;\n&lt;meta property=\"al:android:package\" content=\"org.applinks\" /&gt;\n\n&lt;meta property=\"al:web:url\" content=\"http://applinks.org/documentation\" /&gt;\n</code></pre>\n\n<h3 id=\"device-types\">Device types</h3>\n\n<ul>\n  <li><code>ios</code></li>\n  <li><code>ipad</code></li>\n  <li><code>iphone</code></li>\n  <li><code>android</code></li>\n  <li><code>windows_phone</code></li>\n  <li><code>web</code></li>\n</ul>\n\n<h3 id=\"reference\">Reference</h3>\n\n<ul>\n  <li><a href=\"http://applinks.org/documentation/\">applinks.org</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/React/awesome-redux",
  "title": "Awesome Redux",
  "url": "/sheets/React/awesome-redux",
  "category": "React",
  "keywords": null,
  "content_html": "<h3 id=\"redux-actions\">redux-actions</h3>\n\n<p class=\"-setup\">Create action creators in flux standard action format.</p>\n\n<pre><code class=\"language-js\">increment = createAction('INCREMENT', amount =&gt; amount)\nincrement = createAction('INCREMENT')  // same\n</code></pre>\n\n<pre><code class=\"language-js\">increment(42) === { type: 'INCREMENT', payload: 42 }\n</code></pre>\n\n<pre><code class=\"language-js\">// Errors are handled for you:\nerr = new Error()\nincrement(err) === { type: 'INCREMENT', payload: err, error: true }\n</code></pre>\n\n<p class=\"-crosslink\"><a href=\"https://www.npmjs.com/package/redux-actions\">redux-actions</a></p>\n\n<h3 id=\"flux-standard-action\">flux-standard-action</h3>\n\n<p class=\"-setup\">A standard for flux action objects. An action may have an <code>error</code>, <code>payload</code> and <code>meta</code> and nothing else.</p>\n\n<pre><code class=\"language-js\">{ type: 'ADD_TODO', payload: { text: 'Work it' } }\n{ type: 'ADD_TODO', payload: new Error(), error: true }\n</code></pre>\n\n<p class=\"-crosslink\"><a href=\"https://github.com/acdlite/flux-standard-action\">flux-standard-action</a></p>\n\n<h3 id=\"redux-multi\">redux-multi</h3>\n\n<p class=\"-setup\">Dispatch multiple actions in one action creator.</p>\n\n<pre><code class=\"language-js\">store.dispatch([\n  { type: 'INCREMENT', payload: 2 },\n  { type: 'INCREMENT', payload: 3 }\n])\n</code></pre>\n\n<p class=\"-crosslink\"><a href=\"https://github.com/ashaffer/redux-multi\">redux-multi</a></p>\n\n<h3 id=\"reduce-reducers\">reduce-reducers</h3>\n<p class=\"-setup\">Combines reducers (like <em>combineReducers()</em>), but without namespacing magic.</p>\n\n<pre><code class=\"language-js\">re = reduceReducers(\n  (state, action) =&gt; state + action.number,\n  (state, action) =&gt; state + action.number\n)\n\nre(10, { number: 2 })  //=&gt; 14\n</code></pre>\n\n<p class=\"-crosslink\"><a href=\"https://www.npmjs.com/package/reduce-reducers\">reduce-reducers</a></p>\n\n<h3 id=\"redux-logger\">redux-logger</h3>\n\n<p class=\"-setup\">Logs actions to your console.</p>\n\n<pre><code class=\"language-js\">// Nothing to see here\n</code></pre>\n\n<p class=\"-crosslink\"><a href=\"https://github.com/evgenyrodionov/redux-logger\">redux-logger</a></p>\n\n<h2 id=\"async\">Async</h2>\n\n<h3 id=\"redux-promise\">redux-promise</h3>\n\n<p class=\"-setup\">Pass promises to actions. Dispatches a flux-standard-action.</p>\n\n<pre><code class=\"language-js\">increment = createAction('INCREMENT')  // redux-actions\nincrement(Promise.resolve(42))\n</code></pre>\n\n<p class=\"-crosslink\"><a href=\"https://github.com/acdlite/redux-promise\">redux-promise</a></p>\n\n<h3 id=\"redux-promises\">redux-promises</h3>\n\n<p class=\"-setup\">Sorta like that, too. Works by letting you pass <em>thunks</em> (functions) to <code>dispatch()</code>. Also has ‘idle checking’.</p>\n\n<pre><code class=\"language-js\">fetchData = (url) =&gt; (dispatch) =&gt; {\n  dispatch({ type: 'FETCH_REQUEST' })\n  fetch(url)\n    .then((data) =&gt; dispatch({ type: 'FETCH_DONE', data })\n    .catch((error) =&gt; dispatch({ type: 'FETCH_ERROR', error })\n})\n\nstore.dispatch(fetchData('/posts'))\n</code></pre>\n\n<pre><code class=\"language-js\">// That's actually shorthand for:\nfetchData('/posts')(store.dispatch)\n</code></pre>\n\n<p class=\"-crosslink\"><a href=\"https://www.npmjs.com/package/redux-promises\">redux-promises</a></p>\n\n<h3 id=\"redux-effects\">redux-effects</h3>\n\n<p class=\"-setup\">Pass side effects declaratively to keep your actions pure.</p>\n\n<pre><code class=\"language-js\">{\n  type: 'EFFECT_COMPOSE',\n  payload: {\n    type: 'FETCH'\n    payload: {url: '/some/thing', method: 'GET'}\n  },\n  meta: {\n    steps: [ [success, failure] ]\n  }\n}\n</code></pre>\n\n<p class=\"-crosslink\"><a href=\"https://www.npmjs.com/package/redux-effects\">redux-effects</a></p>\n\n<h3 id=\"redux-thunk\">redux-thunk</h3>\n\n<p class=\"-setup\">Pass “thunks” to as actions. Extremely similar to redux-promises, but has support for getState.</p>\n\n<pre><code class=\"language-js\">fetchData = (url) =&gt; (dispatch, getState) =&gt; {\n  dispatch({ type: 'FETCH_REQUEST' })\n  fetch(url)\n    .then((data) =&gt; dispatch({ type: 'FETCH_DONE', data })\n    .catch((error) =&gt; dispatch({ type: 'FETCH_ERROR', error })\n})\n\nstore.dispatch(fetchData('/posts'))\n</code></pre>\n\n<pre><code class=\"language-js\">// That's actually shorthand for:\nfetchData('/posts')(store.dispatch, store.getState)\n</code></pre>\n\n<pre><code class=\"language-js\">// Optional: since fetchData returns a promise, it can be chained\n// for server-side rendering\nstore.dispatch(fetchPosts()).then(() =&gt; {\n  ReactDOMServer.renderToString(&lt;MyApp store={store} /&gt;)\n})\n</code></pre>\n\n<p class=\"-crosslink\"><a href=\"https://www.npmjs.com/package/redux-thunk\">redux-thunk</a></p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2017-11-19"
},{
  "id": "sheets/CSS/bootstrap",
  "title": "Bootstrap",
  "url": "/sheets/CSS/bootstrap",
  "category": "CSS",
  "keywords": null,
  "content_html": "<h3 id=\"screen-sizes\">Screen sizes</h3>\n\n<pre><code>         768          992                1200\n'     '     '     '     '     '     '     '     '\n&lt;---------^------------^------------------^---------&gt;\n     xs         sm              md             lg\n   (phone)   (tablet)        (laptop)       (desktop)\n</code></pre>\n\n<p>Min:</p>\n\n<pre><code class=\"language-scss\">@media (min-width: @screen-sm-min) // &gt;= 768px (small tablet)\n@media (min-width: @screen-md-min) // &gt;= 992px (medium laptop)\n@media (min-width: @screen-lg-min) // &gt;= 1200px (large desktop)\n</code></pre>\n\n<p>Max:</p>\n\n<pre><code class=\"language-scss\">@media (max-width: @screen-xs-max) { // &lt; 768px (xsmall phone)\n@media (max-width: @screen-sm-max) { // &lt; 992px (small tablet)\n@media (max-width: @screen-md-max) { // &lt; 1200px (medium laptop)\n</code></pre>\n\n<h3 id=\"columns\">Columns</h3>\n\n<pre><code class=\"language-scss\">.container\n.container-fluid\n</code></pre>\n\n<pre><code class=\"language-scss\">.col-xs-1\n.col-sm-1\n.col-md-1\n.col-lg-1\n.col-md-offset-1\n</code></pre>\n\n<p>Mixins:</p>\n\n<pre><code class=\"language-scss\">@include make-xs-column(12);\n@include make-sm-column(6);\n@include make-md-column(3);\n@include make-lg-column(3);\n</code></pre>\n\n<pre><code class=\"language-scss\">@include make-sm-column-offset(1);\n@include make-sm-column-push(1);\n@include make-sm-column-pull(1);\n</code></pre>\n\n<h3 id=\"utilities\">Utilities</h3>\n\n<pre><code class=\"language-scss\">.pull-left\n.pull-right\n</code></pre>\n\n<pre><code class=\"language-scss\">.hidden-{xs,sm,md,lg}\n.visible-{xs,sm,md,lg}\n.visible-{xs,sm,md,lg,print}-{block,inline,inline-block}\n</code></pre>\n\n<pre><code class=\"language-scss\">.center-block  /* margin: auto */\n.clearfix\n.text-{center,left,right,justify,nowrap}\n.text-{lowercase,uppercase,capitalize}\n</code></pre>\n\n<pre><code class=\"language-scss\">.show\n.hidden\n</code></pre>\n\n<h3 id=\"modal\">Modal</h3>\n\n<pre><code class=\"language-html\">&lt;a data-toggle='modal' data-target='#new'&gt;\n</code></pre>\n\n<pre><code class=\"language-haml\">#new.modal.fade(role='dialog')\n  .modal-dialog // .modal-lg, .modal-sm\n    .modal-content\n      .modal-header\n        %h4.modal-title hello\n        %button.close{type: 'button', data: { dismiss: 'modal' }}\n          %span{'aria-hidden' =&gt; true}!= \"&amp;times;\"\n          %span.sr-only Close\n      .modal-body\n        ...\n      .modal-footer\n        ...\n</code></pre>\n\n<h3 id=\"modal-via-ajax-rails\">Modal via ajax (Rails)</h3>\n\n<pre><code class=\"language-haml\">%button.btn{data: { |\n  toggle: 'modal', |\n  target: '#chooseTheme', |\n  remote: '/path/to/remote'}\n  Change Theme\n</code></pre>\n\n<pre><code class=\"language-haml\">.modal.fade#chooseTheme\n  .modal-dialog.modal-xl\n    .modal-content\n      .modal-header\n        %h4.modal-title Choose a theme\n\n      .modal-body\n        .spinner-panel.-lg\n          %i\n</code></pre>\n\n<h3 id=\"tooltip\">Tooltip</h3>\n\n<pre><code class=\"language-html\">&lt;span\n  data-toggle='tooltip'\n  title='tooltip'\n  data-placement='left|top|bottom|right'&gt;\n</code></pre>\n\n<pre><code class=\"language-js\">$(function () {\n  $('[data-toogle~=\"tooltip\"]').tooltip()\n})\n</code></pre>\n\n<h3 id=\"input-groups\">Input groups</h3>\n\n<pre><code class=\"language-haml\">.input-group\n    input.form-control(type='text')\n    .input-group-addon years\n</code></pre>",
  "intro_html": "",
  "description_html": "<p>.container .row .col-md-6, @screen-sm-min, .form-control, grids, .modal-content, tooltips, and other Bootstrap CSS examples.</p>",
  "tags": null,
  "updated": null
},{
  "id": "sheets/JavaScript/bower-api",
  "title": "Bower API",
  "url": "/sheets/JavaScript/bower-api",
  "category": "JavaScript libraries",
  "keywords": null,
  "content_html": "<pre><code class=\"language-js\">require('bower').config\n</code></pre>\n\n<pre><code class=\"language-js\">{ cwd: '/Users/rsc',\n  directory: 'bower_components',\n  registry:\n   { search: [ 'https://bower.herokuapp.com' ],\n     register: 'https://bower.herokuapp.com',\n     publish: 'https://bower.herokuapp.com' },\n  shorthandResolver: 'git://github.com//.git',\n  tmp: '/var/folders/5y/190gjd_j2c5bfkn563dk2xdr0000gn/T/rsc/bower',\n  timeout: 30000,\n  ca: { search: [] },\n  strictSsl: true,\n  userAgent: 'node/v0.10.33 darwin x64',\n  color: true,\n  storage:\n   { packages: '/Users/rsc/.cache/bower/packages',\n     links: '/Users/rsc/.local/share/bower/links',\n     completion: '/Users/rsc/.local/share/bower/completion',\n     registry: '/Users/rsc/.cache/bower/registry',\n     empty: '/Users/rsc/.local/share/bower/empty' },\n  interactive: false,\n  argv: { remain: [], cooked: [], original: [] } }\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/JavaScript/canvas",
  "title": "Canvas",
  "url": "/sheets/JavaScript/canvas",
  "category": "JavaScript",
  "keywords": null,
  "content_html": "<h3 id=\"getting-the-context\">Getting the context</h3>\n\n<pre><code class=\"language-js\">var canvas = document.getElementById('c')\nvar c = canvas.getContext('2d')\n</code></pre>\n\n<h3 id=\"basic-drawing\">Basic drawing</h3>\n\n<pre><code class=\"language-js\">// x = 10, y = 20, width = 200, height = 100\nc.fillStyle = '#ff0000'\nc.strokeStyle = '#ff00ff'\n</code></pre>\n\n<pre><code class=\"language-js\">c.lineWidth = 5\nc.lineCap = 'round'\n</code></pre>\n\n<pre><code class=\"language-js\">c.fillRect(10, 20, 200, 100)\n</code></pre>\n\n<pre><code class=\"language-js\">c.stroke()\nc.fill()\n</code></pre>\n\n<h3 id=\"saving-and-restoring\">Saving and restoring</h3>\n\n<pre><code class=\"language-js\">c.save()\n</code></pre>\n\n<pre><code class=\"language-js\">c.restore()\n</code></pre>\n\n<p>Saves: <code>strokeStyle</code> <code>fillStyle</code> <code>globalAlpha</code> <code>lineWidth</code> <code>lineCap</code> <code>lineJoin</code> <code>miterLimit</code> <code>shadowOffsetX</code> <code>shadowOffsetY</code> <code>shadowBlur</code> <code>shadowColor</code>\n<code>globalCompositeOperation</code>, Transformations (<code>translate</code> <code>rotate</code> <code>scale</code> <code>transform</code> <code>setTransform</code>), Clipping path</p>\n\n<h3 id=\"animation\">Animation</h3>\n\n<pre><code class=\"language-js\">onframe: function() {\n  c.clearRect(0, 0, w, h)\n}\n</code></pre>\n\n<h3 id=\"transformations\">Transformations</h3>\n\n<pre><code class=\"language-js\">c.translate(0, 0)\nc.rotate(Math.PI*2/5)\nc.scale(1.0, 1.0)\n</code></pre>\n\n<p>To rotate along origin:</p>\n\n<pre><code class=\"language-js\">c.translate(ox, oy)\nc.rotate(theta)\nc.translate(-ox, -oy)\n</code></pre>\n\n<p>To scale along origin:</p>\n\n<pre><code class=\"language-js\">c.translate(-ox*x, -oy*y)\nc.scale(x, y)\nc.translate(ox/x, oy/y)\n</code></pre>\n\n<p>See <a href=\"https://developer.mozilla.org/en-US/docs/Canvas_tutorial/Transformations\">MDN: Transformations</a>.</p>\n\n<h3 id=\"image-drawing\">Image drawing</h3>\n\n<pre><code class=\"language-js\">c.drawImage(image, dx, dy, [dw, dh]);\n/* `image` can be HTML Image/Canvas/Video */\n</code></pre>\n\n<p>See <a href=\"https://developer.mozilla.org/en-US/docs/Canvas_tutorial/Using_images\">MDN: Images</a>.</p>\n\n<h3 id=\"colors-styles-shadows\">Colors, styles shadows</h3>\n\n<pre><code class=\"language-js\">c.strokeStyle = '#ff00ff';\nc.fillStyle = '#ff00ff';\n</code></pre>\n\n<pre><code class=\"language-js\">c.shadowOffsetX = 0;\nc.shadowOffsetY = 0;\nc.shadowOffsetBlur = 3.0;\nc.shadowColor = 'rgba(0,0,0,0.2)';\n</code></pre>\n\n<p>See <a href=\"https://developer.mozilla.org/en-US/docs/Canvas_tutorial/Applying_styles_and_colors\">MDN: Styles</a></p>\n\n<h3 id=\"gradients\">Gradients</h3>\n\n<pre><code class=\"language-js\">gr = c.createLinearGradient(x0,y0,x1,y1)\ngr = c.createRadialGradient(x0,y0,r0,x1,y1,r1)\npat = c.createPattern(image, 'repeat-x')\n</code></pre>\n\n<pre><code class=\"language-js\">c.fillStyle = gr\n</code></pre>\n\n<h3 id=\"drawing\">Drawing</h3>\n\n<pre><code class=\"language-js\">c.beginPath()\nc.moveTo(x,y)\nc.lineTo(x,y)\nc.quadraticCurveTo(cpx,cpy,x,y)\nc.bezierCurveTo(cp1x,cp1y,cp2x,cp2y)\nc.arcTo(...)\nc.arc(...)\nc.closePath()\n</code></pre>\n\n<h3 id=\"more-resources\">More resources</h3>\n\n<ul>\n  <li><a href=\"http://www.nihilogic.dk/labs/canvas_sheet/HTML5_Canvas_Cheat_Sheet.pdf\">Canvas Cheatsheet PDF</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/CSS/css-antialias",
  "title": "CSS antialiasing",
  "url": "/sheets/CSS/css-antialias",
  "category": "CSS",
  "keywords": null,
  "content_html": "<h3 class=\"-prime\" id=\"antialias\">Antialias</h3>\n\n<pre><code class=\"language-css\">* {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</code></pre>\n\n<h3 id=\"support\">Support</h3>\n\n<ul>\n  <li>Firefox 25+ on OSX</li>\n  <li>Webkits (Chrome, Safari, etc)</li>\n</ul>\n\n<h2 class=\"-one-column\" id=\"references\">References</h2>\n\n<ul class=\"-also-see\">\n  <li><a href=\"http://maxvoltar.com/archive/-webkit-font-smoothing\">maxvoltar.com</a></li>\n  <li><a href=\"http://maximilianhoffmann.com/posts/better-font-rendering-on-osx\">maximilianhoffman.com</a></li>\n  <li><a href=\"http://ilikekillnerds.com/2010/12/a-solution-to-stop-font-face-fonts-looking-bold-on-mac-browsers/\">ilikekillnerds.com</a></li>\n</ul>",
  "intro_html": "<p>Here’s a 4-line snippet on how to get beautiful, antialiased text with CSS.</p>",
  "description_html": "",
  "tags": null,
  "updated": "2017-10-13"
},{
  "id": "sheets/CSS/css-flexbox",
  "title": "CSS flexbox",
  "url": "/sheets/CSS/css-flexbox",
  "category": "CSS",
  "keywords": null,
  "content_html": "<h3 id=\"simple-example\">Simple example</h3>\n\n<pre><code class=\"language-css\">.container {\n  display: flex;\n}\n</code></pre>\n\n<pre><code class=\"language-css\">.container &gt; div {\n  flex: 1 1 auto;\n}\n</code></pre>\n\n<h3 id=\"container\">Container</h3>\n\n<pre class=\"-setup\"><code class=\"language-css\">.container {\n</code></pre>\n\n<pre><code class=\"language-css\">  display: flex;\n  display: inline-flex;\n</code></pre>\n\n<pre><code class=\"language-css\">  flex-direction: row;            /* ltr - default */\n  flex-direction: row-reverse;    /* rtl */\n  flex-direction: column;         /* top-bottom */\n  flex-direction: column-reverse; /* bottom-top */\n</code></pre>\n\n<pre><code class=\"language-css\">  flex-wrap: nowrap; /* one-line */\n  flex-wrap: wrap;   /* multi-line */\n</code></pre>\n\n<pre><code class=\"language-css\">  align-items: flex-start; /* vertical-align to top */\n  align-items: flex-end;   /* vertical-align to bottom */\n  align-items: center;     /* vertical-align to center */\n  align-items: stretch;    /* same height on all (default) */\n</code></pre>\n\n<pre><code class=\"language-css\">  justify-content: flex-start;    /* [xxx        ] */\n  justify-content: center;        /* [    xxx    ] */\n  justify-content: flex-end;      /* [        xxx] */\n  justify-content: space-between; /* [x    x    x] */\n  justify-content: space-around;  /* [ x   x   x ] */\n  justify-content: space-evenly;  /* [  x  x  x  ] */\n</code></pre>\n\n<pre class=\"-setup\"><code class=\"language-css\">}\n</code></pre>\n\n<h3 id=\"child\">Child</h3>\n\n<pre class=\"-setup\"><code class=\"language-css\">.container &gt; div {\n</code></pre>\n\n<pre><code class=\"language-css\">  /* This: */\n  flex: 1 0 auto;\n\n  /* Is equivalent to this: */\n  flex-grow: 1;\n  flex-shrink: 0;\n  flex-basis: auto;\n</code></pre>\n\n<pre><code class=\"language-css\">  order: 1;\n</code></pre>\n\n<pre><code class=\"language-css\">  align-self: flex-start;  /* left */\n  margin-left: auto;       /* right */\n</code></pre>\n\n<pre class=\"-setup\"><code class=\"language-css\">}\n</code></pre>\n\n<h2 id=\"tricks\">Tricks</h2>\n\n<h3 id=\"vertical-center\">Vertical center</h3>\n\n<pre><code class=\"language-css\">.container {\n  display: flex;\n}\n\n.container &gt; div {\n  width: 100px;\n  height: 100px;\n  margin: auto;\n}\n</code></pre>\n\n<h3 id=\"vertical-center-2\">Vertical center (2)</h3>\n\n<pre><code class=\"language-css\">.container {\n  display: flex;\n  align-items: center;     /* vertical */\n  justify-content: center; /* horizontal */\n}\n</code></pre>\n\n<h3 id=\"reordering\">Reordering</h3>\n\n<pre><code class=\"language-css\">.container &gt; .top {\n order: 1;\n}\n\n.container &gt; .bottom {\n order: 2;\n}\n</code></pre>\n\n<h3 id=\"mobile-layout\">Mobile layout</h3>\n\n<pre><code class=\"language-css\">.container {\n  display: flex;\n  flex-direction: column;\n}\n\n.container &gt; .top {\n  flex: 0 0 100px;\n}\n\n.container &gt; .content {\n  flex: 1 0 auto;\n}\n</code></pre>\n\n<p>A fixed-height top bar and a dynamic-height content area.</p>\n\n<h3 id=\"table-like\">Table-like</h3>\n\n<pre><code class=\"language-css\">.container {\n  display: flex;\n}\n\n/* the 'px' values here are just suggested percentages */\n.container &gt; .checkbox { flex: 1 0 20px; }\n.container &gt; .subject  { flex: 1 0 400px; }\n.container &gt; .date     { flex: 1 0 120px; }\n</code></pre>\n\n<p>This creates columns that have different widths, but size accordingly according\nto the circumstances.</p>\n\n<h3 id=\"vertical\">Vertical</h3>\n\n<pre><code class=\"language-css\">.container {\n  align-items: center;\n}\n</code></pre>\n\n<p>Vertically-center all items.</p>\n\n<h3 id=\"left-and-right\">Left and right</h3>\n\n<pre><code class=\"language-css\">.menu &gt; .left  { align-self: flex-start; }\n.menu &gt; .right { align-self: flex-end; }\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"references\">References</h2>\n\n<ul>\n  <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes\">MDN: Using CSS flexbox</a></li>\n  <li><a href=\"http://www.sketchingwithcss.com/samplechapter/cheatsheet.html\">Ultimate flexbox cheatsheet</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-06-13"
},{
  "id": "sheets/CSS/css-grid",
  "title": "CSS Grid",
  "url": "/sheets/CSS/css-grid",
  "category": "CSS",
  "keywords": null,
  "content_html": "<h3 id=\"container\">Container</h3>\n\n<pre class=\"-setup\"><code class=\"language-css\">.grid-container {\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Display properties */\n  display: grid;\n  display: inline-grid;\n  display: subgrid;\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Columns and rows */\n  grid-template-columns: 1rem 2rem 1rem; /* Measurement units */\n  grid-template-columns: 25% 50% 25%; /* Percentage units */\n  grid-template-columns: 1rem auto 1rem 2fr; /* Fill remaining widths with auto or fr units */\n  grid-template-columns: repeat(12, 1fr); /* Repeat columns without needing to write them */\n  \n  grid-template-rows: 1rem 10% auto repeat(5, 10px); /* Mix any group, same rules work for rows */\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Automatic columns and rows */\n\n  grid-auto-columns: 10px; /* No matter how many columns of content end up in the grid, each column will be this same width */\n  grid-auto-rows: 1rem; /* No matter how many rows of content end up in the grid, each row will be this same height */\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Areas */\n  grid-template-areas:\n    \"header header\"\n    \"main aside\"\n    \"footer footer\"; /* Grid-style */\n\n  grid-template-areas: \"header header\" \"main aside\" \"footer footer\"; /* Inline-style */\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Template shorthand */\n  grid-template:\n    \"header header\" auto\n    \"main aside\" 100vh\n    \"footer footer\" 10rem\n    / 80% 20%;\n\n  /* The above is the same as below long-hand */\n  grid-template-columns: 80% 20%;\n  grid-template-rows: auto 100vh 10rem;\n  grid-template-areas:\n    \"header header\"\n    \"main aside\"\n    \"footer footer\";\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Gaps */\n  grid-row-gap: 1rem;\n  grid-column-gap: 0.5rem; /* Define values separately */\n\n  grid-gap: 1rem 0.5rem; /* Short-hand for row / column */\n  grid-gap: 1rem; /* Gap in both dimensions */\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Item justification (horizontal or column alignment) */\n  justify-items: start; /* Align items to the left */\n  justify-items: center; /* Align items centered within its column */\n  justify-items: end; /* Align items to the right */\n  justify-items: stretch; /* (default) Fills available area (horizontally) */\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Item alignment (vertical or row alignment) */\n  align-items: start; /* Align items to the top */\n  align-items: center; /* Align items centered within its row */\n  align-items: end; /* Align items to the bottom */\n  align-items: stretch; /* (default) Fills available area (vertically) */\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Place item shorthand */\n  place-items: start stretch;\n\n  /* The above is the same as below long-hand */\n  align-items: start;\n  justify-items: stretch;\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Content justification (horizontal or column alignment) */\n  justify-content: start; /* Align content to the left */\n  justify-content: center; /* Align content centered horizontally within the grid */\n  justify-content: end; /* Align content to the right */\n  justify-content: stretch; /* (default) Fills available area (horizontally) */\n\n  justify-content: space-around; /* Chooses a space for both sides of the columns like a left and right margin */\n  justify-content: space-between; /* Chooses a space to go between columns, no margins on outside of content */\n  justify-content: space-evenly; /* Chooses a space that goes between all columns and edges consistently */\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Content alignment (horizontal or column alignment) */\n  align-content: start; /* Align content to the top */\n  align-content: center; /* Align content centered vertically within the grid */\n  align-content: end; /* Align content to the bottom */\n  align-content: stretch; /* (default) Fills available area (vertically) */\n\n  align-content: space-around; /* Chooses a space for the top and bottom of the rows like a top and bottom margin */\n  align-content: space-between; /* Chooses a space to go between rows, no margins on outside of content */\n  align-content: space-evenly; /* Chooses a space that goes between all rows and edges consistently */\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Place item shorthand */\n  place-content: center start;\n\n  /* The above is the same as below long-hand */\n  align-content: center;\n  justify-content: start;\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Automatic grid positioning */\n\n  grid-auto-flow: row; /* Left-to-right rows, then top-to-bottom*/\n  grid-auto-flow: column; /* Top-to-bottom columns, then left-to-right */\n  grid-auto-flow: dense; /* Responds with best-guess on left-to-right, top-to-bottom order with advanced layouts */\n</code></pre>\n\n<pre><code class=\"language-css\">  /* There is one final shorthand for all container properties in one */\n\n  /* Explicit grid columns, rows, and areas */\n  grid:\n    \"header header\" auto\n    \"main aside\" 100vh\n    \"footer footer\" 10rem\n    / 80% 20%; /* You can include a template as the only value, which is equivalent to below */\n  grid-template:\n    \"header header\" auto\n    \"main aside\" 100vh\n    \"footer footer\" 10rem\n    / 80% 20%; /* Which is again equivalent to below */\n  grid-template-columns: 80% 20%;\n  grid-template-rows: auto 100vh 10rem;\n  grid-template-areas:\n    \"header header\"\n    \"main aside\"\n    \"footer footer\";\n\n  /* Automatic grid flows */\n  grid: 1rem / auto-flow dense 1fr; /* You can include rows, a flow, and automatic columns, which is equivalent to below */\n  grid-template-rows: 1rem;\n  grid-auto-flow: dense;\n  grid-auto-columns: 1fr;\n\n  grid: auto-flow dense 1rem / repeat(10, 10%); /* Conversely, you can do the same thing with automatic rows, and defined columns */\n  grid-auto-flow: dense;\n  grid-auto-rows: 1rem;\n  grid-template-columns: repeat(10, 10%);\n</code></pre>\n\n<pre class=\"-setup\"><code class=\"language-css\">}\n</code></pre>\n\n<h3 id=\"child\">Child</h3>\n\n<pre class=\"-setup\"><code class=\"language-css\">.grid-child {\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Column position */\n  grid-column-start: 1;\n  grid-column-end: 2;\n\n  grid-column: 1 / 2; /* Short hand */\n  grid-column: 1 / span 2; /* Span 2 columns without explicitly defining an endpoint */\n  grid-column: 1; /* Start in and occupy a single column */\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Row position */\n  grid-row-start: 2;\n  grid-row-end: 4;\n\n  grid-row: 2 / 4; /* Short hand */\n  grid-row: 2 / span 3;/* Span 3 rows without explicitly defining an endpoint */\n  grid-row: 1; /* Start in and occupy a single row */\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Area positioning */\n  grid-area: header; /* You can use a named grid area from the container */\n\n  grid-area: 2 / 1 / 4 / 2; /* Or you can use positioning. This is equivalent to... */\n  grid-row-start: 2;\n  grid-column-start: 1;\n  grid-row-end: 4;\n  grid-column-end: 2;\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Self justification (horizontal or column alignment) */\n  justify-self: start; /* Align item to the left */\n  justify-self: center; /* Align item centered within its column */\n  justify-self: end; /* Align item to the right */\n  justify-self: stretch; /* (default) Fills available area (horizontally) */\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Self alignment (vertical or row alignment) */\n  align-self: start; /* Align item to the top */\n  align-self: center; /* Align item centered within its row */\n  align-self: end; /* Align item to the bottom */\n  align-self: stretch; /* (default) Fills available area (vertically) */\n</code></pre>\n\n<pre><code class=\"language-css\">  /* Placement shorthand */\n  place-self: start stretch;\n\n  /* The above is the same as below long-hand */\n  align-self: start;\n  justify-self: stretch;\n</code></pre>\n\n<pre class=\"-setup\"><code class=\"language-css\">}\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"references\">References</h2>\n\n<ul>\n  <li><a href=\"http://grid.malven.co/\">GRID: A simple visual cheatsheet</a></li>\n  <li><a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\">CSS Tricks: A Complete Guide to Grid</a></li>\n  <li><a href=\"https://caniuse.com/#feat=css-grid\">Browser support</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2019-08-23"
},{
  "id": "sheets/CSS/css-system-font-stack",
  "title": "CSS system fonts",
  "url": "/sheets/CSS/css-system-font-stack",
  "category": "CSS",
  "keywords": null,
  "content_html": "<h3 id=\"system-fonts\">System fonts</h3>\n\n<pre><code class=\"language-css\">font-family: -apple-system, BlinkMacSystemFont,\n    \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\n    \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n</code></pre>\n\n<p>This uses whatever system font is available. See: <a href=\"https://medium.design/system-shock-6b1dc6d6596f?gi=90078e194544\">System shock - Designing Medium</a> <em>(medium.com)</em></p>\n\n<h3 id=\"explanation\">Explanation</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Font</th>\n      <th>OS</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>-apple-system</code></td>\n      <td>OS X (10.11+), iOS (9+)</td>\n    </tr>\n    <tr>\n      <td><code>BlinkMacSystemFont</code></td>\n      <td>OS X, Chrome</td>\n    </tr>\n    <tr>\n      <td><code>Segoe UI</code></td>\n      <td>Windows</td>\n    </tr>\n    <tr>\n      <td><code>Roboto</code></td>\n      <td>Android 4.0+</td>\n    </tr>\n    <tr>\n      <td><code>Oxygen</code></td>\n      <td>Linux, KDE</td>\n    </tr>\n    <tr>\n      <td><code>Ubuntu</code></td>\n      <td>Linux, Ubuntu</td>\n    </tr>\n    <tr>\n      <td><code>Cantarell</code></td>\n      <td>Linux, GNOME</td>\n    </tr>\n    <tr>\n      <td><code>Fira Sans</code></td>\n      <td>Firefox OS</td>\n    </tr>\n    <tr>\n      <td><code>Droid Sans</code></td>\n      <td>Android (until 3.2)</td>\n    </tr>\n    <tr>\n      <td><code>Helvetica Neue</code></td>\n      <td>OS X (10.9)</td>\n    </tr>\n  </tbody>\n</table>",
  "intro_html": "",
  "description_html": "",
  "tags": ["Featurable"],
  "updated": null
},{
  "id": "sheets/CSS/css-tricks",
  "title": "CSS tricks",
  "url": "/sheets/CSS/css-tricks",
  "category": "CSS",
  "keywords": null,
  "content_html": "<h3 id=\"heading-kerning-pairs-and-ligature\">Heading kerning pairs and ligature</h3>\n\n<pre><code class=\"language-css\">h1, h2, h3 {\n  text-rendering: optimizeLegibility;\n}\n</code></pre>\n\n<h3 id=\"native-like-ios-scrolling\">Native-like iOS scrolling</h3>\n\n<pre><code class=\"language-css\">-webkit-overflow-scrolling: touch;\noverflow-y: auto;\n</code></pre>\n\n<h3 id=\"gradient-text\">Gradient text</h3>\n\n<pre><code class=\"language-css\">background: -webkit-gradient(linear, left top, left bottom, from(#eee), to(#333));\n-webkit-background-clip: text;\n-webkit-text-fill-color: transparent;\n</code></pre>\n\n<h3 id=\"text-stroke\">Text stroke</h3>\n\n<pre><code class=\"language-css\">-webkit-text-stroke: 3px black;\n</code></pre>\n\n<p>See: <a href=\"http://www.webkit.org/blog/85/introducing-text-stroke/\">Introducing text stroke</a></p>\n\n<h3 id=\"ios-scrolling-prevention\">iOS Scrolling prevention</h3>\n\n<pre><code class=\"language-css\">document.ontouchstart = (e) -&gt;\n  $pane = $(e.target).closest('.scrollable&gt;div')\n  if $pane.length is 0 or $pane[0].scrollHeight &lt;= $pane.innerHeight()\n    e.preventDefault()\n</code></pre>\n\n<pre><code class=\"language-scss\">%ios-scrollable {\n  &amp;, &gt;div {\n    -webkit-overflow-scrolling: touch;\n    overflow: auto;\n  }\n\n  &gt;div {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n}\n</code></pre>\n\n<p>Relevant in iOS6, but maybe not anymore.</p>\n\n<h3 id=\"uiwebview-optimizations\">UIWebView optimizations</h3>\n\n<pre><code class=\"language-css\">* {\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\n  -webkit-user-select: none;                /* disable text select */\n  -webkit-touch-callout: none;              /* disable callout, image save panel (popup) */\n  -webkit-tap-highlight-color: transparent; /* \"turn off\" link highlight */\n}\n\na:focus {\n  outline: 0; // Firefox (remove border on link click)\n}\n</code></pre>\n\n<p>See: <a href=\"http://www.bitsandpix.com/entry/ios-webkit-uiwebview-remove-tapclick-highlightborder-with-css/\">http://www.bitsandpix.com/entry/ios-webkit-uiwebview-remove-tapclick-highlightborder-with-css/</a></p>\n\n<p>See: <a href=\"http://www.yuiblog.com/blog/2010/10/01/quick-tip-customizing-the-mobile-safari-tap-highlight-color/\">http://www.yuiblog.com/blog/2010/10/01/quick-tip-customizing-the-mobile-safari-tap-highlight-color/</a></p>\n\n<h2 class=\"-three-column\" id=\"browser-hacks\">Browser hacks</h2>\n\n<h3 id=\"disclaimer\">Disclaimer</h3>\n\n<p>Not recommended, but here they are if you ever need them. Note that vendor\nprefixes may go away eventually.</p>\n\n<h3 id=\"mozilla-only\">Mozilla-only</h3>\n\n<pre><code class=\"language-css\">@-moz-document url-prefix() {\n  .box { color: blue; }\n}\n</code></pre>\n\n<h3 id=\"webkit-only\">Webkit-only</h3>\n\n<pre><code class=\"language-css\">@media all and (-webkit-min-device-pixel-ratio: 1) {\n}\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/CSS/css",
  "title": "CSS",
  "url": "/sheets/CSS/css",
  "category": "CSS",
  "keywords": ["margin, padding, border","div, .class, #id, [attr]","font, background","display: block, inline, flex","Selectors","Properties"],
  "content_html": "<h2 class=\"-three-column\" id=\"basics\">Basics</h2>\n\n<h3 id=\"selectors\">Selectors</h3>\n\n<pre class=\"-setup\"><code class=\"language-css\">.class {\n  font-weight: bold;\n}\n</code></pre>\n\n<table>\n  <thead>\n    <tr>\n      <th>Selector</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>*</code></td>\n      <td>All elements</td>\n    </tr>\n    <tr>\n      <td><code>div</code></td>\n      <td>Element</td>\n    </tr>\n    <tr>\n      <td><code>.class</code></td>\n      <td>Class</td>\n    </tr>\n    <tr>\n      <td><code>#id</code></td>\n      <td>ID</td>\n    </tr>\n    <tr>\n      <td><code>[disabled]</code></td>\n      <td>Attribute</td>\n    </tr>\n    <tr>\n      <td><code>[role=\"dialog\"]</code></td>\n      <td>Attribute</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"combinators\">Combinators</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Selector</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>.parent .child</code></td>\n      <td>Descendant</td>\n    </tr>\n    <tr>\n      <td><code>.parent &gt; .child</code></td>\n      <td>Direct descendant</td>\n    </tr>\n    <tr>\n      <td><code>.child + .sibling</code></td>\n      <td>Adjacent sibling</td>\n    </tr>\n    <tr>\n      <td><code>.child ~ .sibling</code></td>\n      <td>Far sibling</td>\n    </tr>\n    <tr>\n      <td><code>.class1.class2</code></td>\n      <td>Have both classes</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"attribute-selectors\">Attribute selectors</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Selector</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>[role=\"dialog\"]</code></td>\n      <td><code>=</code> Exact</td>\n    </tr>\n    <tr>\n      <td><code>[class~=\"box\"]</code></td>\n      <td><code>~=</code> Has word</td>\n    </tr>\n    <tr>\n      <td><code>[class|=\"box\"]</code></td>\n      <td><code>|=</code> Exact or prefix (eg, <code>value-</code>)</td>\n    </tr>\n    <tr>\n      <td><code>[href$=\".doc\"]</code></td>\n      <td><code>$=</code> Ends in</td>\n    </tr>\n    <tr>\n      <td><code>[href^=\"/index\"]</code></td>\n      <td><code>^=</code> Begins with</td>\n    </tr>\n    <tr>\n      <td><code>[class*=\"-is-\"]</code></td>\n      <td><code>*=</code> Contains</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"pseudo-classes\">Pseudo-classes</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Selector</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>:target</code></td>\n      <td>eg, <code>h2#foo:target</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>:disabled</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>:focus</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>:active</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>:nth-child(3)</code></td>\n      <td>3rd child</td>\n    </tr>\n    <tr>\n      <td><code>:nth-child(3n+2)</code></td>\n      <td>2nd child in groups of 3</td>\n    </tr>\n    <tr>\n      <td><code>:nth-child(-n+4)</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>:nth-last-child(2)</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>:nth-of-type(2)</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>:checked</code></td>\n      <td>Checked inputs</td>\n    </tr>\n    <tr>\n      <td><code>:disabled</code></td>\n      <td>Disabled elements</td>\n    </tr>\n    <tr>\n      <td><code>:default</code></td>\n      <td>Default element in a group</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>:empty</code></td>\n      <td>Elements without children</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"pseudo-class-variations\">Pseudo-class variations</h3>\n\n<table class=\"-left-align\">\n  <thead>\n    <tr>\n      <th>Selector</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>:first-of-type</code></td>\n    </tr>\n    <tr>\n      <td><code>:last-of-type</code></td>\n    </tr>\n    <tr>\n      <td><code>:nth-of-type(2)</code></td>\n    </tr>\n    <tr>\n      <td><code>:only-of-type</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>:first-child</code></td>\n    </tr>\n    <tr>\n      <td><code>:last-child</code></td>\n    </tr>\n    <tr>\n      <td><code>:nth-child(2)</code></td>\n    </tr>\n    <tr>\n      <td><code>:only-child</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 class=\"-left-reference\" id=\"fonts\">Fonts</h2>\n\n<h3 id=\"properties\">Properties</h3>\n\n<table class=\"-key-values\">\n  <thead>\n    <tr>\n      <th>Property</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>font-family:</code></td>\n      <td><code>&lt;font&gt;, &lt;fontN&gt;</code></td>\n    </tr>\n    <tr>\n      <td><code>font-size:</code></td>\n      <td><code>&lt;size&gt;</code></td>\n    </tr>\n    <tr>\n      <td><code>letter-spacing:</code></td>\n      <td><code>&lt;size&gt;</code></td>\n    </tr>\n    <tr>\n      <td><code>line-height:</code></td>\n      <td><code>&lt;number&gt;</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>font-weight:</code></td>\n      <td><code>bold</code> <code>normal</code></td>\n    </tr>\n    <tr>\n      <td><code>font-style:</code></td>\n      <td><code>italic</code> <code>normal</code></td>\n    </tr>\n    <tr>\n      <td><code>text-decoration:</code></td>\n      <td><code>underline</code> <code>none</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>text-align:</code></td>\n      <td><code>left</code> <code>right</code> <code>center</code> <code>justify</code></td>\n    </tr>\n    <tr>\n      <td><code>text-transform:</code></td>\n      <td><code>capitalize</code> <code>uppercase</code> <code>lowercase</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 class=\"-prime\" id=\"shorthand\">Shorthand</h3>\n\n<table class=\"-css-breakdown\">\n  <thead>\n    <tr>\n      <th> </th>\n      <th>style</th>\n      <th>weight</th>\n      <th>size (required)</th>\n      <th> </th>\n      <th>line-height</th>\n      <th>family</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>font:</code></td>\n      <td><code>italic</code></td>\n      <td><code>400</code></td>\n      <td><code>14px</code></td>\n      <td><code>/</code></td>\n      <td><code>1.5</code></td>\n      <td><code>sans-serif</code></td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>style</td>\n      <td>weight</td>\n      <td>size (required)</td>\n      <td> </td>\n      <td>line-height</td>\n      <td>family (required)</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"example\">Example</h3>\n\n<pre><code class=\"language-css\">font-family: Arial;\nfont-size: 12pt;\nline-height: 1.5;\nletter-spacing: 0.02em;\ncolor: #aa3322;\n</code></pre>\n\n<h3 id=\"case\">Case</h3>\n\n<pre><code class=\"language-css\">text-transform: capitalize; /* Hello */\ntext-transform: uppercase; /* HELLO */\ntext-transform: lowercase; /* hello */\n</code></pre>\n\n<h2 class=\"-left-reference\" id=\"background\">Background</h2>\n\n<h3 id=\"properties-1\">Properties</h3>\n\n<table class=\"-key-values\">\n  <thead>\n    <tr>\n      <th>Property</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>background:</code></td>\n      <td><em>(Shorthand)</em></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>background-color:</code></td>\n      <td><code>&lt;color&gt;</code></td>\n    </tr>\n    <tr>\n      <td><code>background-image:</code></td>\n      <td><code>url(...)</code></td>\n    </tr>\n    <tr>\n      <td><code>background-position:</code></td>\n      <td><code>left/center/right</code> <code>top/center/bottom</code></td>\n    </tr>\n    <tr>\n      <td><code>background-size:</code></td>\n      <td><code>cover</code> <code>X Y</code></td>\n    </tr>\n    <tr>\n      <td><code>background-clip:</code></td>\n      <td><code>border-box</code> <code>padding-box</code> <code>content-box</code></td>\n    </tr>\n    <tr>\n      <td><code>background-repeat:</code></td>\n      <td><code>no-repeat</code> <code>repeat-x</code> <code>repeat-y</code></td>\n    </tr>\n    <tr>\n      <td><code>background-attachment:</code></td>\n      <td><code>scroll</code> <code>fixed</code> <code>local</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"shorthand-1\">Shorthand</h3>\n\n<table class=\"-css-breakdown\">\n  <thead>\n    <tr>\n      <th> </th>\n      <th>color</th>\n      <th>image</th>\n      <th>positionX</th>\n      <th>positionY</th>\n      <th> </th>\n      <th>size</th>\n      <th>repeat</th>\n      <th>attachment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>background:</code></td>\n      <td><code>#ff0</code></td>\n      <td><code>url(bg.jpg)</code></td>\n      <td><code>left</code></td>\n      <td><code>top</code></td>\n      <td><code>/</code></td>\n      <td><code>100px</code> <code>auto</code></td>\n      <td><code>no-repeat</code></td>\n      <td><code>fixed;</code></td>\n    </tr>\n    <tr>\n      <td><code>background:</code></td>\n      <td><code>#abc</code></td>\n      <td><code>url(bg.png)</code></td>\n      <td><code>center</code></td>\n      <td><code>center</code></td>\n      <td><code>/</code></td>\n      <td><code>cover</code></td>\n      <td><code>repeat-x</code></td>\n      <td><code>local;</code></td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>color</td>\n      <td>image</td>\n      <td>positionX</td>\n      <td>positionY</td>\n      <td> </td>\n      <td>size</td>\n      <td>repeat</td>\n      <td>attachment</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"multiple-backgrounds\">Multiple backgrounds</h3>\n\n<pre><code class=\"language-css\">background: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\n  url('background.jpg') center center / cover, #333;\n</code></pre>\n\n<h2 class=\"-left-reference\" id=\"animation\">Animation</h2>\n\n<h3 id=\"properties-2\">Properties</h3>\n\n<table class=\"-key-values\">\n  <thead>\n    <tr>\n      <th>Property</th>\n      <th>Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>animation:</code></td>\n      <td><em>(shorthand)</em></td>\n    </tr>\n    <tr>\n      <td><code>animation-name:</code></td>\n      <td><code>&lt;name&gt;</code></td>\n    </tr>\n    <tr>\n      <td><code>animation-duration:</code></td>\n      <td><code>&lt;time&gt;ms</code></td>\n    </tr>\n    <tr>\n      <td><code>animation-timing-function:</code></td>\n      <td><code>ease</code> <code>linear</code> <code>ease-in</code> <code>ease-out</code> <code>ease-in-out</code></td>\n    </tr>\n    <tr>\n      <td><code>animation-delay:</code></td>\n      <td><code>&lt;time&gt;ms</code></td>\n    </tr>\n    <tr>\n      <td><code>animation-iteration-count:</code></td>\n      <td><code>infinite</code> <code>&lt;number&gt;</code></td>\n    </tr>\n    <tr>\n      <td><code>animation-direction:</code></td>\n      <td><code>normal</code> <code>reverse</code> <code>alternate</code> <code>alternate-reverse</code></td>\n    </tr>\n    <tr>\n      <td><code>animation-fill-mode:</code></td>\n      <td><code>none</code> <code>forwards</code> <code>backwards</code> <code>both</code> <code>initial</code> <code>inherit</code></td>\n    </tr>\n    <tr>\n      <td><code>animation-play-state:</code></td>\n      <td><code>normal</code> <code>reverse</code> <code>alternate</code> <code>alternate-reverse</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"shorthand-2\">Shorthand</h3>\n\n<table class=\"-css-breakdown\">\n  <thead>\n    <tr>\n      <th> </th>\n      <th>name</th>\n      <th>duration</th>\n      <th>timing-function</th>\n      <th>delay</th>\n      <th>count</th>\n      <th>direction</th>\n      <th>fill-mode</th>\n      <th>play-state</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>animation:</code></td>\n      <td><code>bounce</code></td>\n      <td><code>300ms</code></td>\n      <td><code>linear</code></td>\n      <td><code>100ms</code></td>\n      <td><code>infinite</code></td>\n      <td><code>alternate-reverse</code></td>\n      <td><code>both</code></td>\n      <td><code>reverse</code></td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>name</td>\n      <td>duration</td>\n      <td>timing-function</td>\n      <td>delay</td>\n      <td>count</td>\n      <td>direction</td>\n      <td>fill-mode</td>\n      <td>play-state</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"example-1\">Example</h3>\n\n<pre><code class=\"language-css\">animation: bounce 300ms linear 0s infinite normal;\nanimation: bounce 300ms linear infinite;\nanimation: bounce 300ms linear infinite alternate-reverse;\nanimation: bounce 300ms linear 2s infinite alternate-reverse forwards normal;\n</code></pre>\n\n<h3 id=\"event\">Event</h3>\n\n<pre><code class=\"language-js\">.one('webkitAnimationEnd oanimationend msAnimationEnd animationend')\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/CSS/cssnext",
  "title": "cssnext",
  "url": "/sheets/CSS/cssnext",
  "category": "CSS",
  "keywords": null,
  "content_html": "<h3 id=\"variables\">Variables</h3>\n\n<pre><code class=\"language-scss\">:root {\n  --text-color: #30333a;\n}\n</code></pre>\n\n<pre><code class=\"language-scss\">body {\n  background: var(--text-color);\n  background: color(var(--text-color) shade(30%));\n}\n</code></pre>\n\n<h3 id=\"colors\">Colors</h3>\n\n<pre><code class=\"language-scss\">a {\n  /* Adjustments */\n  color: color(red alpha(-10%));\n  color: color(red tint(-10%));    /* lighten */\n  color: color(red shade(-10%));   /* darken */\n\n  /* Absolute */\n  color: color(red alpha(50%));\n  color: color(red hue(225));\n  color: color(red saturation(100%));\n  color: color(red lightness(50%));\n\n  color: gray(33);       /* rgb(33, 33, 33) */\n  color: gray(33%);      /* rgb(84, 84, 84) */\n  color: gray(33%, 50%); /* rgba(84, 84, 84, 0.5) */\n  color: #0000ff80;      /* rgba(0, 0, 255, 0.5) */\n\n  color: hwb(90, 0%, 0%, 0.5);     /* like hsl() but easier for humans */\n  color: hsl(90deg 90% 70%);       /* hsl(180, 90%, 70%) -- supports deg */\n  color: hsl(90deg 90% 70% / 30%); /* hsla(180, 90%, 70%, 0.3) */\n  color: rgb(30 60 90 / 30%);      /* rgba(30, 60, 90, 0.3) */\n}\n</code></pre>\n\n<p>Also see <a href=\"http://colorme.io/\">colorme.io</a>.</p>\n\n<h3 id=\"mixins\">Mixins</h3>\n\n<pre><code class=\"language-scss\">:root {\n  --centered: {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  };\n}\n\n.centered {\n  @apply --centered;\n}\n</code></pre>\n\n<h2 id=\"selectors\">Selectors</h2>\n\n<h3 id=\"nesting\">Nesting</h3>\n\n<pre><code class=\"language-scss\">.class-name {\n  &amp; .nesting { ··· }      /* direct nesting starts with &amp; */\n  @nest span &amp; { ··· }    /* complex nesting */\n  @media (min-width: 30em) { ··· }\n}\n</code></pre>\n\n<h3 id=\"custom-selectors\">Custom selectors</h3>\n\n<pre><code class=\"language-scss\">@custom-selector :--button input[type='submit'], input[type='button'];\n@custom-selector :--enter :hover, :focus;\n</code></pre>\n\n<pre class=\"-setup\"><code class=\"language-scss\">:--button { ··· }\n:--button:--enter { ··· }\n</code></pre>\n\n<h3 id=\"future-selectors\">Future selectors</h3>\n\n<pre><code class=\"language-scss\">:any-link { ··· }         /* :link, :visited */\np:matches(.a, .b) { ··· } /* p.a, p.b */\np:not(.a, .b) { ··· }     /* p:not(.a), p:not(.b) */\na::before { ··· }         /* a:before -- for IE compatibility */\n[frame=hsides i] { ··· }  /* [frame=hsides] -- but case insensitive */\n</code></pre>\n\n<h2 id=\"media-queries\">Media queries</h2>\n\n<h3 id=\"custom-media-queries\">Custom media queries</h3>\n\n<pre><code class=\"language-scss\">@custom-media --viewport-medium (width &lt;= 50rem);\n</code></pre>\n\n<pre><code class=\"language-scss\">@media (--viewport-medium) { ··· }\n</code></pre>\n\n<h3 id=\"media-query-ranges\">Media query ranges</h3>\n\n<pre><code class=\"language-scss\">@media (width &gt;= 500px) { ··· }    /* (min-width: 500px) */\n</code></pre>\n\n<h2 id=\"properties\">Properties</h2>\n\n<h3 id=\"property-fallbacks\">Property fallbacks</h3>\n\n<pre><code class=\"language-scss\">/* font-feature-settings fallback */\nh2 { font-variant-caps: small-caps; }\ntable { font-variant-numeric: lining-nums; }\n</code></pre>\n\n<pre><code class=\"language-scss\">div { filter: blur(4px); }          /* svg filter fallback */\ndiv { overflow-wrap: break-word; }  /* word-wrap fallback */\n</code></pre>\n\n<h3 id=\"autoprefixing\">Autoprefixing</h3>\n\n<pre><code class=\"language-scss\">div {\n  display: flex;\n}\n</code></pre>\n\n<pre><code class=\"language-scss\">/*\n * display: -webkit-box;\n * display: -ms-flexbox;\n * display: flex;\n */\n</code></pre>\n\n<h3 id=\"reset\">Reset</h3>\n\n<pre><code class=\"language-scss\">div {\n  all: initial;\n}\n</code></pre>\n\n<p>Sets animation, background, margin, padding, and so on.</p>\n\n<h2 class=\"-one-column\" id=\"references\">References</h2>\n\n<ul>\n  <li>Based on cssnext 2.9.0.</li>\n  <li><a href=\"http://cssnext.io/features/\">http://cssnext.io/features/</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": ["Featurable"],
  "updated": "2017-10-30"
},{
  "id": "sheets/CLI/curl",
  "title": "Curl",
  "url": "/sheets/CLI/curl",
  "category": "CLI",
  "keywords": null,
  "content_html": "<h2 id=\"options\">Options</h2>\n\n<h3 id=\"options-1\">Options</h3>\n\n<pre><code class=\"language-bash\">-o &lt;file&gt;    # --output: write to file\n-u user:pass # --user: Authentication\n</code></pre>\n\n<pre><code class=\"language-bash\">-v           # --verbose\n-vv          # Even more verbose\n-s           # --silent\n</code></pre>\n\n<pre><code class=\"language-bash\">-i           # --include: Include the HTTP-header in the output\n-I           # --head: headers only\n</code></pre>\n\n<h3 id=\"request\">Request</h3>\n\n<pre><code class=\"language-bash\">-X POST          # --request\n-L               # follow link if page redirects \n</code></pre>\n\n<h3 id=\"data\">Data</h3>\n\n<pre><code class=\"language-bash\">-d 'data'    # --data: HTTP post data, URL encoded (eg, status=\"Hello\")\n-d @file     # --data via file\n-G           # --get: send -d data via get\n</code></pre>\n\n<h3 id=\"headers\">Headers</h3>\n\n<pre><code class=\"language-bash\">-A &lt;str&gt;         # --user-agent\n-b name=val      # --cookie\n-b FILE          # --cookie\n-H \"X-Foo: y\"    # --header\n--compressed     # use deflate/gzip\n</code></pre>\n\n<h3 id=\"ssl\">SSL</h3>\n\n<pre><code class=\"language-bash\">    --cacert &lt;file&gt;\n    --capath &lt;dir&gt;\n</code></pre>\n\n<pre><code class=\"language-bash\">-E, --cert &lt;cert&gt;     # --cert: Client cert file\n    --cert-type       # der/pem/eng\n-k, --insecure        # for self-signed certs\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"examples\">Examples</h2>\n\n<pre><code class=\"language-bash\"># Post data:\ncurl -d password=x http://x.com/y\n</code></pre>\n\n<pre><code class=\"language-bash\"># Auth/data:\ncurl -u user:pass -d status=\"Hello\" http://twitter.com/statuses/update.xml\n</code></pre>\n\n<pre><code class=\"language-bash\"># multipart file upload\ncurl -v -include --form key1=value1 --form upload=@localfilename URL\n</code></pre>\n\n<pre><code class=\"language-bash\"># Use Curl to Check if a remote resource is available\n# details: https://matthewsetter.com/check-if-file-is-available-with-curl/\ncurl -o /dev/null --silent -Iw \"%{http_code}\" https://example.com/my.remote.tarball.gz\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-03-09"
},{
  "id": "sheets/Devops/docker-compose",
  "title": "docker-compose",
  "url": "/sheets/Devops/docker-compose",
  "category": "Devops",
  "keywords": null,
  "content_html": "<h3 id=\"basic-example\">Basic example</h3>\n\n<pre><code class=\"language-yaml\"># docker-compose.yml\nversion: '2'\n\nservices:\n  web:\n    build: .\n    # build from Dockerfile\n    context: ./Path\n    dockerfile: Dockerfile\n    ports:\n     - \"5000:5000\"\n    volumes:\n     - .:/code\n  redis:\n    image: redis\n</code></pre>\n\n<h3 id=\"commands\">Commands</h3>\n\n<pre><code class=\"language-sh\">docker-compose start\ndocker-compose stop\n</code></pre>\n\n<pre><code class=\"language-sh\">docker-compose pause\ndocker-compose unpause\n</code></pre>\n\n<pre><code class=\"language-sh\">docker-compose ps\ndocker-compose up\ndocker-compose down\n</code></pre>\n\n<h2 class=\"-three-column\" id=\"reference\">Reference</h2>\n\n<h3 id=\"building\">Building</h3>\n\n<pre><code class=\"language-yaml\">web:\n  # build from Dockerfile\n  build: .\n  args:     # Add build arguments\n    APP_HOME: app\n</code></pre>\n\n<pre><code class=\"language-yaml\">  # build from custom Dockerfile\n  build:\n    context: ./dir\n    dockerfile: Dockerfile.dev\n</code></pre>\n\n<pre><code class=\"language-yaml\">  # build from image\n  image: ubuntu\n  image: ubuntu:14.04\n  image: tutum/influxdb\n  image: example-registry:4000/postgresql\n  image: a4bc65fd\n</code></pre>\n\n<h3 id=\"ports\">Ports</h3>\n\n<pre><code class=\"language-yaml\">  ports:\n    - \"3000\"\n    - \"8000:80\"  # host:container\n</code></pre>\n\n<pre><code class=\"language-yaml\">  # expose ports to linked services (not to host)\n  expose: [\"3000\"]\n</code></pre>\n\n<h3 id=\"commands-1\">Commands</h3>\n\n<pre><code class=\"language-yaml\">  # command to execute\n  command: bundle exec thin -p 3000\n  command: [bundle, exec, thin, -p, 3000]\n</code></pre>\n\n<pre><code class=\"language-yaml\">  # override the entrypoint\n  entrypoint: /app/start.sh\n  entrypoint: [php, -d, vendor/bin/phpunit]\n</code></pre>\n\n<h3 id=\"environment-variables\">Environment variables</h3>\n\n<pre><code class=\"language-yaml\">  # environment vars\n  environment:\n    RACK_ENV: development\n  environment:\n    - RACK_ENV=development\n</code></pre>\n\n<pre><code class=\"language-yaml\">  # environment vars from file\n  env_file: .env\n  env_file: [.env, .development.env]\n</code></pre>\n\n<h3 id=\"dependencies\">Dependencies</h3>\n\n<pre><code class=\"language-yaml\">  # makes the `db` service available as the hostname `database`\n  # (implies depends_on)\n  links:\n    - db:database\n    - redis\n</code></pre>\n\n<pre><code class=\"language-yaml\">  # make sure `db` is alive before starting\n  depends_on:\n    - db\n</code></pre>\n\n<h3 id=\"other-options\">Other options</h3>\n\n<pre><code class=\"language-yaml\">  # make this service extend another\n  extends:\n    file: common.yml  # optional\n    service: webapp\n</code></pre>\n\n<pre><code class=\"language-yaml\">  volumes:\n    - /var/lib/mysql\n    - ./_data:/var/lib/mysql\n</code></pre>\n\n<h2 class=\"-three-column\" id=\"advanced-features\">Advanced features</h2>\n\n<h3 id=\"labels\">Labels</h3>\n\n<pre><code class=\"language-yaml\">services:\n  web:\n    labels:\n      com.example.description: \"Accounting web app\"\n</code></pre>\n\n<h3 id=\"dns-servers\">DNS servers</h3>\n\n<pre><code class=\"language-yaml\">services:\n  web:\n    dns: 8.8.8.8\n    dns:\n      - 8.8.8.8\n      - 8.8.4.4\n</code></pre>\n\n<h3 id=\"devices\">Devices</h3>\n\n<pre><code class=\"language-yaml\">services:\n  web:\n    devices:\n    - \"/dev/ttyUSB0:/dev/ttyUSB0\"\n</code></pre>\n\n<h3 id=\"external-links\">External links</h3>\n\n<pre><code class=\"language-yaml\">services:\n  web:\n    external_links:\n      - redis_1\n      - project_db_1:mysql\n</code></pre>\n\n<h3 id=\"hosts\">Hosts</h3>\n\n<pre><code class=\"language-yaml\">services:\n  web:\n    extra_hosts:\n      - \"somehost:192.168.1.100\"\n</code></pre>\n\n<h3 id=\"network\">Network</h3>\n\n<pre><code class=\"language-yaml\"># creates a custom network called `frontend`\nnetworks:\n  frontend:\n</code></pre>\n\n<h3 id=\"external-network\">External network</h3>\n\n<pre><code class=\"language-yaml\"># join a pre-existing network\nnetworks:\n  default:\n    external:\n      name: frontend\n</code></pre>\n\n<h3 id=\"volume\">Volume</h3>\n\n<pre><code class=\"language-yaml\"># Mount host paths or named volumes, specified as sub-options to a service\n  db:\n    image: postgres:latest\n    volumes:\n      - \"/var/run/postgres/postgres.sock:/var/run/postgres/postgres.sock\"\n      - \"dbdata:/var/lib/postgresql/data\"\n\nvolumes:\n  dbdata:\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-01-01"
},{
  "id": "sheets/Devops/docker",
  "title": "Docker CLI",
  "url": "/sheets/Devops/docker",
  "category": "Devops",
  "keywords": null,
  "content_html": "<h2 id=\"manage-images\">Manage images</h2>\n\n<h3 id=\"docker-build\"><code>docker build</code></h3>\n\n<pre><code class=\"language-yml\">docker build [options] .\n  -t \"app/container_name\"    # name\n  --build-arg APP_HOME=$APP_HOME    # Set build-time variables\n</code></pre>\n\n<p>Create an <code>image</code> from a Dockerfile.</p>\n\n<h3 id=\"docker-run\"><code>docker run</code></h3>\n\n<pre><code class=\"language-yml\">docker run [options] IMAGE\n  # see `docker create` for options\n</code></pre>\n\n<h4 id=\"example\">Example</h4>\n\n<pre><code>$ docker run -it debian:buster /bin/bash\n</code></pre>\n<p>Run a command in an <code>image</code>.</p>\n\n<h2 id=\"manage-containers\">Manage containers</h2>\n\n<h3 id=\"docker-create\"><code>docker create</code></h3>\n\n<pre><code class=\"language-yml\">docker create [options] IMAGE\n  -a, --attach               # attach stdout/err\n  -i, --interactive          # attach stdin (interactive)\n  -t, --tty                  # pseudo-tty\n      --name NAME            # name your image\n  -p, --publish 5000:5000    # port map (host:container)\n      --expose 5432          # expose a port to linked containers\n  -P, --publish-all          # publish all ports\n      --link container:alias # linking\n  -v, --volume `pwd`:/app    # mount (absolute paths needed)\n  -e, --env NAME=hello       # env vars\n</code></pre>\n\n<h4 id=\"example-1\">Example</h4>\n\n<pre><code>$ docker create --name app_redis_1 \\\n  --expose 6379 \\\n  redis:3.0.2\n</code></pre>\n\n<p>Create a <code>container</code> from an <code>image</code>.</p>\n\n<h3 id=\"docker-exec\"><code>docker exec</code></h3>\n\n<pre><code class=\"language-yml\">docker exec [options] CONTAINER COMMAND\n  -d, --detach        # run in background\n  -i, --interactive   # stdin\n  -t, --tty           # interactive\n</code></pre>\n\n<h4 id=\"example-2\">Example</h4>\n\n<pre><code>$ docker exec app_web_1 tail logs/development.log\n$ docker exec -t -i app_web_1 rails c\n</code></pre>\n\n<p>Run commands in a <code>container</code>.</p>\n\n<h3 id=\"docker-start\"><code>docker start</code></h3>\n\n<pre><code class=\"language-yml\">docker start [options] CONTAINER\n  -a, --attach        # attach stdout/err\n  -i, --interactive   # attach stdin\n\ndocker stop [options] CONTAINER\n</code></pre>\n\n<p>Start/stop a <code>container</code>.</p>\n\n<h3 id=\"docker-ps\"><code>docker ps</code></h3>\n\n<pre><code>$ docker ps\n$ docker ps -a\n$ docker kill $ID\n</code></pre>\n\n<p>Manage <code>container</code>s using ps/kill.</p>\n\n<h3 id=\"docker-logs\"><code>docker logs</code></h3>\n\n<pre><code>$ docker logs $ID\n$ docker logs $ID 2&gt;&amp;1 | less\n$ docker logs -f $ID # Follow log output\n</code></pre>\n\n<p>See what’s being logged in an <code>container</code>.</p>\n\n<h2 id=\"images\">Images</h2>\n\n<h3 id=\"docker-images\"><code>docker images</code></h3>\n\n<pre><code class=\"language-sh\">$ docker images\n  REPOSITORY   TAG        ID\n  ubuntu       12.10      b750fe78269d\n  me/myapp     latest     7b2431a8d968\n</code></pre>\n\n<pre><code class=\"language-sh\">$ docker images -a   # also show intermediate\n</code></pre>\n\n<p>Manages <code>image</code>s.</p>\n\n<h3 id=\"docker-rmi\"><code>docker rmi</code></h3>\n\n<pre><code class=\"language-yml\">docker rmi b750fe78269d\n</code></pre>\n\n<p>Deletes <code>image</code>s.</p>\n\n<h2 id=\"clean-up\">Clean up</h2>\n\n<h3 id=\"clean-all\">Clean all</h3>\n\n<pre><code class=\"language-sh\">docker system prune\n</code></pre>\n\n<p>Cleans up dangling images, containers, volumes, and networks (ie, not associated with a container)</p>\n\n<pre><code class=\"language-sh\">docker system prune -a\n</code></pre>\n\n<p>Additionally remove any stopped containers and all unused images (not just dangling images)</p>\n\n<h3 id=\"containers\">Containers</h3>\n\n<pre><code class=\"language-sh\"># Stop all running containers\ndocker stop $(docker ps -a -q)\n\n# Delete stopped containers\ndocker container prune\n</code></pre>\n\n<h3 id=\"images-1\">Images</h3>\n\n<pre><code class=\"language-sh\">docker image prune [-a]\n</code></pre>\n\n<p>Delete all the images</p>\n\n<h3 id=\"volumes\">Volumes</h3>\n\n<pre><code class=\"language-sh\">docker volume prune\n</code></pre>\n\n<p>Delete all the volumes</p>\n\n<h2 id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"http://www.docker.io/gettingstarted/\">Getting Started</a> <em>(docker.io)</em></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Devops/dockerfile",
  "title": "Dockerfile",
  "url": "/sheets/Devops/dockerfile",
  "category": "Devops",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"reference\">Reference</h2>\n\n<h3 id=\"inheritance\">Inheritance</h3>\n\n<pre><code class=\"language-docker\">FROM ruby:2.2.2\n</code></pre>\n\n<h3 id=\"variables\">Variables</h3>\n\n<pre><code class=\"language-docker\">ENV APP_HOME /myapp\nRUN mkdir $APP_HOME\n</code></pre>\n\n<pre><code class=\"language-docker\">ARG APP_HOME=\"\"\nRUN mkdir $APP_HOME\n</code></pre>\n\n<h3 id=\"initialization\">Initialization</h3>\n\n<pre><code class=\"language-docker\">RUN bundle install\n</code></pre>\n\n<pre><code class=\"language-docker\">WORKDIR /myapp\n</code></pre>\n\n<pre><code class=\"language-docker\">VOLUME [\"/data\"]\n# Specification for mount point\n</code></pre>\n\n<pre><code class=\"language-docker\">ADD file.xyz /file.xyz\nCOPY --chown=user:group host_file.xyz /path/container_file.xyz\n</code></pre>\n\n<h3 id=\"onbuild\">Onbuild</h3>\n\n<pre><code class=\"language-docker\">ONBUILD RUN bundle install\n# when used with another file\n</code></pre>\n\n<h3 id=\"commands\">Commands</h3>\n\n<pre><code class=\"language-docker\">EXPOSE 5900\nCMD    [\"bundle\", \"exec\", \"rails\", \"server\"]\n</code></pre>\n\n<h3 id=\"entrypoint\">Entrypoint</h3>\n\n<pre><code class=\"language-docker\">ENTRYPOINT [\"executable\", \"param1\", \"param2\"]\nENTRYPOINT command param1 param2\n</code></pre>\n\n<p>Configures a container that will run as an executable.</p>\n\n<pre><code class=\"language-docker\">ENTRYPOINT exec top -b\n</code></pre>\n\n<p>This will use shell processing to substitute shell variables, and will ignore any <code>CMD</code> or <code>docker run</code> command line arguments.</p>\n\n<h3 id=\"metadata\">Metadata</h3>\n\n<pre><code class=\"language-docker\">LABEL version=\"1.0\"\n</code></pre>\n\n<pre><code class=\"language-docker\">LABEL \"com.example.vendor\"=\"ACME Incorporated\"\nLABEL com.example.label-with-value=\"foo\"\n</code></pre>\n\n<pre><code class=\"language-docker\">LABEL description=\"This text illustrates \\\nthat label-values can span multiple lines.\"\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"see-also\">See also</h2>\n\n<ul>\n  <li><a href=\"https://docs.docker.com/engine/reference/builder/\">https://docs.docker.com/engine/reference/builder/</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2019-10-20"
},{
  "id": "sheets/JavaScript/dom-range",
  "title": "DOM Range",
  "url": "/sheets/JavaScript/dom-range",
  "category": "JavaScript",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"reference\">Reference</h2>\n\n<h3 id=\"creating-ranges\">Creating ranges</h3>\n\n<pre><code class=\"language-js\">var range = document.createRange()\n</code></pre>\n\n<p>See: <a href=\"https://devdocs.io/dom/document/createrange\">https://devdocs.io/dom/document/createrange</a></p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<pre><code class=\"language-js\">range\n  .setStart(startNode, startOffset)\n  .setEnd(endNode, endOffset)\n\n  .setStartBefore(node)\n  .setStartAfter(node)\n  .setEndBefore(node)\n  .setEndAfter(node)\n\n  .selectNode(node)\n  .selectNodeContents(node)\n</code></pre>\n\n<p>See: <a href=\"https://devdocs.io/dom/range\">https://devdocs.io/dom/range</a></p>\n\n<h3 id=\"collapsing\">Collapsing</h3>\n\n<pre><code class=\"language-js\">range.collapse() // to end (a single point)\nrange.collapse(true) // to start (a single point)\nrange.collapsed // true | false\n</code></pre>\n\n<h3 id=\"operations\">Operations</h3>\n\n<pre><code class=\"language-js\">range.cloneContents() // copy =&gt; DocumentFragment\nrange.extractContents() // cut  =&gt; DocumentFragment\nrange.deleteContents() // delete\n</code></pre>\n\n<pre><code class=\"language-js\">range.insertNode(node)\n</code></pre>\n\n<h3 id=\"string\">String</h3>\n\n<pre><code class=\"language-js\">range.toString()\n</code></pre>\n\n<h3 id=\"read-only-attributes\">Read-only attributes</h3>\n\n<pre><code class=\"language-js\">range.collapsed //       =&gt; true/false\nrange.startContainer //  =&gt; Node\nrange.startOffset\nrange.endContainer //    =&gt; Node\nrange.endOffset\nrange.commonAncestorContainer // closest of start and end containers\n</code></pre>",
  "intro_html": "<p>Quick reference to the HTML <a href=\"https://devdocs.io/dom/range\">DOM createRange API</a>.</p>",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/JavaScript/dom-selection",
  "title": "DOM Selection",
  "url": "/sheets/JavaScript/dom-selection",
  "category": "JavaScript",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"reference\">Reference</h2>\n\n<h3 id=\"selection\">Selection</h3>\n\n<pre><code class=\"language-js\">var sel = document.getSelection()\n</code></pre>\n\n<p>See: <a href=\"https://devdocs.io/dom/selection\">https://devdocs.io/dom/selection</a></p>\n\n<h3 id=\"methods\">Methods</h3>\n\n<pre><code class=\"language-js\">sel.removeAllRanges() //  deselects\nsel.addRange(range) //    sets a selection\nsel.removeRange(range) // remove a range\n</code></pre>\n\n<pre><code class=\"language-js\">sel.rangeCount\nsel.getRangeAt(0) // get the 0th range\n</code></pre>\n\n<h3 id=\"collapsing\">Collapsing</h3>\n\n<pre><code class=\"language-js\">sel.collapse(parent, offset)\nsel.collapseToEnd()\nsel.collapseToStart()\nsel.isCollapsed\n</code></pre>\n\n<pre><code class=\"language-js\">sel.containsNode(node)\n</code></pre>\n\n<h3 id=\"deleting\">Deleting</h3>\n\n<pre><code class=\"language-js\">sel.deleteFromDocument()\n</code></pre>\n\n<h3 id=\"events\">Events</h3>\n\n<pre><code class=\"language-js\">document.addEventListener('selectionchange', () =&gt; {})\n</code></pre>",
  "intro_html": "<p>Quick introduction to the HTML <a href=\"https://devdocs.io/dom/selection\">DOM selection API</a>.</p>",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Markup/emmet",
  "title": "Emmet",
  "url": "/sheets/Markup/emmet",
  "category": "Markup",
  "keywords": null,
  "content_html": "<h3 id=\"child-\">Child: &gt;</h3>\n\n<pre><code class=\"language-css\">nav&gt;ul&gt;li\n</code></pre>\n<p>Expands to</p>\n<pre><code class=\"language-html\">&lt;nav&gt;\n  &lt;ul&gt;\n    &lt;li&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/nav&gt;\n</code></pre>\n\n<h3 id=\"sibling-\">Sibling: +</h3>\n\n<pre><code class=\"language-css\">section&gt;p+p+p\n</code></pre>\n<p>Expands to</p>\n<pre><code class=\"language-html\">&lt;section&gt;\n  &lt;p&gt;&lt;/p&gt;\n  &lt;p&gt;&lt;/p&gt;\n  &lt;p&gt;&lt;/p&gt;\n&lt;/section&gt;\n</code></pre>\n\n<h3 id=\"climb-up-\">Climb Up: ^</h3>\n\n<pre><code class=\"language-css\">section&gt;header&gt;h1^footer\n</code></pre>\n<p>Expands to</p>\n<pre><code class=\"language-html\">&lt;section&gt;\n  &lt;header&gt;\n    &lt;h1&gt;&lt;/h1&gt;\n  &lt;/header&gt;\n  &lt;footer&gt;&lt;/footer&gt;\n&lt;/section&gt;\n</code></pre>\n\n<h3 id=\"grouping-\">Grouping: ()</h3>\n\n<pre><code class=\"language-css\">section&gt;(header&gt;nav&gt;ul&gt;li)+footer&gt;p\n</code></pre>\n<p>Expands to</p>\n<pre><code class=\"language-html\">&lt;section&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;ul&gt;\n        &lt;li&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n  &lt;footer&gt;\n    &lt;p&gt;&lt;/p&gt;\n  &lt;/footer&gt;\n&lt;/section&gt;\n</code></pre>\n\n<h3 id=\"multiplication-\">Multiplication: *</h3>\n\n<pre><code class=\"language-css\">ul&gt;li*3\n</code></pre>\n<p>Expands to</p>\n<pre><code class=\"language-html\">&lt;ul&gt;\n  &lt;li&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<h3 id=\"ids-and-classes-\">IDs and Classes: .</h3>\n\n<pre><code class=\"language-css\">ul.menu&gt;li.menu__item+li#id_item+li.menu__item#id_2\n</code></pre>\n<p>Expands to</p>\n<pre><code class=\"language-html\">&lt;ul&gt;\n  &lt;li class=\"menu__item\"&gt;&lt;/li&gt;\n  &lt;li id=\"id_item\"&gt;&lt;/li&gt;\n  &lt;li class=\"menu__item\" id=\"id_2\"&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<h3 id=\"numbering-\">Numbering: $</h3>\n\n<pre><code class=\"language-css\">ul&gt;li.item$*3\nul&gt;li.item$$*3\nul&gt;li.item$@-*3\nul&gt;li.item$@3*5\n</code></pre>\n<p>Expands to</p>\n<pre><code class=\"language-html\">&lt;ul&gt;\n  &lt;li class=\"item1\"&gt;&lt;/li&gt;\n  &lt;li class=\"item2\"&gt;&lt;/li&gt;\n  &lt;li class=\"item3\"&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul&gt;\n  &lt;li class=\"item01\"&gt;&lt;/li&gt;\n  &lt;li class=\"item02\"&gt;&lt;/li&gt;\n  &lt;li class=\"item03\"&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul&gt;\n  &lt;li class=\"item3\"&gt;&lt;/li&gt;\n  &lt;li class=\"item2\"&gt;&lt;/li&gt;\n  &lt;li class=\"item1\"&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul&gt;\n  &lt;li class=\"item3\"&gt;&lt;/li&gt;\n  &lt;li class=\"item4\"&gt;&lt;/li&gt;\n  &lt;li class=\"item5\"&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<h3 id=\"attributes-\">Attributes: []</h3>\n\n<pre><code class=\"language-css\">input[type=\"text\"]\ndiv[data-attr=\"test\"]\n</code></pre>\n<p>Expands to</p>\n<pre><code class=\"language-html\">&lt;input type=\"text\" /&gt;\n&lt;div data-attr=\"test\"&gt;&lt;/div&gt;\n</code></pre>\n\n<h3 id=\"text-\">Text: {}</h3>\n\n<pre><code class=\"language-css\">p{Lorem ipsum}\n</code></pre>\n<p>Expands to</p>\n<pre><code class=\"language-html\">&lt;p&gt;Lorem ipsum&lt;/p&gt;\n</code></pre>\n\n<h3 id=\"implicit-tags\">Implicit tags</h3>\n\n<pre><code class=\"language-css\">.default-block\nem&gt;.default-inline\nul&gt;.default-list\ntable&gt;.default-table-row&gt;.default-table-column\n</code></pre>\n<p>Expands to</p>\n<pre><code class=\"language-html\">&lt;div class=\"default-block\"&gt;&lt;/div&gt;\n&lt;em&gt;&lt;span class=\"default-inline\"&gt;&lt;/span&gt;&lt;/em&gt;\n&lt;ul&gt;\n  &lt;li class=\"default-list\"&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;table&gt;\n  &lt;tr class=\"default-table-row\"&gt;\n    &lt;td class=\"default-table-column\"&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>",
  "intro_html": "<p>Emmet is a markup language for expanding CSS rules into HTML</p>",
  "description_html": "",
  "tags": null,
  "updated": "2020-07-03"
},{
  "id": "sheets/React/enzyme",
  "title": "Enzyme",
  "url": "/sheets/React/enzyme",
  "category": "React",
  "keywords": ["shallow()","mount()","wrap.setProps()","wrap.find().simulate('click')","wrap.contains(<div/>)"],
  "content_html": "<h2 id=\"getting-started\">Getting started</h2>\n\n<h3 class=\"-intro\" id=\"introduction\">Introduction</h3>\n\n<p><a href=\"http://airbnb.io/enzyme\">Enzyme</a> lets you write unit tests for React components. This guide covers Enzyme 3.x.</p>\n\n<ul>\n  <li><a href=\"https://enzymejs.github.io/enzyme/\">Enzyme website</a> <em>(enzymejs.github.io)</em></li>\n</ul>\n\n<h3 class=\"-prime\" id=\"mounting\">Mounting</h3>\n\n<pre class=\"-setup\"><code class=\"language-js\">import {shallow, mount} from 'enzyme'\n</code></pre>\n\n<pre><code class=\"language-js\">wrap = shallow(&lt;MyComponent /&gt;)\n</code></pre>\n\n<pre><code class=\"language-js\">wrap = mount(&lt;MyComponent /&gt;)\n</code></pre>\n\n<p>Shallow wrapping doesn’t descend down to sub-components.\nA full mount also mounts sub-components.</p>\n\n<p>See: <a href=\"http://airbnb.io/enzyme/docs/api/shallow.html\">Shallow rendering</a>,\n<a href=\"http://airbnb.io/enzyme/docs/api/mount.html\">Full rendering</a></p>\n\n<h3 id=\"debugging\">Debugging</h3>\n\n<pre><code class=\"language-js\">console.log(wrap.debug())\n</code></pre>\n\n<p>Shows HTML for debugging purposes.</p>\n\n<p>See: <a href=\"http://airbnb.io/enzyme/docs/api/ReactWrapper/debug.html\">debug()</a></p>\n\n<h2 class=\"-three-column\" id=\"examples\">Examples</h2>\n\n<h3 class=\"-prime\" id=\"basic-example\">Basic example</h3>\n\n<pre class=\"-setup\"><code class=\"language-js\">import { shallow } from 'enzyme'\nimport MyComponent from '../MyComponent'\n</code></pre>\n\n<pre><code class=\"language-js\">it('works', () =&gt; {\n  const wrap = shallow(\n    &lt;MyComponent name='Groot' /&gt;\n  )\n\n  expect(wrap.text()).toEqual('I am Groot')\n})\n</code></pre>\n\n<h3 id=\"props-and-state\">Props and state</h3>\n\n<h4 id=\"setting\">Setting</h4>\n\n<pre><code class=\"language-js\">wrap.setProps({ name: 'Moe' })\nwrap.setState({ show: true })\n</code></pre>\n\n<h4 id=\"asserting\">Asserting</h4>\n\n<pre><code class=\"language-js\">expect(wrap.prop('name')).toEqual('Moe')\nexpect(wrap.state('show')).toEqual(true)\n</code></pre>\n\n<pre><code class=\"language-js\">expect('name' in wrap.props()).toEqual('Moe')\nexpect('show' in wrap.state()).toEqual(true)\n</code></pre>\n\n<h3 id=\"matching-elements\">Matching elements</h3>\n\n<pre><code class=\"language-js\">expect(\n  wrap.containsMatchingElement(\n    &lt;span&gt;I am groot&lt;/span&gt;\n  )\n).toBeTruthy()\n</code></pre>\n\n<p><code>containsMatchingElement()</code> is probably the most useful assertion in Jest.</p>\n\n<h3 id=\"snapshots\">Snapshots</h3>\n\n<pre><code class=\"language-js\">expect(wrap).toMatchSnapshot()\n</code></pre>\n\n<p>Be sure you’ve set up enzyme-to-json for snapshots (see <a href=\"#installing\">Installing</a> below).</p>\n\n<h3 id=\"traversions\">Traversions</h3>\n\n<pre><code class=\"language-js\">expect(\n  wrap.find('button').text()\n).toEqual('Submit')\n</code></pre>\n\n<p>Use <code>.find()</code> to traverse down to nodes. It will return wrapper objects, too.</p>\n\n<h3 id=\"simulating-events\">Simulating events</h3>\n\n<pre><code class=\"language-js\">wrap.find('input').simulate('click')\n</code></pre>\n\n<h4 id=\"with-event-object-props\">With event object props</h4>\n\n<pre><code class=\"language-js\">wrap.find('input').simulate('change', {\n  target: { value: 'hello' }\n})\n</code></pre>\n\n<h2 id=\"installing\">Installing</h2>\n\n<h3 id=\"initial-setup\">Initial setup</h3>\n\n<pre class=\"-setup\"><code>npm install --save-dev enzyme \\\n  enzyme-adapter-react-16 \\\n  react-test-renderer\n</code></pre>\n\n<h4 id=\"testsetupjs\">test/setup.js</h4>\n\n<pre><code class=\"language-js\">import Enzyme from 'enzyme'\nimport Adapter from 'enzyme-adapter-react-16'\n\nEnzyme.configure({ adapter: new Adapter() })\n</code></pre>\n\n<h4 id=\"packagejson\">package.json</h4>\n\n<pre><code class=\"language-js\">\"jest\": {\n  \"setupFiles\": [\n    \"test/setup.js\"\n  ]\n}\n</code></pre>\n\n<p>This configures Enzyme for React v16, and Jest to automatically configure Enzyme for you. There are other adapters in Enzyme’s installation instructions.</p>\n\n<p>See: <a href=\"http://airbnb.io/enzyme/#installation\">Installation</a></p>\n\n<h3 id=\"jest-snapshots\">Jest snapshots</h3>\n\n<pre class=\"-setup\"><code>npm install --save-dev enzyme-to-json\n</code></pre>\n\n<h4 id=\"packagejson-1\">package.json</h4>\n\n<pre><code class=\"language-js\">\"jest\": {\n  \"snapshotSerializers\": [\n    \"enzyme-to-json/serializer\"\n  ]\n}\n</code></pre>\n\n<h4 id=\"test\">Test</h4>\n\n<pre><code class=\"language-js\">it('works', () =&gt; {\n  wrap = mount(&lt;MyComponent /&gt;)\n  expect(wrap).toMatchSnapshot()\n})\n</code></pre>\n\n<p>Optional, but recommended: This allows you to use Enzyme wrappers with Jest snapshots.</p>\n\n<p>See: <a href=\"https://www.npmjs.com/package/enzyme-to-json\">enzyme-to-json</a></p>\n\n<h2 id=\"reactwrapper\">ReactWrapper</h2>\n\n<h3 id=\"traversing\">Traversing</h3>\n\n<pre><code class=\"language-js\">wrap.find('button')   // → ReactWrapper\nwrap.filter('button') // → ReactWrapper\nwrap.not('span')      // → ReactWrapper (inverse of filter())\nwrap.children()       // → ReactWrapper\nwrap.parent()         // → ReactWrapper\nwrap.closest('div')   // → ReactWrapper\nwrap.childAt(0)       // → ReactWrapper\nwrap.at(0)            // → ReactWrapper\nwrap.first()          // → ReactWrapper\nwrap.last()           // → ReactWrapper\n</code></pre>\n\n<pre><code class=\"language-js\">wrap.get(0)           // → ReactElement\nwrap.getElement()     // → ReactElement\nwrap.getElements()    // → Array&lt;ReactElement&gt;\nwrap.getDOMNode()     // → DOMComponent\n</code></pre>\n\n<p>See: <a href=\"http://airbnb.io/enzyme/docs/api/mount.html\">Full rendering API</a></p>\n\n<h3 id=\"actions\">Actions</h3>\n\n<pre><code class=\"language-js\">wrap.simulate('click')\n</code></pre>\n\n<h3 id=\"react-components\">React components</h3>\n\n<pre><code class=\"language-js\">wrap.setState({ ··· })\nwrap.setProps({ ··· })\nwrap.setContext({ ··· })\n</code></pre>\n\n<pre><code class=\"language-js\">wrap.state()         // get full state\nwrap.props()         // get full props\nwrap.context()       // get full context\n</code></pre>\n\n<pre><code class=\"language-js\">wrap.state('key')    // → any\nwrap.prop('key')     // → any\nwrap.context('key')  // → any\n</code></pre>\n\n<pre><code class=\"language-js\">wrap.instance()      // → ReactComponent\n</code></pre>\n\n<h3 id=\"mount\">Mount</h3>\n\n<pre><code class=\"language-js\">wrap.mount()\nwrap.unmount()\nwrap.update()      // calls forceUpdate()\n</code></pre>\n\n<h3 id=\"tests\">Tests</h3>\n\n<pre><code class=\"language-js\">wrap.debug()               // → string\nwrap.html()                // → string\nwrap.text()                // → string\nwrap.type()                // → string | function\nwrap.name()                // → string\nwrap.is('.classname')      // → boolean\nwrap.hasClass('class')     // → boolean\nwrap.exists()              // → boolean\nwrap.contains(&lt;div /&gt;)     // → boolean\nwrap.contains([ &lt;div /&gt; ]) // → boolean\nwrap.some('.child')        // → boolean\n\nwrap.someWhere(n =&gt; n.hasClass('foo'))\n\nwrap.containsMatchingElement(&lt;div /&gt;)         // → boolean\nwrap.containsAllMatchingElements([ &lt;div /&gt; ]) // → boolean\nwrap.containsAnyMatchingElements([ &lt;div /&gt; ]) // → boolean\n</code></pre>\n\n<h2 id=\"references\">References</h2>\n\n<ul>\n  <li><a href=\"https://airbnb.io/enzyme\">Enzyme website</a> <em>(airbnb.io)</em></li>\n  <li><a href=\"./enzyme@2\">Enzyme v2 cheatsheet</a> <em>(devhints.io)</em> (old version)</li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": ["Featured"],
  "updated": "2020-02-12"
},{
  "id": "sheets/React/enzyme@2",
  "title": "Enzyme v2",
  "url": "/sheets/React/enzyme@2",
  "category": "React",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"getting-started\">Getting started</h2>\n\n<h3 class=\"-intro\" id=\"introduction\">Introduction</h3>\n\n<p><strong>(Deprecated)</strong> <a href=\"http://airbnb.io/enzyme\">Enzyme</a> lets you write unit tests for React components. This guide covers a previous version (v2.x).</p>\n\n<h3 class=\"-prime\" id=\"mounting\">Mounting</h3>\n\n<pre class=\"-setup\"><code class=\"language-js\">import {shallow, mount} from 'enzyme'\n</code></pre>\n\n<pre><code class=\"language-js\">wrap = shallow(&lt;MyComponent /&gt;)\n</code></pre>\n\n<pre><code class=\"language-js\">wrap = mount(&lt;MyComponent /&gt;)\n</code></pre>\n\n<p>Shallow wrapping doesn’t descend down to sub-components.\nA full mount also mounts sub-components.\nSee: <a href=\"http://airbnb.io/enzyme/docs/api/shallow.html\">Shallow rendering</a>,\n<a href=\"http://airbnb.io/enzyme/docs/api/mount.html\">Full rendering</a></p>\n\n<h3 id=\"jest\">Jest</h3>\n\n<pre class=\"-setup\"><code class=\"language-js\">import toJson from 'enzyme-to-json'\n</code></pre>\n\n<pre><code class=\"language-js\">it('works', () =&gt; {\n  wrap = mount(&lt;MyComponent /&gt;)\n  expect(toJson(wrap)).toMatchSnapshot()\n})\n</code></pre>\n\n<p>Converts an Enzyme wrapper to a format compatible with Jest snapshots. See: <a href=\"https://www.npmjs.com/package/enzyme-to-json\">enzyme-to-json</a></p>\n\n<h3 id=\"debugging\">Debugging</h3>\n\n<pre><code class=\"language-js\">console.log(wrap.debug())\n</code></pre>\n\n<p>Shows HTML for debugging purposes. See: <a href=\"http://airbnb.io/enzyme/docs/api/ReactWrapper/debug.html\">debug()</a></p>\n\n<h2 id=\"reactwrapper\">ReactWrapper</h2>\n\n<h3 id=\"traversing\">Traversing</h3>\n\n<pre><code class=\"language-js\">wrap.find('button')   // =&gt; ReactWrapper\nwrap.filter('button') // =&gt; ReactWrapper\nwrap.not('span')      // =&gt; ReactWrapper (inverse of filter())\nwrap.children()       // =&gt; ReactWrapper\nwrap.parent()         // =&gt; ReactWrapper\nwrap.closest('div')   // =&gt; ReactWrapper\nwrap.childAt(0)       // =&gt; ReactWrapper\nwrap.at(0)            // =&gt; ReactWrapper\nwrap.first()          // =&gt; ReactWrapper\nwrap.last()           // =&gt; ReactWrapper\n</code></pre>\n\n<pre><code class=\"language-js\">wrap.get(0)           // =&gt; ReactElement\nwrap.getNode()        // =&gt; ReactElement\nwrap.getNodes()       // =&gt; Array&lt;ReactElement&gt;\nwrap.getDOMNode()     // =&gt; DOMComponent\n</code></pre>\n\n<p>See: <a href=\"http://airbnb.io/enzyme/docs/api/mount.html\">Full rendering API</a></p>\n\n<h3 id=\"actions\">Actions</h3>\n\n<pre><code class=\"language-js\">wrap.simulate('click')\n</code></pre>\n\n<h3 id=\"react-components\">React components</h3>\n\n<pre><code class=\"language-js\">wrap.setState({ ... })\nwrap.setProps({ ... })\nwrap.setContext({ ... })\n\nwrap.state()            // =&gt; Any (get state)\nwrap.props()            // =&gt; object (get props)\nwrap.context()          // =&gt; Any (get context)\n\nwrap.instance()         // =&gt; ReactComponent\n</code></pre>\n\n<h3 id=\"mount\">Mount</h3>\n\n<pre><code class=\"language-js\">wrap.mount()\nwrap.unmount()\nwrap.update()      // calls forceUpdate()\n</code></pre>\n\n<h3 id=\"tests\">Tests</h3>\n\n<pre><code class=\"language-js\">wrap.debug()               // =&gt; string\nwrap.html()                // =&gt; string\nwrap.text()                // =&gt; string\nwrap.type()                // =&gt; string | function\nwrap.name()                // =&gt; string\nwrap.is('.classname')      // =&gt; boolean\nwrap.hasClass('class')     // =&gt; boolean\nwrap.exists()              // =&gt; boolean\nwrap.contains(&lt;div /&gt;)     // =&gt; boolean\nwrap.contains([ &lt;div /&gt; ]) // =&gt; boolean\n\nwrap.containsMatchingElement(&lt;div /&gt;)         // =&gt; boolean\nwrap.containsAllMatchingElements([ &lt;div /&gt; ]) // =&gt; boolean\nwrap.containsAnyMatchingElements([ &lt;div /&gt; ]) // =&gt; boolean\n</code></pre>\n\n<h2 id=\"references\">References</h2>\n\n<ul>\n  <li><a href=\"https://airbnb.io/enzyme\">https://airbnb.io/enzyme</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2017-10-12"
},{
  "id": "sheets/JavaScript/es6",
  "title": "ES2015+",
  "url": "/sheets/JavaScript/es6",
  "category": "JavaScript",
  "keywords": null,
  "content_html": "<h3 id=\"block-scoping\">Block scoping</h3>\n\n<h4 id=\"let\">Let</h4>\n\n<pre data-line=\"2,4\"><code class=\"language-js\">function fn () {\n  let x = 0\n  if (true) {\n    let x = 1 // only inside this `if`\n  }\n}\n</code></pre>\n\n<h4 id=\"const\">Const</h4>\n\n<pre><code class=\"language-js\">const a = 1\n</code></pre>\n\n<p><code>let</code> is the new <code>var</code>. Constants work just like <code>let</code>, but can’t be reassigned.\nSee: <a href=\"https://babeljs.io/learn-es2015/#let--const\">Let and const</a></p>\n\n<h3 id=\"backtick-strings\">Backtick strings</h3>\n\n<h4 id=\"interpolation\">Interpolation</h4>\n\n<pre><code class=\"language-js\">const message = `Hello ${name}`\n</code></pre>\n\n<h4 id=\"multiline-strings\">Multiline strings</h4>\n\n<pre><code class=\"language-js\">const str = `\nhello\nworld\n`\n</code></pre>\n\n<p>Templates and multiline strings.\nSee: <a href=\"https://babeljs.io/learn-es2015/#template-strings\">Template strings</a></p>\n\n<h3 id=\"binary-and-octal-literals\">Binary and octal literals</h3>\n\n<pre><code class=\"language-js\">let bin = 0b1010010\nlet oct = 0o755\n</code></pre>\n\n<p>See: <a href=\"https://babeljs.io/learn-es2015/#binary-and-octal-literals\">Binary and octal literals</a></p>\n\n<h3 id=\"new-methods\">New methods</h3>\n\n<h4 id=\"new-string-methods\">New string methods</h4>\n\n<pre><code class=\"language-js\">\"hello\".repeat(3)\n\"hello\".includes(\"ll\")\n\"hello\".startsWith(\"he\")\n\"hello\".padStart(8) // \"   hello\"\n\"hello\".padEnd(8) // \"hello   \" \n\"hello\".padEnd(8, '!') // hello!!!\n\"\\u1E9B\\u0323\".normalize(\"NFC\")\n</code></pre>\n\n<p>See: <a href=\"https://babeljs.io/learn-es2015/#math--number--string--object-apis\">New methods</a></p>\n\n<h3 id=\"classes\">Classes</h3>\n\n<pre><code class=\"language-js\">class Circle extends Shape {\n</code></pre>\n\n<h4 id=\"constructor\">Constructor</h4>\n\n<pre data-line=\"1\"><code class=\"language-js\">  constructor (radius) {\n    this.radius = radius\n  }\n</code></pre>\n\n<h4 id=\"methods\">Methods</h4>\n\n<pre data-line=\"1\"><code class=\"language-js\">  getArea () {\n    return Math.PI * 2 * this.radius\n  }\n</code></pre>\n\n<h4 id=\"calling-superclass-methods\">Calling superclass methods</h4>\n\n<pre data-line=\"2\"><code class=\"language-js\">  expand (n) {\n    return super.expand(n) * Math.PI\n  }\n</code></pre>\n\n<h4 id=\"static-methods\">Static methods</h4>\n\n<pre data-line=\"1\"><code class=\"language-js\">  static createFromDiameter(diameter) {\n    return new Circle(diameter / 2)\n  }\n}\n</code></pre>\n\n<p>Syntactic sugar for prototypes.\nSee: <a href=\"https://babeljs.io/learn-es2015/#classes\">Classes</a></p>\n\n<h3 id=\"exponent-operator\">Exponent operator</h3>\n\n<pre data-line=\"1\"><code class=\"language-js\">const byte = 2 ** 8\n// Same as: Math.pow(2, 8)\n</code></pre>\n\n<h2 class=\"-three-column\" id=\"promises\">Promises</h2>\n\n<h3 id=\"making-promises\">Making promises</h3>\n\n<pre data-line=\"1\"><code class=\"language-js\">new Promise((resolve, reject) =&gt; {\n  if (ok) { resolve(result) }\n  else { reject(error) }\n})\n</code></pre>\n\n<p>For asynchronous programming.\nSee: <a href=\"https://babeljs.io/learn-es2015/#promises\">Promises</a></p>\n\n<h3 id=\"using-promises\">Using promises</h3>\n\n<pre data-line=\"2,3\"><code class=\"language-js\">promise\n  .then((result) =&gt; { ··· })\n  .catch((error) =&gt; { ··· })\n</code></pre>\n\n<h3 id=\"using-promises-with-finally\">Using promises with finally</h3>\n\n<pre data-line=\"4\"><code class=\"language-js\">promise\n  .then((result) =&gt; { ··· })\n  .catch((error) =&gt; { ··· })\n  .finally(() =&gt; { // logic independent of success/error })\n</code></pre>\n\n<p>The handler is called when the promise is fulfilled or rejected.</p>\n\n<h3 id=\"promise-functions\">Promise functions</h3>\n\n<pre><code class=\"language-js\">Promise.all(···)\nPromise.race(···)\nPromise.reject(···)\nPromise.resolve(···)\n</code></pre>\n\n<h3 id=\"async-await\">Async-await</h3>\n\n<pre data-line=\"2,3\"><code class=\"language-js\">async function run () {\n  const user = await getUser()\n  const tweets = await getTweets(user)\n  return [user, tweets]\n}\n</code></pre>\n\n<p><code>async</code> functions are another way of using functions.</p>\n\n<p>See: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\">async function</a></p>\n\n<h2 class=\"-three-column\" id=\"destructuring\">Destructuring</h2>\n\n<h3 id=\"destructuring-assignment\">Destructuring assignment</h3>\n\n<h4 id=\"arrays\">Arrays</h4>\n\n<pre data-line=\"1\"><code class=\"language-js\">const [first, last] = ['Nikola', 'Tesla']\n</code></pre>\n\n<h4 id=\"objects\">Objects</h4>\n\n<pre data-line=\"1\"><code class=\"language-js\">let {title, author} = {\n  title: 'The Silkworm',\n  author: 'R. Galbraith'\n}\n</code></pre>\n\n<p>Supports for matching arrays and objects.\nSee: <a href=\"https://babeljs.io/learn-es2015/#destructuring\">Destructuring</a></p>\n\n<h3 id=\"default-values\">Default values</h3>\n\n<pre><code class=\"language-js\">const scores = [22, 33]\nconst [math = 50, sci = 50, arts = 50] = scores\n</code></pre>\n\n<pre><code class=\"language-js\">// Result:\n// math === 22, sci === 33, arts === 50\n</code></pre>\n\n<p>Default values can be assigned while destructuring arrays or objects.</p>\n\n<h3 id=\"function-arguments\">Function arguments</h3>\n\n<pre data-line=\"1\"><code class=\"language-js\">function greet({ name, greeting }) {\n  console.log(`${greeting}, ${name}!`)\n}\n</code></pre>\n\n<pre><code class=\"language-js\">greet({ name: 'Larry', greeting: 'Ahoy' })\n</code></pre>\n\n<p>Destructuring of objects and arrays can also be done in function arguments.</p>\n\n<h3 id=\"default-values-1\">Default values</h3>\n\n<pre data-line=\"1\"><code class=\"language-js\">function greet({ name = 'Rauno' } = {}) {\n  console.log(`Hi ${name}!`);\n}\n</code></pre>\n\n<pre><code class=\"language-js\">greet() // Hi Rauno!\ngreet({ name: 'Larry' }) // Hi Larry!\n</code></pre>\n\n<h3 id=\"reassigning-keys\">Reassigning keys</h3>\n\n<pre data-line=\"1\"><code class=\"language-js\">function printCoordinates({ left: x, top: y }) {\n  console.log(`x: ${x}, y: ${y}`)\n}\n</code></pre>\n\n<pre><code class=\"language-js\">printCoordinates({ left: 25, top: 90 })\n</code></pre>\n\n<p>This example assigns <code>x</code> to the value of the <code>left</code> key.</p>\n\n<h3 id=\"loops\">Loops</h3>\n\n<pre data-line=\"1\"><code class=\"language-js\">for (let {title, artist} of songs) {\n  ···\n}\n</code></pre>\n\n<p>The assignment expressions work in loops, too.</p>\n\n<h3 id=\"object-destructuring\">Object destructuring</h3>\n\n<pre data-line=\"1\"><code class=\"language-js\">const { id, ...detail } = song;\n</code></pre>\n\n<p>Extract some keys individually and remaining keys in the object using rest (…) operator</p>\n\n<h2 id=\"spread\">Spread</h2>\n\n<h3 id=\"object-spread\">Object spread</h3>\n\n<h4 id=\"with-object-spread\">with Object spread</h4>\n\n<pre data-line=\"2\"><code class=\"language-js\">const options = {\n  ...defaults,\n  visible: true\n}\n</code></pre>\n\n<h4 id=\"without-object-spread\">without Object spread</h4>\n\n<pre><code class=\"language-js\">const options = Object.assign(\n  {}, defaults,\n  { visible: true })\n</code></pre>\n\n<p>The Object spread operator lets you build new objects from other objects.</p>\n\n<p>See: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator\">Object spread</a></p>\n\n<h3 id=\"array-spread\">Array spread</h3>\n\n<h4 id=\"with-array-spread\">with Array spread</h4>\n\n<pre data-line=\"2,3\"><code class=\"language-js\">const users = [\n  ...admins,\n  ...editors,\n  'rstacruz'\n]\n</code></pre>\n\n<h4 id=\"without-array-spread\">without Array spread</h4>\n\n<pre><code class=\"language-js\">const users = admins\n  .concat(editors)\n  .concat([ 'rstacruz' ])\n</code></pre>\n\n<p>The spread operator lets you build new arrays in the same way.</p>\n\n<p>See: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator\">Spread operator</a></p>\n\n<h2 id=\"functions\">Functions</h2>\n\n<h3 id=\"function-arguments-1\">Function arguments</h3>\n\n<h4 id=\"default-arguments\">Default arguments</h4>\n\n<pre data-line=\"1\"><code class=\"language-js\">function greet (name = 'Jerry') {\n  return `Hello ${name}`\n}\n</code></pre>\n\n<h4 id=\"rest-arguments\">Rest arguments</h4>\n\n<pre data-line=\"1\"><code class=\"language-js\">function fn(x, ...y) {\n  // y is an Array\n  return x * y.length\n}\n</code></pre>\n\n<h4 id=\"spread-1\">Spread</h4>\n\n<pre data-line=\"1\"><code class=\"language-js\">fn(...[1, 2, 3])\n// same as fn(1, 2, 3)\n</code></pre>\n\n<p>Default, rest, spread.\nSee: <a href=\"https://babeljs.io/learn-es2015/#default--rest--spread\">Function arguments</a></p>\n\n<h3 id=\"fat-arrows\">Fat arrows</h3>\n\n<h4 id=\"fat-arrows-1\">Fat arrows</h4>\n\n<pre data-line=\"1\"><code class=\"language-js\">setTimeout(() =&gt; {\n  ···\n})\n</code></pre>\n\n<h4 id=\"with-arguments\">With arguments</h4>\n\n<pre data-line=\"1\"><code class=\"language-js\">readFile('text.txt', (err, data) =&gt; {\n  ...\n})\n</code></pre>\n\n<h4 id=\"implicit-return\">Implicit return</h4>\n<pre data-line=\"1,4,5,6\"><code class=\"language-js\">numbers.map(n =&gt; n * 2)\n// No curly braces = implicit return\n// Same as: numbers.map(function (n) { return n * 2 })\nnumbers.map(n =&gt; ({\n  result: n * 2\n}))\n// Implicitly returning objects requires parentheses around the object\n</code></pre>\n\n<p>Like functions but with <code>this</code> preserved.\nSee: <a href=\"https://babeljs.io/learn-es2015/#arrows-and-lexical-this\">Fat arrows</a></p>\n\n<h2 id=\"objects-1\">Objects</h2>\n\n<h3 id=\"shorthand-syntax\">Shorthand syntax</h3>\n\n<pre><code class=\"language-js\">module.exports = { hello, bye }\n// Same as: module.exports = { hello: hello, bye: bye }\n</code></pre>\n\n<p>See: <a href=\"https://babeljs.io/learn-es2015/#enhanced-object-literals\">Object literal enhancements</a></p>\n\n<h3 id=\"methods-1\">Methods</h3>\n\n<pre data-line=\"2\"><code class=\"language-js\">const App = {\n  start () {\n    console.log('running')\n  }\n}\n// Same as: App = { start: function () {···} }\n</code></pre>\n\n<p>See: <a href=\"https://babeljs.io/learn-es2015/#enhanced-object-literals\">Object literal enhancements</a></p>\n\n<h3 id=\"getters-and-setters\">Getters and setters</h3>\n\n<pre data-line=\"2,5\"><code class=\"language-js\">const App = {\n  get closed () {\n    return this.status === 'closed'\n  },\n  set closed (value) {\n    this.status = value ? 'closed' : 'open'\n  }\n}\n</code></pre>\n\n<p>See: <a href=\"https://babeljs.io/learn-es2015/#enhanced-object-literals\">Object literal enhancements</a></p>\n\n<h3 id=\"computed-property-names\">Computed property names</h3>\n\n<pre data-line=\"3\"><code class=\"language-js\">let event = 'click'\nlet handlers = {\n  [`on${event}`]: true\n}\n// Same as: handlers = { 'onclick': true }\n</code></pre>\n\n<p>See: <a href=\"https://babeljs.io/learn-es2015/#enhanced-object-literals\">Object literal enhancements</a></p>\n\n<h3 id=\"extract-values\">Extract values</h3>\n\n<pre data-line=\"3,5\"><code class=\"language-js\">const fatherJS = { age: 57, name: \"Brendan Eich\" }\n\nObject.values(fatherJS)\n// [57, \"Brendan Eich\"]\nObject.entries(fatherJS)\n// [[\"age\", 57], [\"name\", \"Brendan Eich\"]]\n</code></pre>\n\n<h2 id=\"modules\">Modules</h2>\n\n<h3 id=\"imports\">Imports</h3>\n\n<pre><code class=\"language-js\">import 'helpers'\n// aka: require('···')\n</code></pre>\n\n<pre><code class=\"language-js\">import Express from 'express'\n// aka: const Express = require('···').default || require('···')\n</code></pre>\n\n<pre><code class=\"language-js\">import { indent } from 'helpers'\n// aka: const indent = require('···').indent\n</code></pre>\n\n<pre><code class=\"language-js\">import * as Helpers from 'helpers'\n// aka: const Helpers = require('···')\n</code></pre>\n\n<pre><code class=\"language-js\">import { indentSpaces as indent } from 'helpers'\n// aka: const indent = require('···').indentSpaces\n</code></pre>\n\n<p><code>import</code> is the new <code>require()</code>.\nSee: <a href=\"https://babeljs.io/learn-es2015/#modules\">Module imports</a></p>\n\n<h3 id=\"exports\">Exports</h3>\n\n<pre><code class=\"language-js\">export default function () { ··· }\n// aka: module.exports.default = ···\n</code></pre>\n\n<pre><code class=\"language-js\">export function mymethod () { ··· }\n// aka: module.exports.mymethod = ···\n</code></pre>\n\n<pre><code class=\"language-js\">export const pi = 3.14159\n// aka: module.exports.pi = ···\n</code></pre>\n\n<p><code>export</code> is the new <code>module.exports</code>.\nSee: <a href=\"https://babeljs.io/learn-es2015/#modules\">Module exports</a></p>\n\n<h2 id=\"generators\">Generators</h2>\n\n<h3 id=\"generators-1\">Generators</h3>\n\n<pre><code class=\"language-js\">function* idMaker () {\n  let id = 0\n  while (true) { yield id++ }\n}\n</code></pre>\n\n<pre><code class=\"language-js\">let gen = idMaker()\ngen.next().value  // → 0\ngen.next().value  // → 1\ngen.next().value  // → 2\n</code></pre>\n\n<p>It’s complicated.\nSee: <a href=\"https://babeljs.io/learn-es2015/#generators\">Generators</a></p>\n\n<h3 id=\"forof-iteration\">For..of iteration</h3>\n\n<pre><code class=\"language-js\">for (let i of iterable) {\n  ···\n}\n</code></pre>\n\n<p>For iterating through generators and arrays.\nSee: <a href=\"https://babeljs.io/learn-es2015/#iterators--forof\">For..of iteration</a></p>",
  "intro_html": "<p>A quick overview of new JavaScript features in ES2015, ES2016, ES2017, ES2018 and beyond.</p>",
  "description_html": "",
  "tags": ["Featured"],
  "updated": "2019-11-14"
},{
  "id": "sheets/CLI/ffmpeg",
  "title": "ffmpeg",
  "url": "/sheets/CLI/ffmpeg",
  "category": "CLI",
  "keywords": null,
  "content_html": "<h3 id=\"common-switches\">Common switches</h3>\n\n<pre><code class=\"language-bash\">-codecs          # list codecs\n-c:v             # video codec (-vcodec) - 'copy' to copy stream\n-c:a             # audio codec (-acodec)\n</code></pre>\n\n<pre><code class=\"language-bash\">-fs SIZE         # limit file size (bytes)\n</code></pre>\n\n<h3 id=\"bitrate\">Bitrate</h3>\n\n<pre><code class=\"language-bash\">-b:v 1M          # video bitrate (1M = 1Mbit/s)\n-b:a 1M          # audio bitrate\n</code></pre>\n\n<h3 id=\"video\">Video</h3>\n\n<pre><code class=\"language-bash\">-aspect RATIO    # aspect ratio (4:3, 16:9, or 1.25)\n-r RATE          # frame rate per sec\n-s WIDTHxHEIGHT  # frame size\n-vn              # no video\n</code></pre>\n\n<h3 id=\"audio\">Audio</h3>\n\n<pre><code class=\"language-bash\">-aq QUALITY      # audio quality (codec-specific)\n-ar 44100        # audio sample rate (hz)\n-ac 1            # audio channels (1=mono, 2=stereo)\n-an              # no audio\n-vol N           # volume (256=normal)\n</code></pre>\n\n<h2 id=\"example\">Example</h2>\n\n<h3 id=\"ringtone-conversion-using-ffmpeg\">Ringtone conversion using ffmpeg</h3>\n\n<pre><code class=\"language-bash\">ffmpeg -i foo.mp3 -ac 1 -ab 128000 -f mp4 -acodec libfaac -y target.m4r\n</code></pre>\n\n<h3 id=\"to-web\">To web</h3>\n\n<pre><code class=\"language-bash\"># no audio\nffmpeg -i input.mov -vcodec h264   -an -strict -2 output.mp4\nffmpeg -i input.mov -vcodec libvpx -an output.webm\n</code></pre>\n\n<pre><code class=\"language-bash\">ffmpeg -i input.mov -vcodec h264 -acodec aac -strict -2 output.mp4\nffmpeg -i input.mov -vcodec libvpx -acodec libvorbis output.webm\n</code></pre>\n\n<pre><code class=\"language-html\">&lt;video width=\"320\" height=\"240\" controls&gt;\n  &lt;source src=\"movie.mp4\" type='video/mp4'&gt;&lt;/source&gt;\n  &lt;source src=\"movie.webm\" type='video/ogg'&gt;&lt;/source&gt;\n&lt;/video&gt;\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/React/flux",
  "title": "Flux architecture",
  "url": "/sheets/React/flux",
  "category": "React",
  "keywords": null,
  "content_html": "<h2 id=\"architecture\">Architecture</h2>\n\n<ul>\n  <li>\n    <p><strong>Dispatchers</strong> receive <em>actions</em> that get dispatched to its listeners.</p>\n  </li>\n  <li>\n    <p><strong>Stores</strong> are objects that store data, usually changed from a dispatcher listener.</p>\n  </li>\n  <li>\n    <p><strong>Views</strong> are React components that listen to Store changes, or emit <em>actions</em> to the dispatcher.</p>\n  </li>\n</ul>\n\n<hr />\n\n<h2 id=\"dispatcher\">Dispatcher</h2>\n\n<h3 id=\"pub-sub\">Pub-sub</h3>\n<p><a href=\"http://facebook.github.io/flux/docs/dispatcher.html\">A dispatcher</a> emits events (<code>.dispatch()</code>) to its listeners (<code>.register(fn)</code>).</p>\n\n<pre><code class=\"language-js\">var Dispatcher = require('flux').Dispatcher;\n\nd = new Dispatcher();\n\n// send\nd.dispatch({ action: 'edit', ... };\n\n// receive\ntoken = d.register(function (payload) {\n  payload.action === 'edit'\n})\n</code></pre>\n\n<h3 id=\"ensuring-proper-order\">Ensuring proper order</h3>\n\n<p>With multiple listeners, you can ensure one is fired after another using <code>.waitFor()</code>.</p>\n\n<pre><code class=\"language-js\">token1 = d.register(...);\n\ntoken2 = d.register(function (payload) {\n\n  // ensure receiver 1 is fired before this\n  d.waitFor([ token1 ]);\n  \n  // process here\n})\n</code></pre>\n\n<h3 id=\"subclassing\">Subclassing</h3>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\">Object.assign</a> is the preferred way to subclass Dispatcher (think <code>$.extend</code>).<br />\nYou can also make <em>action creators</em>, which are shortcuts for <code>dispatch()</code>.</p>\n\n<pre><code class=\"language-js\">var Dispatcher = require('flux').Dispatcher;\nvar assign = require('object-assign');\n\nvar AppDispatcher = assign({}, Dispatcher.prototype, {\n\n  // action creator\n  handleViewAction(action) {\n    this.dispatch({\n      source: 'VIEW_ACTION',\n      action: action\n    })\n  } \n\n})\n</code></pre>\n\n<hr />\n\n<h2 id=\"stores\">Stores</h2>\n\n<h3 id=\"plain-objects\">Plain objects</h3>\n<p>Stores are just like objects.</p>\n\n<pre><code class=\"language-js\">var TodoStore = { list: [] };\n</code></pre>\n\n<h3 id=\"events\">Events</h3>\n<p>Sometimes they’re eventemitters, too. Usually it’s used to emit <code>change</code> events for views to pick up.</p>\n\n<pre><code class=\"language-js\">var TodoStore = assign({}, EventEmitter.prototype, {\n  ...\n});\n\nTodoStore.emit('change');\nTodoStore.on('change', function () { ... });\n</code></pre>\n\n<h3 id=\"model-logic\">Model logic</h3>\n<p>Logic can sometimes belong in stores.</p>\n\n<pre><code class=\"language-js\">{\n  isAllActive() {\n    return this.list.every(item =&gt; item.active);\n  }\n}\n</code></pre>\n\n<hr />\n\n<h2 id=\"stores-and-dispatchers\">Stores and dispatchers</h2>\n\n<h3 id=\"instantiate\">Instantiate</h3>\n<p>Make a Dispatcher and Stores.</p>\n\n<pre><code class=\"language-js\">d = new Dispatcher();\nTabStore = { tab: 'home' };\n</code></pre>\n\n<h3 id=\"updating-data\">Updating data</h3>\n<p>Dispatch events to alter the store.</p>\n\n<pre><code class=\"language-js\">d.dispatch({ action: 'tab.change', tab: 'timeline' });\n\nd.register(function (data) {\n  if (data.action === 'tab.change') {\n    TabStore.tab = data.tab;\n  }\n});\n</code></pre>\n\n<hr />\n\n<h2 id=\"with-views\">With Views</h2>\n\n<h3 id=\"listen-to-dispatchers\">Listen to dispatchers</h3>\n<p>Views (React Components) can listen to Dispatchers.</p>\n\n<pre><code class=\"language-js\">var TodoApp = React.createClass({\n\n  componentDidMount() {\n    this.token = AppDispatcher.register((payload) =&gt; {\n      switch (payload.action) {\n        case 'tab.change':\n          this.render();\n          // ...\n      }\n    });\n  },\n  \n  componentDidUnmount() {\n    AppDispatcher.unregister(this.token);\n  }\n  \n});\n</code></pre>\n\n<h3 id=\"listen-to-stores\">Listen to Stores</h3>\n<p>Or to Stores’s <code>change</code> events.</p>\n\n<pre><code class=\"language-js\">{\n  componentDidMount() {\n    TodoStore.on('change', this.onChange);\n  },\n  \n  componentDidUnmount() {\n    TodoState.removeListener('change', this.onChange);\n  },\n  \n  onChange(data) {\n    // ...\n  }\n}\n</code></pre>\n\n<hr />\n\n<h3 id=\"also-see\">Also see</h3>\n\n<ul>\n  <li><a href=\"http://facebook.github.io/flux/docs/dispatcher.html\">Dispatcher API</a></li>\n  <li><a href=\"react.html\">React cheatsheet</a></li>\n  <li><a href=\"https://github.com/facebook/flux/blob/master/src/Dispatcher.js\">Dispatcher.js source</a></li>\n  <li><a href=\"https://github.com/facebook/flux/tree/master/examples/flux-todomvc\">Flux-todomvc explanation</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Jekyll/gh-pages",
  "title": "GitHub pages",
  "url": "/sheets/Jekyll/gh-pages",
  "category": "Jekyll",
  "keywords": null,
  "content_html": "<h2 id=\"custom-domains\">Custom domains</h2>\n\n<h3 id=\"custom-domains-1\">Custom domains</h3>\n\n<pre><code class=\"language-sh\">$ echo \"foobar.com\" &gt; CNAME\n$ git commit &amp;&amp; git push\n</code></pre>\n\n<p>Create a <code>CNAME</code> file with your domain on it.</p>\n\n<p>See: <a href=\"https://help.github.com/articles/quick-start-setting-up-a-custom-domain/\">Setting up a custom domain</a> <em>(github.com)</em></p>\n\n<h3 id=\"set-up-your-domain\">Set up your domain</h3>\n\n<p class=\"-setup\">Subdomain (like www):</p>\n\n<pre><code> CNAME =&gt; username.github.io\n</code></pre>\n\n<p class=\"-setup\">Apex domains:</p>\n\n<pre><code> ALIAS =&gt; username.github.io\n</code></pre>\n\n<p class=\"-setup\">Apex domains (alternative):</p>\n\n<pre><code>A =&gt; 192.30.252.153\nA =&gt; 192.30.252.154\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"references\">References</h2>\n\n<ul>\n  <li><a href=\"https://pages.github.com\">https://pages.github.com</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Git/git-branch",
  "title": "Git branches",
  "url": "/sheets/Git/git-branch",
  "category": "Git",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"working-with-branches\">Working with branches</h2>\n\n<h3 id=\"creating\">Creating</h3>\n\n<pre><code class=\"language-bash\">git checkout -b $branchname\ngit push origin $branchname --set-upstream\n</code></pre>\n\n<p>Creates a new branch locally then pushes it.</p>\n\n<h3 id=\"getting-from-remote\">Getting from remote</h3>\n\n<pre><code class=\"language-bash\">git fetch origin\ngit checkout --track origin/$branchname\n</code></pre>\n\n<p>Gets a branch in a remote.</p>\n\n<h3 id=\"delete-local-remote-tracking-branches\">Delete local remote-tracking branches</h3>\n\n<pre><code class=\"language-bash\">git remote prune origin\n</code></pre>\n\n<p>Deletes <code>origin/*</code> branches in your local copy. Doesn’t affect the remote.</p>\n\n<h3 id=\"list-existing-branches\">List existing branches</h3>\n\n<pre><code class=\"language-bash\">git branch --list\n</code></pre>\n\n<p>Existing branches are listed. Current branch will be highlighted with an asterisk.</p>\n\n<h3 id=\"list-merged-branches\">List merged branches</h3>\n\n<pre><code class=\"language-bash\">git branch -a --merged\n</code></pre>\n\n<p>List outdated branches that have been merged into the current one.</p>\n\n<h3 id=\"delete-a-local-branch\">Delete a local branch</h3>\n\n<pre><code class=\"language-bash\">git branch -d $branchname\n</code></pre>\n\n<p>Deletes the branch only if the changes have been pushed and merged with remote.</p>\n\n<h3 id=\"delete-branch-forcefully\">Delete branch forcefully</h3>\n\n<pre><code class=\"language-bash\">git branch -D $branchname\n</code></pre>\n\n<pre><code class=\"language-bash\">git branch -d $branchname\n</code></pre>\n\n<blockquote>\n  <p>Note: You can also use the -D flag which is synonymous with –delete –force instead of -d. This will delete the branch regardless of its merge status.\nDelete a branch irrespective of its merged status.</p>\n</blockquote>\n\n<h3 id=\"delete-remote-branch\">Delete remote branch</h3>\n\n<pre><code class=\"language-bash\">git push origin --delete :$branchname\n</code></pre>\n\n<p>Works for tags, too!</p>\n\n<h3 id=\"get-current-sha1\">Get current sha1</h3>\n\n<pre><code class=\"language-bash\">git show-ref HEAD -s\n</code></pre>\n<h3 id=\"reset-branch-and-remove-all-changes\">Reset branch and remove all changes</h3>\n\n<pre><code class=\"language-bash\">git reset --hard\n</code></pre>\n\n<h3 id=\"undo-commits-to-a-specific-commit\">Undo commits to a specific commit</h3>\n\n<pre><code class=\"language-bash\">git reset --hard $commit_id\n\n# Now push to your branch\ngit push --force\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-02-13"
},{
  "id": "sheets/Git/git-extras",
  "title": "Git extras",
  "url": "/sheets/Git/git-extras",
  "category": "Git",
  "keywords": null,
  "content_html": "<h2 id=\"references\">References</h2>\n\n<h3 id=\"git-flow\">Git-flow</h3>\n\n<pre><code class=\"language-sh\">$ git feature myfeature\n  switched to branch 'feature/rofl'\n\n$ ...\n$ git checkout develop\n$ git feature finish myfeature\n  merging 'feature/rofl' into develop\n  deleted branch 'feature/rofl'\n</code></pre>\n\n<p>Also <code>git-bug</code> and <code>git-refactor</code>.</p>\n\n<h3 id=\"branches\">Branches</h3>\n\n<pre><code class=\"language-sh\">$ git delete-merged-branches\n  # hint: do `git remote prune origin` after\n\n$ git create-branch development\n$ git delete-branch development\n\n$ git fresh-branch gh-pages\n</code></pre>\n\n<h3 id=\"inspecting\">Inspecting</h3>\n\n<pre><code class=\"language-sh\">$ git summary   # repo age, commits, active days, etc\n$ git impact    # impact graph\n$ git effort    # commits per file\n</code></pre>\n\n<h3 id=\"github\">Github</h3>\n\n<pre><code class=\"language-sh\">$ git fork strongloop/express\n# sync your fork with the original repository:\n$ git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git\n$ git fetch upstream; git merge upstream/master\n</code></pre>\n\n<h3 id=\"tags\">Tags</h3>\n\n<pre><code class=\"language-sh\">$ git release v1.0.0           # commit, tag, push-tags\n$ git delete-tag v1.0.0\n</code></pre>\n\n<h3 id=\"conveniences\">Conveniences</h3>\n\n<pre><code class=\"language-sh\">$ git ignore \"*.log\"\n</code></pre>\n\n<h3 id=\"locking\">Locking</h3>\n\n<p>Assumes that changes will not be committed.</p>\n\n<pre><code class=\"language-sh\">$ git lock config/database.yml\n$ git unlock config/database.yml\n</code></pre>\n\n<h3 id=\"etc\">Etc</h3>\n\n<pre><code class=\"language-sh\">$ git obliterate secret.yml   # remove all references to it\n</code></pre>\n\n<h3 id=\"references-1\">References</h3>\n\n<ul>\n  <li>https://github.com/visionmedia/git-extras</li>\n</ul>",
  "intro_html": "<p>Quick reference to some utilities in the <a href=\"https://github.com/tj/git-extras\">git-extras</a> utilities.</p>",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Git/git-log-format",
  "title": "Git log format string",
  "url": "/sheets/Git/git-log-format",
  "category": "Git",
  "keywords": ["git log --pretty=format:%H","%H - Commit hash","%an - Author","%aD - Author date"],
  "content_html": "<h2 class=\"-three-column\" id=\"log-format\">Log format</h2>\n\n<h3 class=\"-prime\" id=\"pretty-format\">Pretty format</h3>\n\n<pre><code class=\"language-bash\">git log --pretty=\"format:%H\"\n</code></pre>\n\n<p>See the next tables on format variables.</p>\n\n<h3 id=\"hash\">Hash</h3>\n\n<h4 id=\"commit\">Commit</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%H</code></td>\n      <td>commit hash</td>\n    </tr>\n    <tr>\n      <td><code>%h</code></td>\n      <td>(abbrev) commit hash</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"tree\">Tree</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%T</code></td>\n      <td>tree hash</td>\n    </tr>\n    <tr>\n      <td><code>%t</code></td>\n      <td>(abbrev) tree hash</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"parent\">Parent</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%P</code></td>\n      <td>parent hash</td>\n    </tr>\n    <tr>\n      <td><code>%p</code></td>\n      <td>(abbrev) parent hash</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"commit-1\">Commit</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%s</code></td>\n      <td>commit subject</td>\n    </tr>\n    <tr>\n      <td><code>%f</code></td>\n      <td>commit subject, filename style</td>\n    </tr>\n    <tr>\n      <td><code>%b</code></td>\n      <td>commit body</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>%d</code></td>\n      <td>ref names</td>\n    </tr>\n    <tr>\n      <td><code>%e</code></td>\n      <td>encoding</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"author-and-committer\">Author and committer</h2>\n\n<h3 id=\"author\">Author</h3>\n\n<h4 id=\"name\">Name</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%an</code></td>\n      <td>author</td>\n    </tr>\n    <tr>\n      <td><code>%aN</code></td>\n      <td>author, respecting mailmap</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"email\">Email</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%ae</code></td>\n      <td>author email</td>\n    </tr>\n    <tr>\n      <td><code>%aE</code></td>\n      <td>author email, respecting mailmap</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"date\">Date</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%aD</code></td>\n      <td>author date (rfc2882)</td>\n    </tr>\n    <tr>\n      <td><code>%ar</code></td>\n      <td>author date (relative)</td>\n    </tr>\n    <tr>\n      <td><code>%at</code></td>\n      <td>author date (unix timestamp)</td>\n    </tr>\n    <tr>\n      <td><code>%ai</code></td>\n      <td>author date (iso8601)</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"committer\">Committer</h3>\n\n<h4 id=\"name-1\">Name</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%cn</code></td>\n      <td>committer name</td>\n    </tr>\n    <tr>\n      <td><code>%cN</code></td>\n      <td>committer name, respecting mailmap</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"email-1\">Email</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%ce</code></td>\n      <td>committer email</td>\n    </tr>\n    <tr>\n      <td><code>%cE</code></td>\n      <td>committer email, respecting mailmap</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"date-1\">Date</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%cD</code></td>\n      <td>committer date (rfc2882)</td>\n    </tr>\n    <tr>\n      <td><code>%cr</code></td>\n      <td>committer date (relative)</td>\n    </tr>\n    <tr>\n      <td><code>%ct</code></td>\n      <td>committer date (unix timestamp)</td>\n    </tr>\n    <tr>\n      <td><code>%ci</code></td>\n      <td>committer date (iso8601)</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"./git-log\">Git log cheatsheet</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2017-10-18"
},{
  "id": "sheets/Git/git-log",
  "title": "git log",
  "url": "/sheets/Git/git-log",
  "category": "Git",
  "keywords": null,
  "content_html": "<h3 id=\"revision-ranges\">Revision ranges</h3>\n\n<pre><code class=\"language-bash\">git log master             # branch\ngit log origin/master      # branch, remote\ngit log v1.0.0             # tag\n\ngit log master develop\n\ngit log v2.0..master       # reachable from *master* but not *v2.0*\ngit log v2.0...master      # reachable from *master* and *v2.0*, but not both\n</code></pre>\n\n<p>See <a href=\"./git-revisions\">gitrevisions</a>.</p>\n\n<h3 id=\"basic-filters\">Basic filters</h3>\n\n<pre><code class=\"language-bash\">-n, --max-count=2\n    --skip=2\n</code></pre>\n\n<pre><code class=\"language-bash\">    --since=\"1 week ago\"\n    --until=\"yesterday\"\n</code></pre>\n\n<pre><code class=\"language-bash\">    --author=\"Rico\"\n    --committer=\"Rico\"\n</code></pre>\n\n<h3 id=\"search\">Search</h3>\n\n<pre><code class=\"language-bash\">    --grep=\"Merge pull request\"   # in commit messages\n    -S\"console.log\"               # in code\n    -G\"foo.*\"                     # in code (regex)\n</code></pre>\n\n<pre><code class=\"language-bash\">    --invert-grep\n    --all-match                   # AND in multi --grep\n</code></pre>\n\n<h3 id=\"limiting\">Limiting</h3>\n\n<pre><code class=\"language-bash\">    --merges\n    --no-merges\n</code></pre>\n\n<pre><code class=\"language-bash\">    --first-parent          # no stuff from merged branches\n</code></pre>\n\n<pre><code class=\"language-bash\">    --branches=\"feature/*\"\n    --tags=\"v*\"\n    --remotes=\"origin\"\n</code></pre>\n\n<h3 id=\"simplification\">Simplification</h3>\n\n<pre><code class=\"language-bash\">git log -- app/file.rb          # only file\n    --simplify-by-decoration    # tags and branches\n</code></pre>\n\n<h3 id=\"ordering\">Ordering</h3>\n\n<pre><code class=\"language-bash\">    --date-order\n    --author-date-order\n    --topo-order              # \"smart\" ordering\n    --reverse\n</code></pre>\n\n<h3 id=\"formatting\">Formatting</h3>\n\n<pre><code class=\"language-bash\">    --abbrev-commit\n    --oneline\n    --graph\n</code></pre>\n\n<h3 id=\"custom-formats\">Custom formats</h3>\n\n<pre><code class=\"language-bash\">    --pretty=\"format:%H\"\n</code></pre>\n\n<p>See: <a href=\"./git-log-format\">Git log format cheatsheet</a></p>\n\n<h2 id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"./git-log-format\">Git log format cheatsheet</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Git/git-revisions",
  "title": "Git revisions",
  "url": "/sheets/Git/git-revisions",
  "category": "Git",
  "keywords": null,
  "content_html": "<h3 id=\"example-usages\">Example usages</h3>\n\n<table class=\"-mute-em\">\n  <tbody>\n    <tr>\n      <td><em><code>git log</code></em> <code>master...develop</code></td>\n      <td>inspect differences in branches</td>\n    </tr>\n    <tr>\n      <td><em><code>git rebase -i</code></em> <code>HEAD~3</code></td>\n      <td>rebase last 3 commits</td>\n    </tr>\n    <tr>\n      <td><em><code>git reset --hard</code></em> <code>HEAD@{2}</code></td>\n      <td>undo last operation that changed HEAD</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>v2^{}</code></td>\n      <td>checkout the <code>v2</code> tag (not <code>v2</code> branch)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>The 3rd argument in each of these commands is a <code>gitrevision</code>. These gitrevisions can be passed to many Git commands.</p>\n\n<h3 id=\"common-git-revisions\">Common git revisions</h3>\n\n<table class=\"-mute-em\">\n  <thead>\n    <tr>\n      <th>Reference</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><em><code>git show</code></em> <code>dae68e1</code></td>\n      <td>sha1</td>\n    </tr>\n    <tr>\n      <td><em><code>git show</code></em> <code>HEAD</code></td>\n      <td>reference</td>\n    </tr>\n    <tr>\n      <td><em><code>git show</code></em> <code>v1.0.0</code></td>\n      <td>tag</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git show</code></em> <code>master</code></td>\n      <td>local branch</td>\n    </tr>\n    <tr>\n      <td><em><code>git show</code></em> <code>origin/master</code></td>\n      <td>remote branch</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git show</code></em> <code>master~2</code></td>\n      <td>2 commits back from master</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git show</code></em> <code>master..fix</code></td>\n      <td>reachable from <em>fix</em> but not <em>master</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git show</code></em> <code>master...fix</code></td>\n      <td>reachable from <em>fix</em> and <em>master</em>, but not both</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>These are just the common ones, there’s a lot more below! (These work in many other commands, not just <code>git show</code>.)</p>\n\n<h2 id=\"reference\">Reference</h2>\n\n<h3 id=\"commits\">Commits</h3>\n\n<table class=\"-mute-em\">\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>dae68e1</code></td>\n      <td>sha1</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"references\">References</h3>\n\n<table class=\"-mute-em\">\n  <thead>\n    <tr>\n      <th>Example</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>HEAD</code></td>\n      <td>reference</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master</code></td>\n      <td>branch</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>v1.0.0</code></td>\n      <td>tag</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>origin/master</code></td>\n      <td>aka, <em>refs/remotes/origin/master</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>heads/master</code></td>\n      <td>aka, <em>refs/heads/master</em></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"searching-back\">Searching back</h3>\n\n<table class=\"-mute-em\">\n  <thead>\n    <tr>\n      <th>Example</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master@{yesterday}</code></td>\n      <td>also <em>1 day ago</em>, etc</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master@{2}</code></td>\n      <td>2nd prior value</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master@{push}</code></td>\n      <td>where <em>master</em> would push to</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master^</code></td>\n      <td>parent commit</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master^2</code></td>\n      <td>2nd parent, eg, what it merged</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master~5</code></td>\n      <td>5 parents back</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master^0</code></td>\n      <td>this commit; disambiguates from tags</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>v0.99.8^{tag}</code></td>\n      <td>can be <em>commit</em>, <em>tag</em>, <em>tree</em>, <em>object</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>v0.99.8^{}</code></td>\n      <td>defaults to <em>{tag}</em></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>\":/fix bug\"</code></td>\n      <td>searches commit messages</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"other\">Other</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>HEAD:README</code></td>\n      <td>…</td>\n    </tr>\n    <tr>\n      <td><code>0:README</code></td>\n      <td>(0 to 3) …</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"ranges\">Ranges</h2>\n\n<h3 id=\"ranges-1\">Ranges</h3>\n\n<table class=\"-mute-em\">\n  <tbody>\n    <tr>\n      <td><em><code>git log</code></em> <code>master</code></td>\n      <td>reachable parents from master</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>^master</code></td>\n      <td>exclude reachable parents from master</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>master..fix</code></td>\n      <td>reachable from <em>fix</em> but not <em>master</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>master...fix</code></td>\n      <td>reachable from <em>fix</em> and <em>master</em>, but not both</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>HEAD^@</code></td>\n      <td>parents of <em>HEAD</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>HEAD^!</code></td>\n      <td><em>HEAD</em>, then excluding parents’s ancestors</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>HEAD^{:/fix}</code></td>\n      <td>search previous <em>HEAD</em>s matching criteria</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"ranges-illustration\">Ranges illustration</h3>\n\n<pre class=\"-box-chars -setup\"><code class=\"language-nohighlight\">A ─┬─ E ── F ── G   master\n   │\n   └─ B ── C ── D   fix\n</code></pre>\n\n<table class=\"-mute-em\">\n  <tbody>\n    <tr>\n      <td><em><code>git log</code></em> <code>master..fix</code></td>\n      <td>BCD</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>master...fix</code></td>\n      <td>BCD and EFG</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"references-1\">References</h2>\n\n<ul>\n  <li><a href=\"https://www.kernel.org/pub/software/scm/git/docs/gitrevisions.html\">Git Tools - Revision Selection</a> <em>(git-scm.com)</em></li>\n  <li><a href=\"https://www.kernel.org/pub/software/scm/git/docs/gitrevisions.html\">gitrevisions(7)</a> <em>(kernel.org)</em></li>\n</ul>",
  "intro_html": "<p>A list of revision specifications you can use with <code>git log</code> and many other Git commands. Summarized from <code>gitrevisions(7)</code> man page.</p>",
  "description_html": "",
  "tags": null,
  "updated": "2017-10-11"
},{
  "id": "sheets/Git/git-tricks",
  "title": "Git tricks",
  "url": "/sheets/Git/git-tricks",
  "category": "Git",
  "keywords": null,
  "content_html": "<h2 id=\"refs\">Refs</h2>\n\n<pre><code>HEAD^       # 1 commit before head\nHEAD^^      # 2 commits before head\nHEAD~5      # 5 commits before head\n</code></pre>\n\n<h2 id=\"branches\">Branches</h2>\n\n<pre><code># create a new branch\n  git checkout -b $branchname\n  git push origin $branchname --set-upstream\n\n# get a remote branch\n  git fetch origin\n  git checkout --track origin/$branchname\n\n# delete local remote-tracking branches (lol)\n  git remote prune origin\n\n# list merged branches\n  git branch -a --merged\n\n# delete remote branch\n  git push origin :$branchname\n  \n# go back to previous branch\n  git checkout -\n</code></pre>\n\n<h2 id=\"collaboration\">Collaboration</h2>\n\n<pre><code># Rebase your changes on top of the remote master\n  git pull --rebase upstream master\n  \n# Squash multiple commits into one for a cleaner git log\n# (on the following screen change the word pick to either 'f' or 's')\n  git rebase -i $commit_ref\n</code></pre>\n\n<h2 id=\"submodules\">Submodules</h2>\n\n<pre><code># Import .gitmodules\n  git submodule init\n\n# Clone missing submodules, and checkout commits\n  git submodule update --init --recursive\n\n# Update remote URLs in .gitmodules\n# (Use when you changed remotes in submodules)\n  git submodule sync\n</code></pre>\n\n<h2 id=\"diff\">Diff</h2>\n\n<h3 id=\"diff-with-stats\">Diff with stats</h3>\n\n<pre><code>git diff --stat\napp/a.txt    | 2 +-\napp/b.txt    | 8 ++----\n2 files changed, 10 insertions(+), 84 deletions(-)\n</code></pre>\n\n<h3 id=\"just-filenames\">Just filenames</h3>\n\n<pre><code>git diff --summary\n</code></pre>\n\n<h2 id=\"log-options\">Log options</h2>\n\n<pre><code>--oneline\n  e11e9f9 Commit message here\n\n--decorate\n  shows \"(origin/master)\"\n\n--graph\n  shows graph lines\n\n--date=relative\n  \"2 hours ago\"\n</code></pre>\n\n<h2 id=\"misc\">Misc</h2>\n\n<h3 id=\"cherry-pick\">Cherry pick</h3>\n\n<pre><code>git rebase 76acada^\n</code></pre>\n\n<h3 id=\"misc-1\">Misc</h3>\n\n<pre><code># get current sha1 (?)\n  git show-ref HEAD -s\n\n# show single commit info\n  git log -1 f5a960b5\n\n# Go back up to root directory\n  cd \"$(git rev-parse --show-top-level)\"\n</code></pre>\n\n<h2 id=\"short-log\">Short log</h2>\n\n<pre><code> $ git shortlog\n $ git shortlog HEAD~20..    # last 20 commits\n\n James Dean (1):\n     Commit here\n     Commit there\n\n Frank Sinatra (5):\n     Another commit\n     This other commit\n</code></pre>\n\n<h2 id=\"bisect\">Bisect</h2>\n\n<pre><code>git bisect start HEAD HEAD~6\ngit bisect run npm test\ngit checkout refs/bisect/bad   # this is where it screwed up\ngit bisect reset\n</code></pre>\n\n<h3 id=\"manual-bisection\">Manual bisection</h3>\n\n<pre><code>git bisect start\ngit bisect good   # current version is good\n\ngit checkout HEAD~8\nnpm test          # see if it's good\ngit bisect bad    # current version is bad\n\ngit bisect reset  # abort\n</code></pre>\n\n<h2 id=\"searching\">Searching</h2>\n\n<pre><code>git log --grep=\"fixes things\"  # search in commit messages\ngit log -S\"window.alert\"       # search in code\ngit log -G\"foo.*\"              # search in code (regex)\n</code></pre>\n\n<h2 id=\"gpg-signing\">GPG Signing</h2>\n\n<pre><code>git config set user.signingkey &lt;GPG KEY ID&gt;       # Sets GPG key to use for signing\n\ngit commit -m \"Implement feature Y\" --gpg-sign    # Or -S, GPG signs commit\n\ngit config set commit.gpgsign true                # Sign commits by default\ngit commit -m \"Implement feature Y\" --no-gpg-sign # Do not sign\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Go/go",
  "title": "Go",
  "url": "/sheets/Go/go",
  "category": "Go",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"getting-started\">Getting started</h2>\n\n<h3 class=\"-intro\" id=\"introduction\">Introduction</h3>\n\n<ul>\n  <li><a href=\"https://tour.golang.org/welcome/1\">A tour of Go</a> <em>(tour.golang.org)</em></li>\n  <li><a href=\"https://repl.it/languages/go\">Go repl</a> <em>(repl.it)</em></li>\n  <li><a href=\"https://github.com/golang/go/wiki/\">Golang wiki</a> <em>(github.com)</em></li>\n</ul>\n\n<h3 class=\"-prime\" id=\"hello-world\">Hello world</h3>\n\n<h4 class=\"-file\" id=\"hellogo\">hello.go</h4>\n\n<pre><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n  message := greetMe(\"world\")\n  fmt.Println(message)\n}\n\nfunc greetMe(name string) string {\n  return \"Hello, \" + name + \"!\"\n}\n</code></pre>\n\n<pre><code class=\"language-bash\">$ go build\n</code></pre>\n\n<p>Or try it out in the <a href=\"https://repl.it/languages/go\">Go repl</a>, or <a href=\"https://tour.golang.org/welcome/1\">A Tour of Go</a>.</p>\n\n<h3 id=\"variables\">Variables</h3>\n\n<h4 id=\"variable-declaration\">Variable declaration</h4>\n\n<pre><code class=\"language-go\">var msg string\nmsg = \"Hello\"\n</code></pre>\n\n<h4 id=\"shortcut-of-above-infers-type\">Shortcut of above (Infers type)</h4>\n\n<pre><code class=\"language-go\">msg := \"Hello\"\n</code></pre>\n\n<h3 id=\"constants\">Constants</h3>\n\n<pre><code class=\"language-go\">const Phi = 1.618\n</code></pre>\n\n<p>Constants can be character, string, boolean, or numeric values.</p>\n\n<p>See: <a href=\"https://tour.golang.org/basics/15\">Constants</a></p>\n\n<h2 class=\"-three-column\" id=\"basic-types\">Basic types</h2>\n\n<h3 id=\"strings\">Strings</h3>\n\n<pre><code class=\"language-go\">str := \"Hello\"\n</code></pre>\n\n<pre><code class=\"language-go\">str := `Multiline\nstring`\n</code></pre>\n\n<p>Strings are of type <code>string</code>.</p>\n\n<h3 id=\"numbers\">Numbers</h3>\n\n<h4 id=\"typical-types\">Typical types</h4>\n\n<pre><code class=\"language-go\">num := 3          // int\nnum := 3.         // float64\nnum := 3 + 4i     // complex128\nnum := byte('a')  // byte (alias for uint8)\n</code></pre>\n\n<h4 id=\"other-types\">Other types</h4>\n\n<pre><code class=\"language-go\">var u uint = 7        // uint (unsigned)\nvar p float32 = 22.7  // 32-bit float\n</code></pre>\n\n<h3 id=\"arrays\">Arrays</h3>\n\n<pre><code class=\"language-go\">// var numbers [5]int\nnumbers := [...]int{0, 0, 0, 0, 0}\n</code></pre>\n\n<p>Arrays have a fixed size.</p>\n\n<h3 id=\"slices\">Slices</h3>\n\n<pre><code class=\"language-go\">slice := []int{2, 3, 4}\n</code></pre>\n\n<pre><code class=\"language-go\">slice := []byte(\"Hello\")\n</code></pre>\n\n<p>Slices have a dynamic size, unlike arrays.</p>\n\n<h3 id=\"pointers\">Pointers</h3>\n\n<pre data-line=\"2\"><code class=\"language-go\">func main () {\n  b := *getPointer()\n  fmt.Println(\"Value is\", b)\n}\n</code></pre>\n\n<pre data-line=\"3\"><code class=\"language-go\">func getPointer () (myPointer *int) {\n  a := 234\n  return &amp;a\n}\n</code></pre>\n\n<pre data-line=\"2\"><code class=\"language-go\">a := new(int)\n*a = 234\n</code></pre>\n\n<p>Pointers point to a memory location of a variable. Go is fully garbage-collected.</p>\n\n<p>See: <a href=\"https://tour.golang.org/moretypes/1\">Pointers</a></p>\n\n<h3 id=\"type-conversions\">Type conversions</h3>\n\n<pre><code class=\"language-go\">i := 2\nf := float64(i)\nu := uint(i)\n</code></pre>\n\n<p>See: <a href=\"https://tour.golang.org/basics/13\">Type conversions</a></p>\n\n<h2 class=\"-three-column\" id=\"flow-control\">Flow control</h2>\n\n<h3 id=\"conditional\">Conditional</h3>\n\n<pre data-line=\"1,3,5\"><code class=\"language-go\">if day == \"sunday\" || day == \"saturday\" {\n  rest()\n} else if day == \"monday\" &amp;&amp; isTired() {\n  groan()\n} else {\n  work()\n}\n</code></pre>\n\n<p>See: <a href=\"https://tour.golang.org/flowcontrol/5\">If</a></p>\n\n<h3 id=\"statements-in-if\">Statements in if</h3>\n\n<pre data-line=\"1\"><code class=\"language-go\">if _, err := doThing(); err != nil {\n  fmt.Println(\"Uh oh\")\n}\n</code></pre>\n\n<p>A condition in an <code>if</code> statement can be preceded with a statement before a <code>;</code>. Variables declared by the statement are only in scope until the end of the <code>if</code>.</p>\n\n<p>See: <a href=\"https://tour.golang.org/flowcontrol/6\">If with a short statement</a></p>\n\n<h3 id=\"switch\">Switch</h3>\n\n<pre><code class=\"language-go\">switch day {\n  case \"sunday\":\n    // cases don't \"fall through\" by default!\n    fallthrough\n\n  case \"saturday\":\n    rest()\n\n  default:\n    work()\n}\n</code></pre>\n\n<p>See: <a href=\"https://github.com/golang/go/wiki/Switch\">Switch</a></p>\n\n<h3 id=\"for-loop\">For loop</h3>\n\n<pre><code class=\"language-go\">for count := 0; count &lt;= 10; count++ {\n  fmt.Println(\"My counter is at\", count)\n}\n</code></pre>\n\n<p>See: <a href=\"https://tour.golang.org/flowcontrol/1\">For loops</a></p>\n\n<h3 id=\"for-range-loop\">For-Range loop</h3>\n\n<pre><code class=\"language-go\">entry := []string{\"Jack\",\"John\",\"Jones\"}\nfor i, val := range entry {\n  fmt.Printf(\"At position %d, the character %s is present\\n\", i, val)\n}\n</code></pre>\n\n<p>See: <a href=\"https://gobyexample.com/range\">For-Range loops</a></p>\n\n<h2 class=\"-three-column\" id=\"functions\">Functions</h2>\n\n<h3 id=\"lambdas\">Lambdas</h3>\n\n<pre data-line=\"1\"><code class=\"language-go\">myfunc := func() bool {\n  return x &gt; 10000\n}\n</code></pre>\n\n<p>Functions are first class objects.</p>\n\n<h3 id=\"multiple-return-types\">Multiple return types</h3>\n\n<pre><code class=\"language-go\">a, b := getMessage()\n</code></pre>\n\n<pre data-line=\"2\"><code class=\"language-go\">func getMessage() (a string, b string) {\n  return \"Hello\", \"World\"\n}\n</code></pre>\n\n<h3 id=\"named-return-values\">Named return values</h3>\n\n<pre data-line=\"4\"><code class=\"language-go\">func split(sum int) (x, y int) {\n  x = sum * 4 / 9\n  y = sum - x\n  return\n}\n</code></pre>\n\n<p>By defining the return value names in the signature, a <code>return</code> (no args) will return variables with those names.</p>\n\n<p>See: <a href=\"https://tour.golang.org/basics/7\">Named return values</a></p>\n\n<h2 class=\"-three-column\" id=\"packages\">Packages</h2>\n\n<h3 id=\"importing\">Importing</h3>\n\n<pre><code class=\"language-go\">import \"fmt\"\nimport \"math/rand\"\n</code></pre>\n\n<pre><code class=\"language-go\">import (\n  \"fmt\"        // gives fmt.Println\n  \"math/rand\"  // gives rand.Intn\n)\n</code></pre>\n\n<p>Both are the same.</p>\n\n<p>See: <a href=\"https://tour.golang.org/basics/1\">Importing</a></p>\n\n<h3 id=\"aliases\">Aliases</h3>\n\n<pre data-line=\"1\"><code class=\"language-go\">import r \"math/rand\"\n</code></pre>\n\n<pre><code class=\"language-go\">r.Intn()\n</code></pre>\n\n<h3 id=\"exporting-names\">Exporting names</h3>\n\n<pre><code class=\"language-go\">func Hello () {\n  ···\n}\n</code></pre>\n\n<p>Exported names begin with capital letters.</p>\n\n<p>See: <a href=\"https://tour.golang.org/basics/3\">Exported names</a></p>\n\n<h3 id=\"packages-1\">Packages</h3>\n\n<pre><code class=\"language-go\">package hello\n</code></pre>\n\n<p>Every package file has to start with <code>package</code>.</p>\n\n<h2 class=\"-three-column\" id=\"concurrency\">Concurrency</h2>\n\n<h3 id=\"goroutines\">Goroutines</h3>\n\n<pre data-line=\"3,6,7,8,13\"><code class=\"language-go\">func main() {\n  // A \"channel\"\n  ch := make(chan string)\n\n  // Start concurrent routines\n  go push(\"Moe\", ch)\n  go push(\"Larry\", ch)\n  go push(\"Curly\", ch)\n\n  // Read 3 results\n  // (Since our goroutines are concurrent,\n  // the order isn't guaranteed!)\n  fmt.Println(&lt;-ch, &lt;-ch, &lt;-ch)\n}\n</code></pre>\n\n<pre data-line=\"3\"><code class=\"language-go\">func push(name string, ch chan string) {\n  msg := \"Hey, \" + name\n  ch &lt;- msg\n}\n</code></pre>\n\n<p>Channels are concurrency-safe communication objects, used in goroutines.</p>\n\n<p>See: <a href=\"https://tour.golang.org/concurrency/1\">Goroutines</a>, <a href=\"https://tour.golang.org/concurrency/2\">Channels</a></p>\n\n<h3 id=\"buffered-channels\">Buffered channels</h3>\n\n<pre data-line=\"1\"><code class=\"language-go\">ch := make(chan int, 2)\nch &lt;- 1\nch &lt;- 2\nch &lt;- 3\n// fatal error:\n// all goroutines are asleep - deadlock!\n</code></pre>\n\n<p>Buffered channels limit the amount of messages it can keep.</p>\n\n<p>See: <a href=\"https://tour.golang.org/concurrency/3\">Buffered channels</a></p>\n\n<h3 id=\"closing-channels\">Closing channels</h3>\n\n<h4 id=\"closes-a-channel\">Closes a channel</h4>\n\n<pre data-line=\"4\"><code class=\"language-go\">ch &lt;- 1\nch &lt;- 2\nch &lt;- 3\nclose(ch)\n</code></pre>\n\n<h4 id=\"iterates-across-a-channel-until-its-closed\">Iterates across a channel until its closed</h4>\n\n<pre data-line=\"1\"><code class=\"language-go\">for i := range ch {\n  ···\n}\n</code></pre>\n\n<h4 id=\"closed-if-ok--false\">Closed if <code>ok == false</code></h4>\n\n<pre><code class=\"language-go\">v, ok := &lt;- ch\n</code></pre>\n\n<p>See: <a href=\"https://tour.golang.org/concurrency/4\">Range and close</a></p>\n\n<h3 id=\"waitgroup\">WaitGroup</h3>\n\n<pre data-line=\"1,4,8,12\"><code class=\"language-go\">import \"sync\"\n\nfunc main() {\n  var wg sync.WaitGroup\n  \n  for _, item := range itemList {\n    // Increment WaitGroup Counter\n    wg.Add(1)\n    go doOperation(item)\n  }\n  // Wait for goroutines to finish\n  wg.Wait()\n  \n}\n</code></pre>\n\n<pre data-line=\"2\"><code class=\"language-go\">func doOperation(item string) {\n  defer wg.Done()\n  // do operation on item\n  // ...\n}\n</code></pre>\n\n<p>A WaitGroup waits for a collection of goroutines to finish. The main goroutine calls Add to set the number of goroutines to wait for. The goroutine calls <code>wg.Done()</code> when it finishes.\nSee: <a href=\"https://golang.org/pkg/sync/#WaitGroup\">WaitGroup</a></p>\n\n<h2 id=\"error-control\">Error control</h2>\n\n<h3 id=\"defer\">Defer</h3>\n\n<pre data-line=\"2\"><code class=\"language-go\">func main() {\n  defer fmt.Println(\"Done\")\n  fmt.Println(\"Working...\")\n}\n</code></pre>\n\n<p>Defers running a function until the surrounding function returns.\nThe arguments are evaluated immediately, but the function call is not ran until later.</p>\n\n<p>See: <a href=\"https://blog.golang.org/defer-panic-and-recover\">Defer, panic and recover</a></p>\n\n<h3 id=\"deferring-functions\">Deferring functions</h3>\n\n<pre data-line=\"2,3,4\"><code class=\"language-go\">func main() {\n  defer func() {\n    fmt.Println(\"Done\")\n  }()\n  fmt.Println(\"Working...\")\n}\n</code></pre>\n\n<p>Lambdas are better suited for defer blocks.</p>\n\n<pre data-line=\"3,4,5\"><code class=\"language-go\">func main() {\n  var d = int64(0)\n  defer func(d *int64) {\n    fmt.Printf(\"&amp; %v Unix Sec\\n\", *d)\n  }(&amp;d)\n  fmt.Print(\"Done \")\n  d = time.Now().Unix()\n}\n</code></pre>\n<p>The defer func uses current value of d, unless we use a pointer to get final value at end of main.</p>\n\n<h2 class=\"-three-column\" id=\"structs\">Structs</h2>\n\n<h3 id=\"defining\">Defining</h3>\n\n<pre data-line=\"1,2,3,4\"><code class=\"language-go\">type Vertex struct {\n  X int\n  Y int\n}\n</code></pre>\n\n<pre><code class=\"language-go\">func main() {\n  v := Vertex{1, 2}\n  v.X = 4\n  fmt.Println(v.X, v.Y)\n}\n</code></pre>\n\n<p>See: <a href=\"https://tour.golang.org/moretypes/2\">Structs</a></p>\n\n<h3 id=\"literals\">Literals</h3>\n\n<pre><code class=\"language-go\">v := Vertex{X: 1, Y: 2}\n</code></pre>\n\n<pre><code class=\"language-go\">// Field names can be omitted\nv := Vertex{1, 2}\n</code></pre>\n\n<pre><code class=\"language-go\">// Y is implicit\nv := Vertex{X: 1}\n</code></pre>\n\n<p>You can also put field names.</p>\n\n<h3 id=\"pointers-to-structs\">Pointers to structs</h3>\n\n<pre><code class=\"language-go\">v := &amp;Vertex{1, 2}\nv.X = 2\n</code></pre>\n\n<p>Doing <code>v.X</code> is the same as doing <code>(*v).X</code>, when <code>v</code> is a pointer.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<h3 id=\"receivers\">Receivers</h3>\n\n<pre><code class=\"language-go\">type Vertex struct {\n  X, Y float64\n}\n</code></pre>\n\n<pre data-line=\"1\"><code class=\"language-go\">func (v Vertex) Abs() float64 {\n  return math.Sqrt(v.X * v.X + v.Y * v.Y)\n}\n</code></pre>\n\n<pre><code class=\"language-go\">v := Vertex{1, 2}\nv.Abs()\n</code></pre>\n\n<p>There are no classes, but you can define functions with <em>receivers</em>.</p>\n\n<p>See: <a href=\"https://tour.golang.org/methods/1\">Methods</a></p>\n\n<h3 id=\"mutation\">Mutation</h3>\n\n<pre data-line=\"1\"><code class=\"language-go\">func (v *Vertex) Scale(f float64) {\n  v.X = v.X * f\n  v.Y = v.Y * f\n}\n</code></pre>\n\n<pre><code class=\"language-go\">v := Vertex{6, 12}\nv.Scale(0.5)\n// `v` is updated\n</code></pre>\n\n<p>By defining your receiver as a pointer (<code>*Vertex</code>), you can do mutations.</p>\n\n<p>See: <a href=\"https://tour.golang.org/methods/4\">Pointer receivers</a></p>\n\n<h2 id=\"interfaces\">Interfaces</h2>\n\n<h3 id=\"a-basic-interface\">A basic interface</h3>\n\n<pre><code class=\"language-go\">type Shape interface {\n  Area() float64\n  Perimeter() float64\n}\n</code></pre>\n\n<h3 id=\"struct\">Struct</h3>\n\n<pre><code class=\"language-go\">type Rectangle struct {\n  Length, Width float64\n}\n</code></pre>\n\n<p>Struct <code>Rectangle</code> implicitly implements interface <code>Shape</code> by implementing all of its methods.</p>\n\n<h3 id=\"methods-1\">Methods</h3>\n\n<pre><code class=\"language-go\">func (r Rectangle) Area() float64 {\n  return r.Length * r.Width\n}\n\nfunc (r Rectangle) Perimeter() float64 {\n  return 2 * (r.Length + r.Width)\n}\n</code></pre>\n\n<p>The methods defined in <code>Shape</code> are implemented in <code>Rectangle</code>.</p>\n\n<h3 id=\"interface-example\">Interface example</h3>\n\n<pre><code class=\"language-go\">func main() {\n  var r Shape = Rectangle{Length: 3, Width: 4}\n  fmt.Printf(\"Type of r: %T, Area: %v, Perimeter: %v.\", r, r.Area(), r.Perimeter())\n}\n</code></pre>\n\n<h2 id=\"references\">References</h2>\n\n<h3 class=\"-intro\" id=\"official-resources\">Official resources</h3>\n\n<ul>\n  <li><a href=\"https://tour.golang.org/welcome/1\">A tour of Go</a> <em>(tour.golang.org)</em></li>\n  <li><a href=\"https://github.com/golang/go/wiki/\">Golang wiki</a> <em>(github.com)</em></li>\n  <li><a href=\"https://golang.org/doc/effective_go.html\">Effective Go</a> <em>(golang.org)</em></li>\n</ul>\n\n<h3 class=\"-intro\" id=\"other-links\">Other links</h3>\n\n<ul>\n  <li><a href=\"https://gobyexample.com/\">Go by Example</a> <em>(gobyexample.com)</em></li>\n  <li><a href=\"https://awesome-go.com/\">Awesome Go</a> <em>(awesome-go.com)</em></li>\n  <li><a href=\"https://www.youtube.com/channel/UC_BzFbxG2za3bp5NRRRXJSw\">JustForFunc Youtube</a> <em>(youtube.com)</em></li>\n  <li><a href=\"https://github.com/golang/go/wiki/CodeReviewComments\">Style Guide</a> <em>(github.com)</em></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": ["Featured"],
  "updated": "2020-06-21"
},{
  "id": "sheets/API/graphql",
  "title": "GraphQL",
  "url": "/sheets/API/graphql",
  "category": "API",
  "keywords": null,
  "content_html": "<h2 id=\"intro\">Intro</h2>\n\n<h2 class=\"-three-column\" id=\"queries\">Queries</h2>\n\n<h3 id=\"basic-query\">Basic query</h3>\n\n<pre><code class=\"language-js\">{ status }\n</code></pre>\n\n<h4>↓</h4>\n\n<pre class=\"-setup\"><code class=\"language-js\">{ status: 'available' }\n</code></pre>\n\n<h3 id=\"nesting\">Nesting</h3>\n\n<pre><code class=\"language-js\">{ hero { name height } }\n</code></pre>\n\n<h4 id=\"-1\">↓</h4>\n\n<pre class=\"-setup\"><code class=\"language-js\">{ hero:\n    { name: \"Luke Skywalker\",\n      height: 1.74 } }\n</code></pre>\n\n<h3 id=\"lists\">Lists</h3>\n\n<pre><code class=\"language-js\">{ friends { name } }\n</code></pre>\n\n<h4 id=\"-2\">↓</h4>\n\n<pre class=\"-setup\"><code class=\"language-js\">{ friends:\n    [ { name: \"Luke Skywalker\" },\n      { name: \"Han Solo\" },\n      { name: \"R2D2\" } ] }\n</code></pre>\n\n<p>GraphQL queries look the same for both single items or lists of items.</p>\n\n<h3 id=\"lookups\">Lookups</h3>\n\n<pre><code class=\"language-js\">{\n  hero(id: \"1000\") { id name }\n}\n</code></pre>\n\n<h4 id=\"-3\">↓</h4>\n\n<pre class=\"-setup\"><code class=\"language-js\">{ hero:\n    { id: \"1000\",\n    { name: \"Luke Skywalker\" } }\n</code></pre>\n\n<h3 id=\"aliases\">Aliases</h3>\n\n<pre><code class=\"language-js\">{\n  luke: hero(id: \"1000\") { name }\n  han: hero(id: \"1001\") { name }\n}\n</code></pre>\n\n<h4 id=\"-4\">↓</h4>\n\n<pre class=\"-setup\"><code class=\"language-js\">{ luke:\n    { name: \"Luke Skywalker\" },\n    han:\n    { name: \"Han Solo\" } }\n</code></pre>\n\n<h3 id=\"operation-names-and-variables\">Operation names and variables</h3>\n\n<h4 id=\"query\">Query</h4>\n<pre><code class=\"language-js\">query FindHero($id: String!) {\n  hero(id: $id) { name }\n}\n</code></pre>\n\n<p>Just to make things less ambiguous. Also, to use variables, you need an operation name.</p>\n\n<h4 id=\"variables\">Variables</h4>\n\n<pre><code class=\"language-js\">{ id: '1000' }\n</code></pre>\n\n<h3 id=\"mutations\">Mutations</h3>\n\n<h4 id=\"query-1\">Query</h4>\n\n<pre><code class=\"language-js\">{ createReview($review) { id } }\n</code></pre>\n\n<h4 id=\"variables-1\">Variables</h4>\n\n<pre><code class=\"language-js\">{ review: { stars: 5 } }\n</code></pre>\n\n<h4 id=\"-5\">↓</h4>\n\n<pre><code class=\"language-js\">{ createReview: { id: 5291 } }\n</code></pre>\n\n<p>Mutations are just fields that do something when queried.</p>\n\n<h3 id=\"multiple-types\">Multiple types</h3>\n\n<pre><code class=\"language-js\">{\n  search(q: \"john\") {\n    id\n    ... on User { name }\n    ... on Comment { body author { name } }\n  }\n}\n</code></pre>\n\n<p>Great for searching.</p>\n\n<h2 id=\"over-http\">Over HTTP</h2>\n\n<h4 id=\"get\">GET</h4>\n\n<pre><code class=\"language-js\">fetch('http://myapi/graphql?query={ me { name } }')\n</code></pre>\n\n<h4 id=\"post\">POST</h4>\n\n<pre><code class=\"language-js\">fetch('http://myapi/graphql', {\n  body: JSON.stringify({\n    query: '...',\n    operationName: '...',\n    variables: { ... }\n  })\n})\n</code></pre>\n\n<h2 class=\"-three-column\" id=\"schema\">Schema</h2>\n\n<h3 id=\"basic-schemas\">Basic schemas</h3>\n\n<pre><code class=\"language-js\">type Query {\n  me: User\n  users(limit: Int): [User]\n}\n\ntype User {\n  id: ID!\n  name: String\n}\n</code></pre>\n\n<p>See: <a href=\"https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\">sogko/graphql-shorthand-notation-cheat-sheet</a></p>\n\n<h3 id=\"built-in-types\">Built in types</h3>\n\n<h4 id=\"scalar-types\">Scalar types</h4>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>Int</code></td>\n      <td>Integer</td>\n    </tr>\n    <tr>\n      <td><code>Float</code></td>\n      <td>Float</td>\n    </tr>\n    <tr>\n      <td><code>String</code></td>\n      <td>String</td>\n    </tr>\n    <tr>\n      <td><code>Boolean</code></td>\n      <td>Boolean</td>\n    </tr>\n    <tr>\n      <td><code>ID</code></td>\n      <td>ID</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"type-definitions\">Type definitions</h4>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>scalar</code></td>\n      <td>Scalar type</td>\n    </tr>\n    <tr>\n      <td><code>type</code></td>\n      <td>Object type</td>\n    </tr>\n    <tr>\n      <td><code>interface</code></td>\n      <td>Interface type</td>\n    </tr>\n    <tr>\n      <td><code>union</code></td>\n      <td>Union type</td>\n    </tr>\n    <tr>\n      <td><code>enum</code></td>\n      <td>Enumerable type</td>\n    </tr>\n    <tr>\n      <td><code>input</code></td>\n      <td>Input object type</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"type-modifiers\">Type modifiers</h4>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>String</code></td>\n      <td>Nullable string</td>\n    </tr>\n    <tr>\n      <td><code>String!</code></td>\n      <td>Required string</td>\n    </tr>\n    <tr>\n      <td><code>[String]</code></td>\n      <td>List of strings</td>\n    </tr>\n    <tr>\n      <td><code>[String]!</code></td>\n      <td>Required list of strings</td>\n    </tr>\n    <tr>\n      <td><code>[String!]!</code></td>\n      <td>Required list of required strings</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"mutations-1\">Mutations</h3>\n\n<pre><code class=\"language-js\">type Mutation {\n  users(params: ListUsersInput) [User]!\n}\n</code></pre>\n\n<h3 id=\"interfaces\">Interfaces</h3>\n\n<pre><code class=\"language-js\">interface Entity {\n  id: ID!\n}\n\ntype User implements Entity {\n  id: ID!\n  name: String\n}\n</code></pre>\n\n<h3 id=\"enums\">Enums</h3>\n\n<pre data-line=\"1,2,3,4\"><code class=\"language-js\">enum DIRECTION {\n  LEFT\n  RIGHT\n}\n\ntype Root {\n  direction: DIRECTION!\n}\n</code></pre>\n\n<h3 id=\"unions\">Unions</h3>\n\n<pre data-line=\"4\"><code class=\"language-js\">type Artist { ··· }\ntype Album { ··· }\n\nunion Result = Artist | Album\n\ntype Query {\n  search(q: String) [Result]\n}\n</code></pre>\n\n<h2 id=\"references\">References</h2>\n\n<ul>\n  <li><a href=\"http://graphql.org/learn/queries/\">http://graphql.org/learn/queries/</a></li>\n  <li><a href=\"http://graphql.org/learn/serving-over-http/\">http://graphql.org/learn/serving-over-http/</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2019-07-07"
},{
  "id": "sheets/Markup/haml",
  "title": "Haml",
  "url": "/sheets/Markup/haml",
  "category": "Markup",
  "keywords": null,
  "content_html": "<h3 id=\"doctype\">Doctype</h3>\n\n<pre><code class=\"language-haml\">!!! 5\n</code></pre>\n\n<h3 id=\"tags\">Tags</h3>\n\n<pre><code class=\"language-haml\">%html\n  %head\n    %title\n  %body\n    %h1 Hello World\n    %br/\n</code></pre>\n\n<h3 id=\"classes-and-ids\">Classes and ID’s</h3>\n\n<pre><code class=\"language-haml\">%p.class-example\n.no-tag-defaults-to-div\n%div#butItCanBeIncluded\n</code></pre>\n\n<h3 id=\"inline-attributes\">Inline Attributes</h3>\n\n<p>Either hash syntax works</p>\n\n<pre><code class=\"language-haml\">%meta{ name: \"viewport\", content: \"width=device-width, initial-scale=1.0\" }\n%input{ :type =&gt; \"text\", :required =&gt; true }\n</code></pre>\n\n<h3 id=\"ruby\">Ruby</h3>\n\n<pre><code class=\"language-haml\">-# This is a comment\n-# Anything starting with a hyphen signals to Haml that Ruby is coming\n- @arr = [1, 2, 3]\n- @str = \"test\"\n-# Equal signals output\n= render partial: \"shared/header\"\n= yield\n= link_to page_url\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/CLI/homebrew",
  "title": "Homebrew",
  "url": "/sheets/CLI/homebrew",
  "category": "CLI",
  "keywords": null,
  "content_html": "<h3 id=\"commands\">Commands</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>brew install git</code></td>\n      <td>Install a package</td>\n    </tr>\n    <tr>\n      <td><code>brew uninstall git</code></td>\n      <td>Remove/Uninstall a package</td>\n    </tr>\n    <tr>\n      <td><code>brew upgrade git</code></td>\n      <td>Upgrade a package</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>brew unlink git</code></td>\n      <td>Unlink</td>\n    </tr>\n    <tr>\n      <td><code>brew link git</code></td>\n      <td>Link</td>\n    </tr>\n    <tr>\n      <td><code>brew switch git 2.5.0</code></td>\n      <td>Change versions</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>brew list --versions git</code></td>\n      <td>See what versions you have</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"more-package-commands\">More package commands</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>brew info git</code></td>\n      <td>List versions, caveats, etc</td>\n    </tr>\n    <tr>\n      <td><code>brew cleanup git</code></td>\n      <td>Remove old versions</td>\n    </tr>\n    <tr>\n      <td><code>brew edit git</code></td>\n      <td>Edit this formula</td>\n    </tr>\n    <tr>\n      <td><code>brew cat git</code></td>\n      <td>Print this formula</td>\n    </tr>\n    <tr>\n      <td><code>brew home git</code></td>\n      <td>Open homepage</td>\n    </tr>\n    <tr>\n      <td><code>brew search git</code></td>\n      <td>Search for formulas</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"global-commands\">Global commands</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>brew update</code></td>\n      <td>Update brew and cask</td>\n    </tr>\n    <tr>\n      <td><code>brew upgrade</code></td>\n      <td>Upgrade all packages</td>\n    </tr>\n    <tr>\n      <td><code>brew list</code></td>\n      <td>List installed</td>\n    </tr>\n    <tr>\n      <td><code>brew outdated</code></td>\n      <td>What’s due for upgrades?</td>\n    </tr>\n    <tr>\n      <td><code>brew doctor</code></td>\n      <td>Diagnose brew issues</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"brew-cask-commands\">Brew Cask commands</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>brew cask install firefox</code></td>\n      <td>Install the Firefox browser</td>\n    </tr>\n    <tr>\n      <td><code>brew cask list</code></td>\n      <td>List installed applications</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Cask commands are used for interacting with graphical applications.</p>\n\n<h2 class=\"-one-column\" id=\"also-see\">Also see</h2>\n\n<ul class=\"-also-see\">\n  <li><a href=\"https://brew.sh/\">Homebrew homepage</a> <em>brew.sh</em></li>\n  <li><a href=\"https://docs.brew.sh\">Homebrew docs</a> <em>docs.brew.sh</em></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Html/html-email",
  "title": "HTML emails",
  "url": "/sheets/Html/html-email",
  "category": "HTML",
  "keywords": null,
  "content_html": "<h3 id=\"properties-to-avoid\">Properties to avoid</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Property</th>\n      <th>Where</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>position</code></td>\n      <td>(Outlook, Gmail, Yahoo)</td>\n    </tr>\n    <tr>\n      <td><code>display</code></td>\n      <td>(Outlook, Gmail)</td>\n    </tr>\n    <tr>\n      <td><code>float</code></td>\n      <td>(Outlook)</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>height</code></td>\n      <td>(Outlook)</td>\n    </tr>\n    <tr>\n      <td><code>width</code> <em>in p/div</em></td>\n      <td>(Outlook)</td>\n    </tr>\n    <tr>\n      <td><code>padding</code> <em>in p/div</em></td>\n      <td>(Outlook)</td>\n    </tr>\n    <tr>\n      <td><code>background</code></td>\n      <td>(Outlook, Gmail)</td>\n    </tr>\n    <tr>\n      <td><code>min-width</code></td>\n      <td>(Outlook)</td>\n    </tr>\n    <tr>\n      <td><code>max-width</code></td>\n      <td>(Outlook)</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>opacity</code></td>\n      <td>(Outlook, Gmail, Yahoo)</td>\n    </tr>\n    <tr>\n      <td><code>box-shadow</code></td>\n      <td>(Outlook, Gmail, Yahoo)</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>rgba()</code></td>\n      <td>(Outlook)</td>\n    </tr>\n    <tr>\n      <td><code>data-uri</code></td>\n      <td>(all webmail)</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"selectors-to-avoid\">Selectors to avoid</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>E[attr]</code></td>\n      <td>(Outlook, Gmail)</td>\n    </tr>\n    <tr>\n      <td><code>E:nth-child(n)</code></td>\n      <td>(Outlook, Gmail)</td>\n    </tr>\n    <tr>\n      <td><code>::before</code> <em>and</em> <code>::after</code></td>\n      <td>(Outlook, Yahoo, Gmail)</td>\n    </tr>\n    <tr>\n      <td><code>E F</code></td>\n      <td>(Gmail)</td>\n    </tr>\n    <tr>\n      <td><code>E + F</code>, <code>E &gt; F</code> <em>etc</em></td>\n      <td>(Outlook, Gmail)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Inline your CSS as much as possible.</p>\n\n<h3 id=\"basic-layout\">Basic layout</h3>\n\n<pre><code class=\"language-html\">&lt;table cellpadding=\"0\" cellspacing=\"0\"&gt;\n  &lt;tr&gt;\n    &lt;td width=\"auto\"&gt;&lt;/td&gt;\n    &lt;td width=\"600\" background=\"#ffffff\"&gt;\n      ···\n    &lt;/td&gt;\n    &lt;td width=\"auto\"&gt;&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<h3 id=\"responsive\">Responsive</h3>\n\n<pre><code class=\"language-html\">&lt;style&gt;\n@media only screen and (max-device-width: 480px)\n&lt;/style&gt;\n</code></pre>\n\n<p><code>&lt;style&gt;</code> is supported in the head and body by everything except Gmail. Only use them for responsive styles.</p>\n\n<h2 class=\"-one-column\" id=\"references\">References</h2>\n\n<ul>\n  <li><a href=\"https://www.campaignmonitor.com/css/\">CSS support matrix</a> <em>campaignmonitor.com</em></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2017-08-30"
},{
  "id": "sheets/Html/html-input",
  "title": "Input tag",
  "url": "/sheets/Html/html-input",
  "category": "HTML",
  "keywords": null,
  "content_html": "<h3 id=\"input\">Input</h3>\n\n<pre><code class=\"language-html\"> &lt;input ...\n   disabled\n   required\n   checked\n</code></pre>\n\n<pre><code class=\"language-html\">   autofocus\n</code></pre>\n\n<pre><code class=\"language-html\">   autocomplete='off'        &lt;!-- autocomplete --&gt;\n   autocompletetype='cc-exp'\n   autocapitalize='off'      &lt;!-- for mobiles --&gt;\n   pattern='\\d*'             &lt;!-- force numeric input in iOS --&gt;\n</code></pre>\n\n<h3 id=\"input-types\">Input types</h3>\n\n<h4 id=\"text\">Text</h4>\n\n<ul class=\"-four-column\">\n  <li>email</li>\n  <li>hidden</li>\n  <li><strong>password</strong></li>\n  <li>tel</li>\n  <li><strong>text</strong></li>\n  <li>search</li>\n</ul>\n\n<h4 id=\"time\">Time</h4>\n\n<ul class=\"-four-column\">\n  <li>date</li>\n  <li>time</li>\n</ul>\n\n<h4 id=\"time-not-widely-supported\">Time (not widely supported)</h4>\n\n<ul class=\"-four-column\">\n  <li>month</li>\n  <li>week</li>\n  <li>datetime</li>\n  <li>datetime-local</li>\n</ul>\n\n<h4 id=\"etc\">Etc</h4>\n\n<ul class=\"-four-column\">\n  <li><strong>file</strong></li>\n  <li><strong>radio</strong></li>\n  <li><strong>checkbox</strong></li>\n</ul>\n\n<h4 id=\"buttons\">Buttons</h4>\n\n<ul class=\"-four-column\">\n  <li>button</li>\n  <li>reset</li>\n  <li>submit</li>\n  <li>image</li>\n</ul>\n\n<h4 id=\"numeric\">Numeric</h4>\n\n<ul class=\"-four-column\">\n  <li>number</li>\n  <li>range</li>\n</ul>\n\n<h2 id=\"examples\">Examples</h2>\n\n<h3 id=\"dates\">Dates</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Type</th>\n      <th>Example</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>type='date'</code></td>\n      <td><input type=\"date\" /></td>\n    </tr>\n    <tr>\n      <td><code>type='time'</code></td>\n      <td><input type=\"time\" /></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"datetime\">Datetime</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Type</th>\n      <th>Example</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>type='datetime'</code></td>\n      <td><input type=\"datetime\" /></td>\n    </tr>\n    <tr>\n      <td><code>type='datetime-local'</code></td>\n      <td><input type=\"datetime-local\" /></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><code>datetime</code> and <code>datetime-local</code> fields are not widely supported.</p>\n\n<h3 id=\"numbers\">Numbers</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Type</th>\n      <th>Example</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>type='number'</code></td>\n      <td><input type=\"number\" /></td>\n    </tr>\n    <tr>\n      <td><code>type='range'</code></td>\n      <td><input type=\"range\" /></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"text-1\">Text</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Type</th>\n      <th>Example</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>type='text'</code></td>\n      <td><input type=\"text\" /></td>\n    </tr>\n    <tr>\n      <td><code>type='password'</code></td>\n      <td><input type=\"password\" /></td>\n    </tr>\n    <tr>\n      <td><code>type='search'</code></td>\n      <td><input type=\"search\" /></td>\n    </tr>\n    <tr>\n      <td><code>type='tel'</code></td>\n      <td><input type=\"tel\" /></td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2017-10-30"
},{
  "id": "sheets/Html/html-meta",
  "title": "HTML meta tags",
  "url": "/sheets/Html/html-meta",
  "category": "HTML",
  "keywords": null,
  "content_html": "<h3 id=\"meta-tags\">Meta tags</h3>\n\n<pre><code class=\"language-html\">&lt;meta charset='utf-8'&gt;\n</code></pre>\n\n<pre data-line=\"2\"><code class=\"language-html\">&lt;!-- title --&gt;\n&lt;title&gt;···&lt;/title&gt;\n&lt;meta property='og:title'  content='···'&gt;\n&lt;meta name='twitter:title' content='···'&gt;\n</code></pre>\n\n<pre data-line=\"2\"><code class=\"language-html\">&lt;!-- url --&gt;\n&lt;link rel='canonical'       href='http://···'&gt;\n&lt;meta property='og:url'  content='http://···'&gt;\n&lt;meta name='twitter:url' content='http://···'&gt;\n</code></pre>\n\n<pre data-line=\"2\"><code class=\"language-html\">&lt;!-- description --&gt;\n&lt;meta name='description'         content='···'&gt;\n&lt;meta property='og:description'  content='···'&gt;\n&lt;meta name='twitter:description' content='···'&gt;\n</code></pre>\n\n<pre><code class=\"language-html\">&lt;!-- image --&gt;\n&lt;meta property=\"og:image\"  content=\"http://···\"&gt;\n&lt;meta name=\"twitter:image\" content=\"http://···\"&gt;\n</code></pre>\n\n<pre><code class=\"language-html\">&lt;!-- ua --&gt;\n&lt;meta http-equiv='X-UA-Compatible' content='IE=edge,chrome=1'&gt;\n</code></pre>\n\n<pre><code class=\"language-html\">&lt;!-- viewport --&gt;\n&lt;meta name='viewport' content='width=device-width'&gt;\n&lt;meta name='viewport' content='width=1024'&gt;\n</code></pre>\n\n<h3 id=\"more-opengraph\">More opengraph</h3>\n\n<pre><code class=\"language-html\">&lt;meta property='og:site_name' content='···'&gt;\n&lt;meta property='og:type' content='website'&gt;\n</code></pre>\n\n<pre><code class=\"language-html\">&lt;meta property='fb:app_id' content='···'&gt;\n&lt;meta property='fb:admins' content='UID1,UID2'&gt;\n&lt;!-- ···unless there's app_id --&gt;\n</code></pre>\n\n<pre><code class=\"language-html\">&lt;meta property='og:audio' content='http://···/theme.mp3'&gt;\n&lt;meta property='og:video' content='http://···/trailer.swf'&gt;\n</code></pre>\n\n<p>See: <a href=\"https://developers.facebook.com/docs/opengraphprotocol/\">OpenGraph protocol</a> <em>(developers.facebook.com)</em></p>\n\n<h3 id=\"opengraph-for-articles\">Opengraph for articles</h3>\n\n<ul>\n  <li><code>article:published_time</code></li>\n  <li><code>article:modified_time</code></li>\n  <li><code>article:expiration_time</code></li>\n  <li><code>article:author</code></li>\n  <li><code>article:section</code></li>\n  <li><code>article:tag</code></li>\n</ul>\n\n<h3 id=\"apple-only\">Apple-only</h3>\n\n<pre><code class=\"language-html\">&lt;meta name='format-detection' content='telephone=no'&gt;\n</code></pre>\n\n<h2 id=\"progressive-web-apps\">Progressive web apps</h2>\n\n<h3 id=\"add-to-homescreen\">Add to homescreen</h3>\n\n<pre><code class=\"language-html\">&lt;meta name='mobile-web-app-capable' content='yes'&gt;\n&lt;meta name='apple-mobile-web-app-capable' content='yes'&gt;\n</code></pre>\n\n<pre><code class=\"language-html\">&lt;meta name='apple-mobile-web-app-status-bar-style' content='black'&gt;\n&lt;!-- black | black-translucent | default --&gt;\n</code></pre>\n\n<h3 id=\"theme-color\">Theme color</h3>\n\n<pre><code class=\"language-html\">&lt;meta name='theme-color' content='#ff00ff'&gt;\n</code></pre>\n\n<p>Android-only.\nSee: <a href=\"https://developers.google.com/web/updates/2014/11/Support-for-theme-color-in-Chrome-39-for-Android\">Theme color</a></p>\n\n<h3 id=\"manifest\">Manifest</h3>\n\n<pre><code class=\"language-html\">&lt;link rel='manifest' href='/manifest.json'&gt;\n</code></pre>\n\n<p>Android-only.\nSee: <a href=\"https://developers.google.com/web/fundamentals/engage-and-retain/web-app-manifest/\">Manifest</a></p>\n\n<h3 id=\"icons\">Icons</h3>\n\n<pre><code class=\"language-html\">&lt;!-- Minimal --&gt;\n&lt;link rel='icon' type='image/png' href='favicon@32.png'&gt;\n&lt;link rel='icon' sizes='192x192' href='icon@192.png'&gt;\n&lt;link rel='apple-touch-icon' href='icon@152.png'&gt;\n&lt;meta name='msapplication-square310x310logo' content='icon@310.png'&gt;\n</code></pre>\n\n<pre><code class=\"language-html\">&lt;!-- Apple --&gt;\n&lt;link rel='apple-touch-icon' href='touch-icon-iphone.png'&gt;\n&lt;link rel='apple-touch-icon' sizes='76x76' href='touch-icon-ipad.png'&gt;\n&lt;link rel='apple-touch-icon' sizes='120x120' href='touch-icon-iphone-retina.png'&gt;\n&lt;link rel='apple-touch-icon' sizes='152x152' href='touch-icon-ipad-retina.png'&gt;\n</code></pre>\n\n<pre><code class=\"language-html\">&lt;!-- Microsoft --&gt;\n&lt;meta name='msapplication-square70x70logo' content='icon_smalltile.png'&gt;\n&lt;meta name='msapplication-square150x150logo' content='icon_mediumtile.png'&gt;\n&lt;meta name='msapplication-wide310x150logo' content='icon_widetile.png'&gt;\n</code></pre>\n\n<p>Chrome on Android recommends <a href=\"https://developers.google.com/web/updates/2014/11/Support-for-theme-color-in-Chrome-39-for-Android\">192x192</a>.\nSee: <a href=\"https://developers.google.com/web/fundamentals/design-and-ui/browser-customization/\">Icons</a></p>\n\n<h2 class=\"-one-column\" id=\"reference\">Reference</h2>\n\n<ul class=\"-also-see\">\n  <li><a href=\"https://dev.twitter.com/cards\">https://dev.twitter.com/cards</a></li>\n  <li><a href=\"https://developers.facebook.com/docs/opengraphprotocol/#types\">https://developers.facebook.com/docs/opengraphprotocol/#types</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-03-20"
},{
  "id": "sheets/Html/html-microformats",
  "title": "Microformats",
  "url": "/sheets/Html/html-microformats",
  "category": "HTML",
  "keywords": null,
  "content_html": "<h3 id=\"author\">Author</h3>\n\n<pre><code class=\"language-html\">&lt;span class=\"entry-author\" itemprop=\"author\" itemscope=\"itemscope\" itemtype=\"http://schema.org/Person\"&gt;\n  &lt;a href=\"http://AUTHORPAGE\" class=\"entry-author-link\" itemprop=\"url\" rel=\"author\"&gt;\n    &lt;span class=\"entry-author-name\" itemprop=\"name\"&gt;AUTHORNAME&lt;/span&gt;\n  &lt;/a&gt;\n&lt;/span&gt;\n</code></pre>\n\n<h3 id=\"time\">Time</h3>\n\n<pre><code class=\"language-html\">&lt;time class=\"entry-time\" itemprop=\"datePublished\" datetime=\"2009-02-09T20:04:00+00:00\"&gt;February 9, 2009&lt;/time&gt;\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Html/html-share",
  "title": "Share links",
  "url": "/sheets/Html/html-share",
  "category": "HTML",
  "keywords": null,
  "content_html": "<h2 class=\"-one-column\" id=\"share-links\">Share links</h2>\n\n<p class=\"-setup\">Facebook:</p>\n\n<pre><code class=\"language-html\">&lt;a href='https://www.facebook.com/sharer/sharer.php?u=URL' target='share'&gt;\n</code></pre>\n\n<p class=\"-setup\">Twitter:</p>\n\n<pre><code class=\"language-html\">&lt;a href='https://twitter.com/intent/tweet?text=DESCRIPTION+URL' target='share'&gt;\n</code></pre>\n\n<p class=\"-setup\">Google Plus:</p>\n\n<pre><code class=\"language-html\">&lt;a href='https://plus.google.com/share?url=URL' target='share'&gt;\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2017-09-04"
},{
  "id": "sheets/Html/html",
  "title": "HTML",
  "url": "/sheets/Html/html",
  "category": "HTML",
  "keywords": null,
  "content_html": "<h3 id=\"head-stuff\">Head stuff</h3>\n\n<pre><code>&lt;link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico\"&gt;\n&lt;link rel=\"shortcut icon\" type=\"image/png\" href=\"/favicon.png\"&gt;\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"&gt;\n</code></pre>\n\n<h3 id=\"iphone-viewport\">iPhone viewport</h3>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"initial-scale=1.0, maximum-scale=1.0\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width\"&gt;\n&lt;meta name=\"viewport\" content=\"width=320, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\"/&gt; &lt;!-- full example --&gt;\n</code></pre>\n\n<h3 id=\"default-opengraph-meta-tags\">Default OpenGraph meta tags</h3>\n\n<pre><code>&lt;meta content=\"...\" name=\"description\"&gt;\n&lt;meta content=\"...\" property=\"og:description\"&gt;\n&lt;meta content=\"http://.../preview.jpg\" property=\"og:image\"&gt;\n&lt;meta content=\"Hello There\" property=\"og:title\"&gt;\n&lt;meta content=\"Hello There\" property=\"og:site_name\"&gt;\n&lt;meta content=\"hellothere\" property=\"fb:admins\"&gt;\n&lt;meta content=\"website\" property=\"og:type\"&gt;\n</code></pre>\n\n<h3 id=\"webfonts\">Webfonts</h3>\n\n<pre><code>&lt;script&gt;WebFontConfig={    },function(a,b){var c=a.createElement(b);c.src=\"//ajax.googleapis.com/ajax/libs/webfont/1/webfont.js\",c.async=1;var d=a.getElementsByTagName(b)[0];d.parentNode.insertBefore(c,d)}(document,\"script\")&lt;/script&gt;\n\n// {typekit{id:\"...\"}}\n// {google:{families:['Exo:400']}}\n</code></pre>\n\n<h3 id=\"google-analytics\">Google Analytics</h3>\n\n<pre><code>&lt;script&gt;location.hostname.match(/helloworld\\.com/)&amp;&amp;(_gaq=[[\"_setAccount\",\"UA-XXXXX-1\"],[\"_trackPageview\"]],function(a,b){var c=a.createElement(b),d=a.getElementsByTagName(b)[0];c.async=1,c.src=(\"https:\"==location.protocol?\"//ssl\":\"//www\")+\".google-analytics.com/ga.js\",d.parentNode.insertBefore(c,d)}(document,\"script\"))&lt;/script&gt;\n</code></pre>\n\n<h3 id=\"fbtwitter\">FB/Twitter</h3>\n\n<pre><code>&lt;div id=\"fb-root\"&gt;&lt;/div&gt;&lt;script&gt;fbAsyncInit=function(){FB.init({\"appId\":\"___APPIDGOESHERE___\",\"status\":true,\"cookie\":true,\"xfbml\":true})};!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.async=1;js.src='//connect.facebook.net/en_US/all.js';fjs.parentNode.insertBefore(js,fjs);}}(document,'script','facebook-jssdk');&lt;/script&gt;\n\n&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.async=1;js.src=\"//platform.twitter.com/widgets.js\";fjs.parentNode.insertBefore(js,fjs);}}(document,\"script\",\"twitter-wjs\");&lt;/script&gt;\n</code></pre>\n\n<h3 id=\"html5-shiv-for-ie8\">HTML5 Shiv for IE8</h3>\n\n<pre><code>&lt;!--[if lte IE 8]&gt;&lt;script src='//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.6.1/html5shiv.js'&gt;&lt;/script&gt;&lt;![endif]--&gt;\n</code></pre>\n\n<h3 id=\"h5bp-html-tag-ie8-and-ie9-only\">H5BP HTML tag (IE8 and IE9 only)</h3>\n\n<pre><code>&lt;!--[if lte IE 8]&gt;&lt;html class=\"ie8\"&gt;&lt;![endif]--&gt;&lt;!--[if IE 9]&gt;&lt;html class=\"ie9\"&gt;&lt;![endif]--&gt;&lt;!--[if gt IE 9]&gt;&lt;!--&gt;\n&lt;html&gt;&lt;!--&lt;![endif]--&gt;\n</code></pre>\n\n<h3 id=\"touch-icons\">Touch icons</h3>\n\n<ul>\n  <li>apple-touch-icon-precomposed.png</li>\n  <li>apple-touch-icon-57x57-precomposed.png</li>\n  <li>apple-touch-icon-72x72-precomposed.png</li>\n  <li>apple-touch-icon-114x114-precomposed.png</li>\n  <li>apple-touch-icon-144x144-precomposed.png</li>\n</ul>\n\n<h3 id=\"icons\">Icons</h3>\n\n<pre><code>&lt;link rel=\"shortcut icon\" type=\"image/png\" href=\"favicon.png\"&gt;\n&lt;link href=\"apple-touch-icon-precomposed.png\" rel=\"apple-touch-icon\"&gt;\n&lt;link href=\"apple-touch-icon-57x57-precomposed.png\" size=\"57x57\" rel=\"apple-touch-icon\"&gt;\n&lt;link href=\"apple-touch-icon-72x72-precomposed.png\" size=\"72x72\" rel=\"apple-touch-icon\"&gt;\n&lt;link href=\"apple-touch-icon-114x114-precomposed.png\" size=\"114x114\" rel=\"apple-touch-icon\"&gt;\n&lt;link href=\"apple-touch-icon-144x144-precomposed.png\" size=\"144x144\" rel=\"apple-touch-icon\"&gt;\n</code></pre>\n\n<p>Only do this if you’re not placing the site in the root!</p>\n\n<h3 id=\"h5bp-html-tag\">H5BP HTML tag</h3>\n\n<pre><code>&lt;!--[if lt IE 7 ]&gt; &lt;html class=\"ie6\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 7 ]&gt;    &lt;html class=\"ie7\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 8 ]&gt;    &lt;html class=\"ie8\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 9 ]&gt;    &lt;html class=\"ie9\"&gt; &lt;![endif]--&gt;\n&lt;!--[if (gt IE 9)|!(IE)]&gt;&lt;!--&gt; &lt;html class=\"\"&gt; &lt;!--&lt;![endif]--&gt;\n</code></pre>\n\n<h3 id=\"google-jquery\">Google jQuery</h3>\n\n<pre><code>&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<h3 id=\"unsupported-message\">Unsupported message</h3>\n\n<pre><code>&lt;!--[if lt IE 8]&gt;\n&lt;div class=\"unsupported-browser\"&gt;\n  &lt;strong&gt;\n    You are using an outdated browser.\n  &lt;/strong&gt;\n  &lt;span&gt;\n    Please &lt;a class=\"upgrade-browser\"\n    href=\"http://browsehappy.com/\"&gt;\n    upgrade your browser&lt;/a&gt; or &lt;a  class=\"chrome-frame\"\n    href=\"http://www.google.com/chromeframe/?redirect=true\"&gt;activate Google \n    Chrome Frame&lt;/a&gt; to improve your experience.\n  &lt;/span&gt;\n&lt;/div&gt;\n&lt;![endif]--&gt;\n</code></pre>\n\n<h3 id=\"html-compatibility-inspector\">HTML Compatibility inspector</h3>\n\n<pre><code>&lt;script src=\"http://ie.microsoft.com/testdrive/HTML5/CompatInspector/inspector.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>More info here: <a href=\"http://ie.microsoft.com/testdrive/HTML5/CompatInspector/\">microsoft.com</a></p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/API/http-status",
  "title": "HTTP Status",
  "url": "/sheets/API/http-status",
  "category": "API",
  "keywords": null,
  "content_html": "<h3 id=\"informational-responses\">Informational Responses</h3>\n\n<table class=\"xp\">\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Name</th>\n      <th>?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>100</code></td>\n      <td>Continue</td>\n      <td><a href=\"https://httpstatuses.com/100\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>101</code></td>\n      <td>Switching Protocols</td>\n      <td><a href=\"https://httpstatuses.com/101\">?</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"success-responses\">Success Responses</h3>\n\n<table class=\"xp\">\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Name</th>\n      <th>?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>200</code></td>\n      <td>OK</td>\n      <td><a href=\"https://httpstatuses.com/200\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>201</code></td>\n      <td>Created</td>\n      <td><a href=\"https://httpstatuses.com/201\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>202</code></td>\n      <td>Accepted</td>\n      <td><a href=\"https://httpstatuses.com/202\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>203</code></td>\n      <td>Non-Authoritive Information</td>\n      <td><a href=\"https://httpstatuses.com/203\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>204</code></td>\n      <td>No Content</td>\n      <td><a href=\"https://httpstatuses.com/204\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>205</code></td>\n      <td>Reset Content</td>\n      <td><a href=\"https://httpstatuses.com/205\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>206</code></td>\n      <td>Partial Content</td>\n      <td><a href=\"https://httpstatuses.com/206\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>226</code></td>\n      <td>IM Used</td>\n      <td><a href=\"https://httpstatuses.com/226\">?</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"redirection-responses\">Redirection Responses</h3>\n\n<table class=\"xp\">\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Name</th>\n      <th>?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>300</code></td>\n      <td>Multiple Choices</td>\n      <td><a href=\"https://httpstatuses.com/300\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>301</code></td>\n      <td>Moved Permanently</td>\n      <td><a href=\"https://httpstatuses.com/301\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>302</code></td>\n      <td>Found</td>\n      <td><a href=\"https://httpstatuses.com/302\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>303</code></td>\n      <td>See Other</td>\n      <td><a href=\"https://httpstatuses.com/303\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>304</code></td>\n      <td>Not Modified</td>\n      <td><a href=\"https://httpstatuses.com/304\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>305</code></td>\n      <td>Use Proxy</td>\n      <td><a href=\"https://httpstatuses.com/305\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>306</code></td>\n      <td><em>Switch Proxy</em></td>\n      <td><a href=\"https://httpstatusdogs.com/306-switch-proxy\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>307</code></td>\n      <td>Temporary Redirect</td>\n      <td><a href=\"https://httpstatuses.com/307\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>308</code></td>\n      <td>Permanent Redirect</td>\n      <td><a href=\"https://httpstatuses.com/308\">?</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"client-error-responses\">Client Error Responses</h3>\n\n<table class=\"xp\">\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Name</th>\n      <th>?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>400</code></td>\n      <td>Bad Request</td>\n      <td><a href=\"https://httpstatuses.com/400\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>401</code></td>\n      <td>Unauthorized</td>\n      <td><a href=\"https://httpstatuses.com/401\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>402</code></td>\n      <td>Payment Required</td>\n      <td><a href=\"https://httpstatuses.com/402\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>403</code></td>\n      <td>Forbidden</td>\n      <td><a href=\"https://httpstatuses.com/403\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>404</code></td>\n      <td>Not Found</td>\n      <td><a href=\"https://httpstatuses.com/404\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>405</code></td>\n      <td>Method Not Allowed</td>\n      <td><a href=\"https://httpstatuses.com/405\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>406</code></td>\n      <td>Not Acceptable</td>\n      <td><a href=\"https://httpstatuses.com/406\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>407</code></td>\n      <td>Proxy Authentication Required</td>\n      <td><a href=\"https://httpstatuses.com/407\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>408</code></td>\n      <td>Request Timeout</td>\n      <td><a href=\"https://httpstatuses.com/408\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>409</code></td>\n      <td>Conflict</td>\n      <td><a href=\"https://httpstatuses.com/409\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>410</code></td>\n      <td>Gone</td>\n      <td><a href=\"https://httpstatuses.com/410\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>411</code></td>\n      <td>Length Required</td>\n      <td><a href=\"https://httpstatuses.com/411\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>412</code></td>\n      <td>Precondition Failed</td>\n      <td><a href=\"https://httpstatuses.com/412\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>413</code></td>\n      <td>Payload Too Large</td>\n      <td><a href=\"https://httpstatuses.com/413\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>414</code></td>\n      <td>URI Too Long</td>\n      <td><a href=\"https://httpstatuses.com/414\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>415</code></td>\n      <td>Unsupported Media Type</td>\n      <td><a href=\"https://httpstatuses.com/415\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>416</code></td>\n      <td>Range Not Satisfiable</td>\n      <td><a href=\"https://httpstatuses.com/416\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>417</code></td>\n      <td>Expectation Failed</td>\n      <td><a href=\"https://httpstatuses.com/417\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>418</code></td>\n      <td>I’m a teapot</td>\n      <td><a href=\"https://httpstatuses.com/418\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>421</code></td>\n      <td>Misdirected Request</td>\n      <td><a href=\"https://httpstatuses.com/421\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>426</code></td>\n      <td>Upgrade Required</td>\n      <td><a href=\"https://httpstatuses.com/426\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>428</code></td>\n      <td>Precondition Required</td>\n      <td><a href=\"https://httpstatuses.com/428\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>429</code></td>\n      <td>Too Many Requests</td>\n      <td><a href=\"https://httpstatuses.com/429\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>431</code></td>\n      <td>Request Header Fields Too Large</td>\n      <td><a href=\"https://httpstatuses.com/431\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>451</code></td>\n      <td>Unavailable For Legal Reasons</td>\n      <td><a href=\"https://httpstatuses.com/451\">?</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"server-error-responses\">Server Error Responses</h3>\n\n<table class=\"xp\">\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Name</th>\n      <th>?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>500</code></td>\n      <td>Internal Server Error</td>\n      <td><a href=\"https://httpstatuses.com/500\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>501</code></td>\n      <td>Not Implemented</td>\n      <td><a href=\"https://httpstatuses.com/501\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>502</code></td>\n      <td>Bad Gateway</td>\n      <td><a href=\"https://httpstatuses.com/502\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>503</code></td>\n      <td>Service Unavailable</td>\n      <td><a href=\"https://httpstatuses.com/503\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>504</code></td>\n      <td>Gateway Timeout</td>\n      <td><a href=\"https://httpstatuses.com/504\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>505</code></td>\n      <td>HTTP Version Not Supported</td>\n      <td><a href=\"https://httpstatuses.com/505\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>506</code></td>\n      <td>Variant Also Negotiates</td>\n      <td><a href=\"https://httpstatuses.com/506\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>510</code></td>\n      <td>Not Extended</td>\n      <td><a href=\"https://httpstatuses.com/510\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>511</code></td>\n      <td>Network Authentication Required</td>\n      <td><a href=\"https://httpstatuses.com/511\">?</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"webdav-status-codes\">WebDAV Status Codes</h2>\n\n<p>WebDAV is an extension of HTTP that allows clients to perform remote Web content authoring operations. It provides a framework for users to create, change and move documents on a server. It adds the following status codes on top of HTTP.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/WebDAV\">Read more.</a></p>\n\n<table class=\"xp\">\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Name</th>\n      <th>?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>102</code></td>\n      <td>Processing</td>\n      <td><a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#102\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>207</code></td>\n      <td>Multi-Status</td>\n      <td><a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#207\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>208</code></td>\n      <td>Already Reported</td>\n      <td><a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#208\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>422</code></td>\n      <td>Unprocessable Entity</td>\n      <td><a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#422\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>423</code></td>\n      <td>Locked</td>\n      <td><a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#423\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>424</code></td>\n      <td>Failed Dependency</td>\n      <td><a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#424\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>507</code></td>\n      <td>Insufficient Storage</td>\n      <td><a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#507\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>508</code></td>\n      <td>Loop Detected</td>\n      <td><a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#508\">?</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\">https://en.wikipedia.org/wiki/List_of_HTTP_status_codes</a></li>\n  <li><a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</a></li>\n  <li><a href=\"https://httpstatuses.com/\">https://httpstatuses.com/</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "<p>List of HTTP Status codes and links to description.</p>",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Html/ie",
  "title": "Internet Explorer",
  "url": "/sheets/Html/ie",
  "category": "HTML",
  "keywords": null,
  "content_html": "<h2 class=\"-one-column\" id=\"support-table\">Support table</h2>\n\n<h3 id=\"css-selectors\">CSS Selectors</h3>\n\n<table class=\"-headers -no-wrap\">\n  <thead>\n    <tr>\n      <th>Feature</th>\n      <th>IE6</th>\n      <th>IE7</th>\n      <th>IE8</th>\n      <th>IE9</th>\n      <th>IE10</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>&gt;</code> <em>(descendant)</em></td>\n      <td> </td>\n      <td>7 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>[attr]</code> <em>(attribute)</em></td>\n      <td> </td>\n      <td>7 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>.class1.class2</code> <em>(multiple classes)</em></td>\n      <td> </td>\n      <td>7 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>~</code> <em>(sibling)</em></td>\n      <td> </td>\n      <td>7 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>+</code> <em>(adjacent)</em></td>\n      <td> </td>\n      <td>7 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>:first-child</code> <sup>*</sup></td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>:focus</code></td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>:before</code> <code>:after</code> <em>(single colon only)</em></td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>:lang</code></td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>:first-of-type</code>, <code>:last-of-type</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>:last-child</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>:empty</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>:enabled</code> <code>:disabled</code> <code>:checked</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>:not()</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>:nth-child()</code> <code>:nth-last-child()</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>:nth-of-type()</code> <code>:nth-last-of-type()</code> <code>:only-of-type()</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>:only-child()</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>:target</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>::selection</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>:root</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><code>first-child:</code> doesn’t work for elements inserted via JS.</p>\n\n<h3 id=\"css-properties\">CSS properties</h3>\n\n<table class=\"-headers -no-wrap\">\n  <thead>\n    <tr>\n      <th>Feature</th>\n      <th>IE6</th>\n      <th>IE7</th>\n      <th>IE8</th>\n      <th>IE9</th>\n      <th>IE10</th>\n      <th>IE11</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>max-width</code></td>\n      <td> </td>\n      <td>7 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>position: fixed</code></td>\n      <td> </td>\n      <td>7 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>outline</code></td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>display: inline-block</code> <sup>*</sup></td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>display: table</code></td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>border-collapse</code>, <code>border-spacing</code>, <code>table-layout</code>, …</td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>whitespace: pre-wrap</code></td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>whitespace: pre-line</code></td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>box-sizing</code></td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>background-clip</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>background-origin</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>background-size</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>background: x, y, z</code> <em>(multiple backgrounds)</em></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>opacity</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>border-radius</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>box-shadow</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>rgba()</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>transform</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>animation</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>10 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>transition</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>10 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>linear-gradient()</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>10 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td><code>text-shadow</code> — <a href=\"https://github.com/heygrady/textshadow\">polyfill</a></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>10 ✓</td>\n      <td>✓</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>border-image</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>11 ✓</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><code>inline-block:</code> IE6/7 can only support inline-block for elements that are naturally inline, like span</p>\n\n<h3 id=\"features\">Features</h3>\n\n<table class=\"-headers -no-wrap\">\n  <thead>\n    <tr>\n      <th>Feature</th>\n      <th>IE6</th>\n      <th>IE7</th>\n      <th>IE8</th>\n      <th>IE9</th>\n      <th>IE10</th>\n      <th>IE11</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>PNG alpha transparency</td>\n      <td> </td>\n      <td>7 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td>data URI <a href=\"https://caniuse.com/#feat=datauri\">⊙</a></td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>JS: JSON parsing <a href=\"https://caniuse.com/#feat=json\">⊙</a></td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>JS: Cross-origin resource sharing <a href=\"https://caniuse.com/#feat=cors\">⊙</a></td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>JS: Local storage <a href=\"https://caniuse.com/#feat=localstorage\">⊙</a></td>\n      <td> </td>\n      <td> </td>\n      <td>8 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td>CSS: <code>@media</code> queries — <a href=\"https://github.com/scottjehl/Respond\">polyfill</a></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>HTML: new HTML5 elements - <a href=\"https://code.google.com/p/html5shiv/\">polyfill</a></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>HTML: <code>&lt;canvas&gt;</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>HTML: <code>&lt;svg&gt;</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>HTML: <code>&lt;img src='image.svg'&gt;</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>9 ✓</td>\n      <td>✓</td>\n      <td>✓</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td>CSS: flexbox <a href=\"https://caniuse.com/#feat=flexbox\">⊙</a> <sup>*</sup></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>10 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>HTML: <code>&lt;input placeholder='..'&gt;</code> <a href=\"https://caniuse.com/#feat=input-placeholder\">⊙</a></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>10 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>HTML: <code>&lt;input type='range'&gt;</code></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>10 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>HTML: <code>&lt;input required&gt;</code> <a href=\"https://caniuse.com/#search=validation\">⊙</a></td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>10 ✓</td>\n      <td>✓</td>\n    </tr>\n    <tr>\n      <td>JS: Web sockets</td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>10 ✓</td>\n      <td>✓</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td>JS: Fullscreen mode</td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td> </td>\n      <td>11 ✓</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><code>flexbox:</code> IE10 only supports the 2012 syntax with -ms- prefix.</p>\n\n<h2 id=\"polyfills\">Polyfills</h2>\n\n<h3 id=\"ie-polyfills\">IE polyfills</h3>\n\n<p>Always install these in almost every project:</p>\n\n<ul>\n  <li><a href=\"https://github.com/douglascrockford/JSON-js\">json2</a> for JSON parsing (for IE7 below)</li>\n  <li><a href=\"http://selectivizr.com/\">selectivizr</a> for selectors (for IE8 below)</li>\n  <li><a href=\"https://code.google.com/p/html5shiv/\">html5shiv</a> for new HTML tags (for IE8 below)</li>\n  <li><a href=\"https://github.com/scottjehl/Respond\">respond</a> for media queries (for IE8 below)</li>\n  <li>See <a href=\"http://ricostacruz.com/til/ie-polyfills.html\">this article</a> for info</li>\n</ul>\n\n<pre><code class=\"language-html\">&lt;!--[if lt IE 9]&gt;\n&lt;script src='https://cdnjs.cloudflare.com/ajax/libs/nwmatcher/1.2.5/nwmatcher.min.js'&gt;&lt;/script&gt;\n&lt;script src='https://cdnjs.cloudflare.com/ajax/libs/json2/20140204/json2.min.js'&gt;\n&lt;script src='https://cdn.rawgit.com/gisu/selectivizr/1.0.3/selectivizr.js'&gt;&lt;/script&gt;\n&lt;script src='https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js'&gt;\n&lt;script src='https://cdnjs.cloudflare.com/ajax/libs/respond.js/1.4.2/respond.js'&gt;\n&lt;![endif]--&gt; \n</code></pre>\n\n<h3 id=\"you-may-also-need\">You may also need</h3>\n\n<ul>\n  <li><a href=\"https://modernizr.com\">modernizr</a> for feature detection</li>\n</ul>\n\n<h3 id=\"for-css3-decorations\">for CSS3 decorations</h3>\n\n<ul>\n  <li><a href=\"http://css3pie.com/\">css3pie</a></li>\n  <li><a href=\"https://github.com/zoltan-dulac/cssSandpaper\">cssSandpaper</a></li>\n  <li><a href=\"http://ecsstender.org/\">ecsstender</a></li>\n</ul>\n\n<p>See: <a href=\"https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills\">Cross-browser polyfills list</a></p>\n\n<h2 id=\"misc\">Misc</h2>\n\n<h3 id=\"ie-conditional-comment-html\">IE Conditional comment HTML</h3>\n\n<pre><code class=\"language-html\">&lt;!--[if lt IE 7 ]&gt; &lt;html class=\"ie6\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 7 ]&gt;    &lt;html class=\"ie7\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 8 ]&gt;    &lt;html class=\"ie8\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 9 ]&gt;    &lt;html class=\"ie9\"&gt; &lt;![endif]--&gt;\n&lt;!--[if (gt IE 9)|!(IE)]&gt;&lt;!--&gt; &lt;html class=\"\"&gt; &lt;!--&lt;![endif]--&gt;\n</code></pre>\n\n<h3 id=\"ie-conditionals\">IE conditionals</h3>\n\n<pre><code class=\"language-html\">&lt;!--[if IE]&gt;      I'm IE      &lt;![endif]--&gt;\n&lt;!--[if !IE]&gt; --&gt; Not IE &lt;!-- &lt;![endif]--&gt;\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2018-03-06"
},{
  "id": "sheets/Html/ie_bugs",
  "title": "Legacy IE bugs",
  "url": "/sheets/Html/ie_bugs",
  "category": "HTML",
  "keywords": null,
  "content_html": "<h3 id=\"ie8-change-event\">IE8: ‘change’ event</h3>\n\n<p>The ‘change’ event doesn’t always fire. Not for checkboxes, radios, multi-select lists. Use the <code>click</code> handler instead.</p>\n\n<ul>\n  <li><a href=\"http://stackoverflow.com/questions/8005442/checkbox-change-event-works-when-click-the-label-in-ie8-ie7\">(1)</a></li>\n</ul>\n\n<h3 id=\"ie8-label-with-input\">IE8: label with input</h3>\n\n<p>Clicking label with input inside doesn’t focus the input.</p>\n\n<ul>\n  <li><a href=\"http://www.gtalbot.org/BrowserBugsSection/MSIE7Bugs/LabelForWithImage.html\">(1)</a></li>\n</ul>\n\n<h3 id=\"ie8-opacity-propagation\">IE8: Opacity propagation</h3>\n\n<p>An element’s ‘opacity’ value isn’t propagated to its positioned descendants.</p>\n\n<ul>\n  <li><a href=\"http://jhop.me/tests/bugs/ie8/opacity_positioned.html\">test case</a></li>\n</ul>",
  "intro_html": "<p>A bunch of bugs to take care of if you’re going to target legacy IE browsers.</p>",
  "description_html": "",
  "tags": null,
  "updated": "2018-03-06"
},{
  "id": "sheets/Jekyll/jekyll-github",
  "title": "Jekyll for GitHub pages",
  "url": "/sheets/Jekyll/jekyll-github",
  "category": "Jekyll",
  "keywords": null,
  "content_html": "<h2 class=\"-one-column\" id=\"jekyll\">Jekyll</h2>\n\n<ul class=\"-four-column\">\n  <li>jekyll-avatar</li>\n  <li>jekyll-coffeescript</li>\n  <li>jekyll-default-layout</li>\n  <li>jekyll-feed</li>\n  <li>jekyll-gist</li>\n  <li>jekyll-github-metadata</li>\n  <li>jekyll-mentions</li>\n  <li>jekyll-optional-front-matter</li>\n  <li>jekyll-paginate</li>\n  <li>jekyll-readme-index</li>\n  <li>jekyll-redirect-from</li>\n  <li>jekyll-relative-links</li>\n  <li>jekyll-sass-converter</li>\n  <li>jekyll-seo-tag</li>\n  <li>jekyll-sitemap</li>\n</ul>\n\n<p>As of github-pages v156. For an updated list, see: <a href=\"https://pages.github.com/versions/\">Dependency versions</a> <em>(pages.github.com)</em></p>\n\n<h2 id=\"github-metadata\">GitHub Metadata</h2>\n\n<h3 id=\"configuration\">Configuration</h3>\n\n<pre><code class=\"language-yaml\">plugins:\n  - jekyll-github-metadata\n\nrepository: username/project\n</code></pre>\n\n<p>Put this in your <code>_config.yml</code>.\nSee: <a href=\"https://help.github.com/articles/repository-metadata-on-github-pages/\">Repository metadata on GitHub pages</a></p>\n\n<h3 id=\"listing-repos\">Listing repos</h3>\n\n<pre><code class=\"language-html\">{% for repository in site.github.public_repositories %}\n  &lt;a href='{{ repository.html_url }}'&gt;\n    {{ repository.name }}\n  &lt;/a&gt;\n{% endfor %}\n</code></pre>\n\n<h3 id=\"link-to-repo\">Link to repo</h3>\n\n<pre><code class=\"language-html\">&lt;a href='{{ site.github.repository_url }}'&gt;\n  {{ site.github.project_title }}\n&lt;/a&gt;\n</code></pre>\n\n<h2 id=\"gists\">Gists</h2>\n\n<h3 id=\"configuration-1\">Configuration</h3>\n\n<pre><code class=\"language-yaml\">plugins:\n  - jekyll-gist\n</code></pre>\n\n<p>See: <a href=\"https://github.com/jekyll/jekyll-gist\">jekyll-gist</a></p>\n\n<h3 id=\"usage\">Usage</h3>\n\n<pre><code class=\"language-js\">{% gist parkr/c08ee0f2726fd0e3909d %}\n</code></pre>\n\n<p>This places a Gist in your page.</p>\n\n<h2 id=\"mentions\">Mentions</h2>\n\n<h3 id=\"configuration-2\">Configuration</h3>\n\n<pre><code class=\"language-yaml\">plugins:\n  - jekyll-mentions\n</code></pre>\n\n<p>See: <a href=\"https://github.com/jekyll/jekyll-mentions\">jekyll-mentions</a></p>\n\n<h3 id=\"usage-1\">Usage</h3>\n\n<pre><code class=\"language-js\">Hey @rstacruz, what do you think of this?\n</code></pre>\n\n<p>Just mention anyone in any page. Their names will be turned into links.</p>\n\n<h2 class=\"-three-column\" id=\"redirects\">Redirects</h2>\n\n<h3 id=\"configuration-3\">Configuration</h3>\n\n<pre><code class=\"language-yaml\">plugins:\n    - jekyll-redirect-from\n</code></pre>\n\n<p>See: <a href=\"https://rubygems.org/gems/jekyll-redirect-from\">jekyll-redirect-from</a></p>\n\n<h3 id=\"usage-2\">Usage</h3>\n\n<pre><code class=\"language-yaml\">---\nredirect_from:\n  - /foo\n---\n</code></pre>\n\n<p>Place on any page.</p>\n\n<h3 id=\"redirecting\">Redirecting</h3>\n\n<pre><code class=\"language-yaml\">---\nredirect_to:\n  - /foo\n---\n</code></pre>\n\n<p>Place on any page.\nSee: <a href=\"https://github.com/jekyll/jekyll-redirect-from#redirect-to\">redirect to</a></p>",
  "intro_html": "",
  "description_html": "",
  "tags": ["WIP"],
  "updated": "2017-11-17"
},{
  "id": "sheets/Jekyll/jekyll",
  "title": "Jekyll",
  "url": "/sheets/Jekyll/jekyll",
  "category": "Jekyll",
  "keywords": null,
  "content_html": "<h3 id=\"installation\">Installation</h3>\n\n<pre><code class=\"language-bash\"># Install the gems\ngem install jekyll bundler\n</code></pre>\n\n<pre><code class=\"language-bash\"># Create a new site at `./myblog`\njekyll new myblog\ncd myblog\n</code></pre>\n\n<pre><code class=\"language-bash\"># Optional: if you're targeting github-pages,\n# use this Gemfile instead.\ncat &gt; Gemfile &lt;&lt;-END\nsource 'https://rubygems.org'\ngem 'github-pages', group: :jekyll_plugins\nEND\n</code></pre>\n\n<pre><code class=\"language-bash\">bundle exec jekyll serve\n</code></pre>\n\n<p>See: <a href=\"http://jekyllrb.com/docs/quickstart/\">Jekyll quickstart</a><br />\nSee: <a href=\"https://github.com/github/pages-gem\">github/pages-gem</a></p>\n\n<h3 id=\"directories\">Directories</h3>\n\n<pre class=\"-box-chars\"><code>./\n├── _config.yml\n│\n├── _data/\n│   └── ...\n│\n├── _drafts/\n│   └── ...\n│\n├── _posts/\n│   └── 2014-01-01-hello.md\n│\n├── _layouts/\n│   ├── default.html\n│   └── post.html\n│\n├── _includes/             - partials\n│   ├── header.html\n│   └── footer.html\n│\n└── _site/\n    └── ...\n</code></pre>\n\n<h2 class=\"-three-column\" id=\"front-matter\">Front-matter</h2>\n\n<h3 id=\"basic-frontmatter\">Basic frontmatter</h3>\n\n<pre data-line=\"1,2,3,4\"><code>---\nlayout: post\ntitle: Hello\n---\nHello! this is my post.\n</code></pre>\n\n<p>Attach metadata to a page by adding them on top of the page, delimited by <code>---</code>.\nSee: <a href=\"http://jekyllrb.com/docs/frontmatter/\">Front-matter</a></p>\n\n<h3 id=\"other-frontmatter-stuff\">Other frontmatter stuff</h3>\n\n<pre><code class=\"language-yaml\">permalink: '/hello'\npublished: false\ncategory: apple\ncategories: ['html', 'css']\ntags: ['html', 'css']\n</code></pre>\n\n<h3 id=\"configuration\">Configuration</h3>\n\n<p class=\"-setup\">In <code>_config.yml</code>:</p>\n\n<pre><code class=\"language-yaml\">source: .\ndestination: _site\nexclude:\n- Gemfile\n- Gemfile.lock\ninclude: ['.htaccess']\n</code></pre>\n\n<p>All config keys are optional.\nSee: <a href=\"http://jekyllrb.com/docs/configuration/\">Configuration</a></p>\n\n<h2 class=\"-three-column\" id=\"markup\">Markup</h2>\n\n<h3 id=\"page-variables\">Page variables</h3>\n\n<pre data-line=\"2\"><code class=\"language-html\">&lt;title&gt;\n  {{ page.title }}\n&lt;/title&gt;\n</code></pre>\n\n<h3 id=\"filters\">Filters</h3>\n\n<pre data-line=\"2\"><code class=\"language-html\">&lt;p&gt;\n  {{ page.description | truncate_words: 20 }}\n&lt;/p&gt;\n</code></pre>\n\n<h3 id=\"loops\">Loops</h3>\n\n<pre data-line=\"1,6\"><code class=\"language-html\">{% for post in site.posts %}\n  &lt;a href=\"{{ post.url }}\"&gt;\n    &lt;h2&gt;{{ post.title }}&lt;/h2&gt;\n    &lt;p&gt;{{ post.date | date_to_string }}&lt;/p&gt;\n  &lt;/a&gt;\n{% endfor %}\n</code></pre>\n\n<h3 id=\"dates\">Dates</h3>\n\n<pre><code class=\"language-html\">{{ page.date | date: \"%b %d, %Y\" }}\n</code></pre>\n\n<h3 id=\"conditionals\">Conditionals</h3>\n\n<pre><code class=\"language-html\">{% if page.image.feature %}\n  ...\n{% elsif xyz %}\n  ...\n{% else %}\n  ...\n{% endif %}\n</code></pre>\n\n<pre><code class=\"language-html\">{% if page.category == 'React' %}\n{% if page.category == 'React' or page.featured %}\n{% if page.tags contains 'Featured' %}\n</code></pre>\n\n<h3 id=\"case\">Case</h3>\n\n<pre data-line=\"1,2,4,6,8\"><code class=\"language-html\">{% case shipping.title %}\n  {% when 'international' %}\n     Arriving in 2-3 weeks\n  {% when 'Domestic' %}\n     Arriving in 2-3 days\n  {% else %}\n     Thank you for your order!\n{% endcase %}\n</code></pre>\n\n<h3 id=\"includes-partials\">Includes (partials)</h3>\n\n<pre data-line=\"1\"><code>{% include header.html %}\n</code></pre>\n\n<pre data-line=\"2\"><code class=\"language-html\">&lt;!-- Including local vars --&gt;\n{% include header.html page=page %}\n</code></pre>\n\n<h3 id=\"comments\">Comments</h3>\n\n<pre data-line=\"1,3\"><code class=\"language-html\">{% comment %}\n  This is a comment!\n{% endcomment %}\n</code></pre>\n\n<h2 id=\"variables\">Variables</h2>\n\n<h3 id=\"top-level-variables\">Top-level variables</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>{{ site }}</code></td>\n      <td>Data from <code>config.yml</code></td>\n    </tr>\n    <tr>\n      <td><code>{{ page }}</code></td>\n      <td>From frontmatter, and page-specific info</td>\n    </tr>\n    <tr>\n      <td><code>{{ content }}</code></td>\n      <td>HTML content (use in layouts)</td>\n    </tr>\n    <tr>\n      <td><code>{{ paginator }}</code></td>\n      <td>Paginator</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"http://jekyllrb.com/docs/variables/\">Variables</a></p>\n\n<h3 id=\"site\">Site</h3>\n\n<pre class=\"-setup\"><code class=\"language-html\">{{ site.time }}\n</code></pre>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>site.time</code></td>\n      <td>Current time</td>\n    </tr>\n    <tr>\n      <td><code>site.pages</code></td>\n      <td>List of pages</td>\n    </tr>\n    <tr>\n      <td><code>site.posts</code></td>\n      <td>List of blog posts</td>\n    </tr>\n    <tr>\n      <td><code>site.related_posts</code></td>\n      <td>List of posts related to current</td>\n    </tr>\n    <tr>\n      <td><code>site.categories.CATEGORY</code></td>\n      <td>List</td>\n    </tr>\n    <tr>\n      <td><code>site.tags.TAG</code></td>\n      <td>List</td>\n    </tr>\n    <tr>\n      <td><code>site.static_files</code></td>\n      <td>List</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"page\">Page</h3>\n\n<pre><code class=\"language-html\">{{ page.content }}  - un-rendered content\n{{ page.title }}\n{{ page.excerpt }}  - un-rendered excerpt\n{{ page.url }}\n{{ page.date }}\n{{ page.id }}       - unique id for RSS feeds\n{{ page.categories }}\n{{ page.tags }}\n{{ page.path }}\n{{ page.dir }}\n{{ page.excerpt | remove: '&lt;p&gt;' | remove: '&lt;/p&gt;' }}\n{{ page.excerpt | strip_html }}\n</code></pre>\n\n<pre><code class=\"language-html\">&lt;!-- blog pagination: --&gt;\n{{ page.next }}\n{{ page.previous }}\n</code></pre>\n\n<h2 class=\"-three-column\" id=\"filters-1\">Filters</h2>\n\n<h3 id=\"dates-1\">Dates</h3>\n\n<pre class=\"-setup\"><code class=\"language-ruby\">{{ site.time | date: \"%Y %m %d\" }}\n</code></pre>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>date_to_xmlschema</code></td>\n      <td>→ <code>2008-11-07T13:07:54-08:00</code></td>\n    </tr>\n    <tr>\n      <td><code>date_to_rfc822</code></td>\n      <td>→ <code>Mon, 07 Nov 2008 13:07:54 -0800</code></td>\n    </tr>\n    <tr>\n      <td><code>date_to_string</code></td>\n      <td>→ <code>07 Nov 2008</code></td>\n    </tr>\n    <tr>\n      <td><code>date_to_long_string</code></td>\n      <td>→ <code>07 November 2008</code></td>\n    </tr>\n    <tr>\n      <td><code>date:</code> <em>‘%Y %m %d’</em></td>\n      <td>→ <code>2017 Nov  7</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"preprocessors\">Preprocessors</h3>\n\n<pre class=\"-setup\"><code class=\"language-ruby\">{{ page.description | markdownify }}\n</code></pre>\n\n<table>\n  <thead>\n    <tr>\n      <th>Filter</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>textilize</code></td>\n      <td>Textile</td>\n    </tr>\n    <tr>\n      <td><code>markdownify</code></td>\n      <td>Markdown</td>\n    </tr>\n    <tr>\n      <td><code>jsonify</code></td>\n      <td>JSON</td>\n    </tr>\n    <tr>\n      <td><code>sassify</code></td>\n      <td>Sass</td>\n    </tr>\n    <tr>\n      <td><code>scssify</code></td>\n      <td>SCSS</td>\n    </tr>\n    <tr>\n      <td><code>smartify</code></td>\n      <td>Smartypants</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"array-filters\">Array filters</h3>\n\n<pre class=\"-setup\"><code class=\"language-ruby\">{{ site.pages | where: \"year\", \"2014\" }}\n</code></pre>\n\n<table>\n  <thead>\n    <tr>\n      <th>Filter</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>where:</code> <em>“year”, “2014”</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>where_exp:</code> <em>“item”, “item.year &gt;= 2014”</em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>group_by:</code> <em>“genre”</em></td>\n      <td>→ <code>{name, items}</code></td>\n    </tr>\n    <tr>\n      <td><code>group_by_exp:</code> <em>“item”, “item.genre”</em></td>\n      <td>→ <code>{name, items}</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>sort</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>sort:</code> <em>‘author’</em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>uniq</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>first</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>last</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>join:</code> <em>’,’</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>array_to_sentence_string</code></td>\n      <td>→ <code>\"X, Y and Z\"</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>map:</code> <em>‘post’</em></td>\n      <td>Works like ‘pluck’</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>size</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>push:</code> <em>‘xxx’</em></td>\n      <td>Adds an item</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"string-filters\">String filters</h3>\n\n<pre class=\"-setup\"><code class=\"language-ruby\">{{ page.title | default: \"xxx\" }}\n</code></pre>\n\n<table>\n  <thead>\n    <tr>\n      <th>Filter</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>default:</code> <em>‘xxx’</em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>upcase</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>downcase</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>remove:</code> <em>‘p’</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>replace:</code> <em>‘super’, ‘mega’</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>remove_first:</code> <em>‘p’</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>replace_first:</code> <em>‘super’, ‘mega’</em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>truncate:</code> <em>5</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>truncatewords:</code> <em>20</em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>prepend:</code> <em>‘Mr. ‘</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>append:</code> <em>‘Jr.’</em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>camelize</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>capitalize</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>strip_html</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>strip_newlines</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>newlines_to_br</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>split:</code> <em>’,’</em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>escape</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>escape_once</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>slice:</code> <em>-3, 3</em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"http://docs.shopify.com/themes/liquid-documentation/filters\">String filters</a></p>\n\n<h3 id=\"string-filters-jekyll-only\">String filters (Jekyll-only)</h3>\n\n<pre class=\"-setup\"><code class=\"language-ruby\">{{ page.excerpt | number_of_words }}\n</code></pre>\n\n<table>\n  <thead>\n    <tr>\n      <th>Filter</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>number_of_words</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>slugify</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>xml_escape</code></td>\n      <td>→ <code>CDATA</code></td>\n    </tr>\n    <tr>\n      <td><code>cgi_escape</code></td>\n      <td>→ <code>foo%2Cbar</code></td>\n    </tr>\n    <tr>\n      <td><code>uri_escape</code></td>\n      <td>→ <code>foo,%20bar</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"numbers\">Numbers</h3>\n\n<pre class=\"-setup\"><code>{{ site.posts.size | minus: 2 }}\n</code></pre>\n\n<table>\n  <thead>\n    <tr>\n      <th>Filter</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>minus:</code> <em>2</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>plus:</code> <em>2</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>times:</code> <em>2</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>divided_by:</code> <em>2</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>modulo:</code> <em>2</em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>ceil</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>floor</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>round</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"paginator\">Paginator</h2>\n\n<h3 id=\"paginator-setup\">Paginator setup</h3>\n\n<p class=\"-setup\">Add this to <code>_config.yml</code>:</p>\n\n<pre><code class=\"language-yml\">paginate: 5\npaginate_path: \"blog/:num\"\n</code></pre>\n\n<p>See: <a href=\"http://jekyllrb.com/docs/pagination/\">Paginator</a></p>\n\n<h3 id=\"numbers-1\">Numbers</h3>\n\n<pre><code>{{ paginator.page }}         - page number\n{{ paginator.total_posts }}\n{{ paginator.total_pages }}\n{{ paginator.per_page }}\n</code></pre>\n\n<h3 id=\"iterating-through-posts\">Iterating through posts</h3>\n\n<pre><code>{% for post in paginator.posts %} ... {% endfor %}\n</code></pre>\n\n<h3 id=\"previous-button\">Previous button</h3>\n\n<pre><code>{% if paginator.total_pages &gt; 1 %}\n  {% if paginator.previous_page %}\n    &lt;a href=\"{{ paginator.previous_page_path }}\"&gt;Previous&lt;/a&gt;\n  {% else %}\n  {% endif %}\n{% endif %}\n</code></pre>\n\n<pre><code>{{ paginator.next_page }}     - page number\n{{ paginator.next_page_path }}\n</code></pre>\n\n<h2 id=\"blogging\">Blogging</h2>\n\n<h3 id=\"paths\">Paths</h3>\n\n<pre><code>_posts/YEAR-MONTH-DAY-title.md\n</code></pre>\n\n<p>See: <a href=\"http://jekyllrb.com/docs/posts/\">Blogging</a></p>\n\n<h3 id=\"image-paths\">Image paths</h3>\n\n<pre><code>![My helpful screenshot]({{ site.url }}/assets/screenshot.jpg)\n</code></pre>\n\n<p>See: <a href=\"http://jekyllrb.com/docs/posts/#including-images-and-resources\">Image paths</a></p>\n\n<h3 id=\"drafts\">Drafts</h3>\n\n<pre><code>vi _drafts/a-draft-post.md\njekyll build --drafts\n</code></pre>\n\n<p>Posts in <code>_drafts</code> only show up in development, but not production.\nSee: <a href=\"http://jekyllrb.com/docs/drafts/\">Drafts</a></p>\n\n<h3 id=\"defining-excerpts\">Defining excerpts</h3>\n\n<pre><code>---\ntitle: My blog post\nexcerpt: This post is about cats\n---\n\nHello, let's talk about cats. (···)\n</code></pre>\n\n<p>Put a key <code>excerpt</code> in the frontmatter.\nSee: <a href=\"http://jekyllrb.com/docs/posts/#post-excerpts\">Excerpts</a></p>\n\n<h3 id=\"displaying-excerpts\">Displaying excerpts</h3>\n\n<pre><code class=\"language-html\">{{ post.excerpt }}\n</code></pre>\n\n<pre><code class=\"language-html\">{{ post.excerpt | remove: '&lt;p&gt;' | remove: '&lt;/p&gt;' }}\n{{ post.excerpt | strip_html }}\n</code></pre>\n\n<h3 id=\"excerpt-separator\">Excerpt separator</h3>\n\n<pre><code class=\"language-html\">---\nexcerpt_separator: &lt;!--more--&gt;\n---\n\nExcerpt here\n&lt;!--more--&gt;\nMore post body here\n</code></pre>\n\n<p>Alternatively, you can put excerpts inline in your post by defining <code>excerpt_separator</code>.</p>\n\n<h3 id=\"permalinks\">Permalinks</h3>\n\n<pre><code># _config.yml\npermalink: date   # /:categories/:year/:month/:day/:title.html\npermalink: pretty # /:categories/:year/:month/:day/:title/\npermalink: none   # /:categories/:title.html\npermalink: \"/:title\"\n</code></pre>\n\n<p>See: <a href=\"http://jekyllrb.com/docs/permalinks/\">Permalinks</a></p>\n\n<h2 id=\"more-features\">More features</h2>\n\n<h3 id=\"data\">Data</h3>\n\n<pre class=\"-setup\"><code>_data/members.yml\n</code></pre>\n\n<pre><code>{% for member in site.data.members %}\n  ...\n{% endfor %}\n</code></pre>\n\n<p>See: <a href=\"http://jekyllrb.com/docs/datafiles/\">Data</a></p>\n\n<h3 id=\"collections\">Collections</h3>\n\n<pre class=\"-setup\"><code class=\"language-yml\"># _config.yml\ncollections:\n  - authors\n</code></pre>\n\n<pre><code class=\"language-yml\"># _/authors/a-n-roquelaire.md\n---\nname: A. N. Roquelaire\nreal_name: Anne Rice\n---\n</code></pre>\n\n<pre><code>{% for author in site.authors %}\n</code></pre>\n\n<p>See: <a href=\"http://jekyllrb.com/docs/collections/\">Collections</a></p>\n\n<h3 id=\"code-highlighter\">Code highlighter</h3>\n\n<pre><code class=\"language-html\">{% highlight ruby linenos %}\ndef show\n  ...\nend\n{% endhighlight %}\n</code></pre>\n\n<h2 id=\"integration\">Integration</h2>\n\n<h3 id=\"bundler\">Bundler</h3>\n\n<p class=\"-setup\">In <code>_plugins/bundler.rb</code>:</p>\n\n<pre><code class=\"language-ruby\">require \"bunder/setup\"\nBundler.require :default\n</code></pre>\n\n<h3 id=\"compass\">Compass</h3>\n\n<ul>\n  <li><a href=\"https://gist.github.com/parkr/2874934\">Compass</a></li>\n  <li><a href=\"https://github.com/matthodan/jekyll-asset-pipeline\">Asset pipeline</a></li>\n</ul>\n\n<h2 class=\"-one-column\" id=\"also-see\">Also see</h2>\n\n<ul class=\"-also-see\">\n  <li><a href=\"http://jekyllrb.com/docs/home/\">Jekyll docs</a> <em>jekyllrb.com</em></li>\n  <li><a href=\"https://learn.cloudcannon.com/jekyll-cheat-sheet/\">CloudCannon Jekyll cheatsheet</a> <em>cloudcannon.com</em></li>\n  <li><a href=\"http://jekyllrb.com/docs/templates/\">Jekyll: templates</a> <em>jekyllrb.com</em></li>\n  <li><a href=\"http://docs.shopify.com/themes/liquid-basics/output\">Liquid: output</a> <em>shopify.com</em></li>\n  <li><a href=\"http://docs.shopify.com/themes/liquid-basics/logic\">Liquid: logic</a> <em>shopify.com</em></li>\n  <li><a href=\"http://docs.shopify.com/themes/liquid-documentation/filters\">Liquid: filters</a> <em>shopify.com</em></li>\n  <li><a href=\"https://github.com/Shopify/liquid/wiki/Liquid-for-Designers\">Liquid for designers</a> <em>github.com/Shopify</em></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2018-08-25"
},{
  "id": "sheets/JavaScript/jquery-cdn",
  "title": "jQuery CDN",
  "url": "/sheets/JavaScript/jquery-cdn",
  "category": "JavaScript libraries",
  "keywords": null,
  "content_html": "<h3 id=\"google-jquery\">Google jQuery</h3>\n\n<pre><code class=\"language-html\">&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"&gt;&lt;/script&gt;\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": ["Archived"],
  "updated": null
},{
  "id": "sheets/JavaScript/jquery",
  "title": "jQuery",
  "url": "/sheets/JavaScript/jquery",
  "category": "JavaScript libraries",
  "keywords": null,
  "content_html": "<h3 id=\"traversing\">Traversing</h3>\n\n<pre><code class=\"language-js\">$('.box')\n  .children()\n  .closest('div')\n  .filter(':selected')\n  .find('div')\n  .has('div')\n  .first()\n  .next('div')\n  .nextUntil('div')\n</code></pre>\n\n<h2 id=\"advanced-features\">Advanced features</h2>\n\n<h3 id=\"extending-selectors\">Extending selectors</h3>\n\n<pre><code class=\"language-js\">$.expr[':'].inline = function (el) {\n  return $(el).css('display') === 'inline'\n}\n</code></pre>\n\n<p>Enables <code>$(':inline')</code></p>\n\n<h3 id=\"extend-css-properties\">Extend CSS properties</h3>\n\n<pre><code class=\"language-js\">$.cssHooks.someCSSProp = {\n  get: function (elem, computed, extra) {\n  },\n  set: function (elem, value) {\n  }\n}\n\n// Disable \"px\"\n$.cssNumber[\"someCSSProp\"] = true\n</code></pre>\n\n<h3 id=\"fnanimate-hooks\">fn.animate() hooks</h3>\n\n<pre><code class=\"language-js\">$.fn.step.someWhatever = function(fx) {\n  // ...\n}\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": ["WIP"],
  "updated": null
},{
  "id": "sheets/JavaScript/js-appcache",
  "title": "applicationCache",
  "url": "/sheets/JavaScript/js-appcache",
  "category": "JavaScript",
  "keywords": null,
  "content_html": "<h2 class=\"-one-column\" id=\"reference\">Reference</h2>\n\n<h3 id=\"applicationcache-checking\">applicationCache checking</h3>\n\n<pre><code class=\"language-js\">if (window.applicationCache) {\n  // \"Naturally\" reload when an update is available\n  var reload = false\n\n  window.applicationCache.addEventListener('updateready', () =&gt; {\n    if (window.applicationCache.status === window.applicationCache.UPDATEREADY) {\n      window.applicationCache.swapCache()\n      reload = true\n    }\n  }, false)\n\n  setInterval(() =&gt; {\n    try {\n      // There's nothing to update for first-time load, browser freaks out :/\n      window.applicationCache.update()\n    } catch (e) { }\n  }, 1000 * 60 * 60) // Every hour\n}\n</code></pre>\n\n<p>This is a deprecated HTML feature. See: <a href=\"https://developer.mozilla.org/en-US/docs/HTML/Using_the_application_cache\">Using the application cache</a> <em>(developer.mozilla.org)</em></p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/JavaScript/js-array",
  "title": "JavaScript Arrays",
  "url": "/sheets/JavaScript/js-array",
  "category": "JavaScript",
  "keywords": null,
  "content_html": "<h3 id=\"arrays\">Arrays</h3>\n\n<pre class=\"-setup\"><code class=\"language-bash\">list = [a,b,c,d,e]\n</code></pre>\n\n<pre><code class=\"language-bash\">list[1]                 // → b\nlist.indexOf(b)         // → 1\n</code></pre>\n\n<h3 id=\"subsets\">Subsets</h3>\n\n<h4 id=\"immutable\">Immutable</h4>\n\n<pre><code class=\"language-bash\">list.slice(0,1)         // → [a        ]\nlist.slice(1)           // → [  b,c,d,e]\nlist.slice(1,2)         // → [  b      ]\n</code></pre>\n\n<h4 id=\"mutative\">Mutative</h4>\n\n<pre><code class=\"language-bash\">re = list.splice(1)     // re = [b,c,d,e]  list == [a]\nre = list.splice(1,2)   // re = [b,c]      list == [a,d,e]\n</code></pre>\n\n<h3 id=\"adding-items\">Adding items</h3>\n\n<h4 id=\"immutable-1\">Immutable</h4>\n\n<pre><code class=\"language-bash\">list.concat([X,Y])      // → [_,_,_,_,_,X,Y]\n</code></pre>\n\n<h4 id=\"mutative-1\">Mutative</h4>\n\n<pre><code class=\"language-bash\">list.push(X)            // list == [_,_,_,_,_,X]\nlist.unshift(X)         // list == [X,_,_,_,_,_]\nlist.splice(2, 0, X)    // list == [_,_,X,_,_,_]\n</code></pre>\n\n<h3 id=\"inserting\">Inserting</h3>\n\n<pre><code class=\"language-bash\">// after -- [_,_,REF,NEW,_,_]\nlist.splice(list.indexOf(REF)+1, 0, NEW))\n</code></pre>\n\n<pre><code class=\"language-bash\">// before -- [_,_,NEW,REF,_,_]\nlist.splice(list.indexOf(REF), 0, NEW))\n</code></pre>\n\n<h3 id=\"replace-items\">Replace items</h3>\n\n<pre><code class=\"language-bash\">list.splice(2, 1, X)    // list == [a,b,X,d,e]\n</code></pre>\n\n<h3 id=\"removing-items\">Removing items</h3>\n\n<pre><code class=\"language-bash\">list.pop()              // → e    list == [a,b,c,d]\nlist.shift()            // → a    list == [b,c,d,e]\nlist.splice(2, 1)       // → [c]  list == [a,b,d,e]\n</code></pre>\n\n<h3 id=\"iterables\">Iterables</h3>\n\n<pre><code class=\"language-bash\">.filter(n =&gt; ...) =&gt; array\n</code></pre>\n\n<pre><code class=\"language-bash\">.find(n =&gt; ...)  // es6\n.findIndex(...)  // es6\n</code></pre>\n\n<pre><code class=\"language-bash\">.every(n =&gt; ...) =&gt; Boolean // ie9+\n.some(n =&gt; ..) =&gt; Boolean   // ie9+\n</code></pre>\n\n<pre><code class=\"language-bash\">.map(n =&gt; ...)   // ie9+\n.reduce((total, n) =&gt; total) // ie9+\n.reduceRight(...)\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/JavaScript/js-date",
  "title": "JavaScript Date",
  "url": "/sheets/JavaScript/js-date",
  "category": "JavaScript",
  "keywords": null,
  "content_html": "<h2 class=\"-left-reference\" id=\"date\">Date</h2>\n\n<h3 id=\"constructor\">Constructor</h3>\n\n<pre><code class=\"language-js\">// Now\nnew Date()\n</code></pre>\n\n<pre><code class=\"language-js\">// ms since epoch\nnew Date(1419785527580)\n</code></pre>\n\n<pre><code class=\"language-js\">// Date format\nnew Date(\"May 17, 1995 03:24:00\")\n</code></pre>\n\n<pre><code class=\"language-js\">// ISO date format\nnew Date(\"2013-03-01T01:10:00\")\n</code></pre>\n\n<pre><code class=\"language-js\">new Date(2014, 2, 1, 13, 0, 59, 0)\n</code></pre>\n\n<h3 id=\"constructor-1\">Constructor</h3>\n\n<table class=\"-css-breakdown\">\n  <tbody>\n    <tr>\n      <td><code>new Date(</code></td>\n      <td><code>2014,</code></td>\n      <td><code>2,</code></td>\n      <td><code>1,</code></td>\n      <td><code>13,</code></td>\n      <td><code>0,</code></td>\n      <td><code>59,</code></td>\n      <td><code>0)</code></td>\n    </tr>\n    <tr>\n      <td>Date</td>\n      <td>Year</td>\n      <td>Month</td>\n      <td>Day</td>\n      <td>Hour</td>\n      <td>Min</td>\n      <td>Sec</td>\n      <td>Milli</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Months are zero-indexed (eg, January is <code>0</code>).</p>\n\n<h3 id=\"conversion\">Conversion</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Method</th>\n      <th>Result</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>d.toString()</code></td>\n      <td><code>\"Mon Dec 29 2014 00:58:28 GMT+0800 (PHT)\"</code></td>\n    </tr>\n    <tr>\n      <td><code>d.toTimeString()</code></td>\n      <td><code>\"00:58:46 GMT+0800 (PHT)\"</code></td>\n    </tr>\n    <tr>\n      <td><code>d.toUTCString()</code></td>\n      <td><code>\"Sun, 28 Dec 2014 16:58:59 GMT\"</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>d.toDateString()</code></td>\n      <td><code>\"Thu Jan 10 2013\"</code></td>\n    </tr>\n    <tr>\n      <td><code>d.toISOString()</code></td>\n      <td><code>\"2013-01-09T16:00:00.000Z\"</code></td>\n    </tr>\n    <tr>\n      <td><code>d.toLocaleString()</code></td>\n      <td><code>\"12/29/2014, 12:57:31 AM\"</code></td>\n    </tr>\n    <tr>\n      <td><code>d.toLocaleTimeString()</code></td>\n      <td><code>\"12:57:31 AM\"</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>d.getTime()</code></td>\n      <td><code>1419785527580</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"accessing\">Accessing</h2>\n\n<h3 id=\"getters\">Getters</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Method</th>\n      <th>Result</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>.getDate()</code></td>\n      <td><code>1..31</code></td>\n    </tr>\n    <tr>\n      <td><code>.getDay()</code></td>\n      <td><code>0..6</code> (sun..sat)</td>\n    </tr>\n    <tr>\n      <td><code>.getFullYear()</code></td>\n      <td><code>2014</code></td>\n    </tr>\n    <tr>\n      <td><code>.getMonth()</code></td>\n      <td><code>0..11</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>.getHours()</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>.getMinutes()</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>.getSeconds()</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>.getMilliseconds()</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>.getTime()</code></td>\n      <td>ms since epoch</td>\n    </tr>\n    <tr>\n      <td><code>.getTimezoneOffset()</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<p>UTC versions are also available (eg, <code>.getUTCDate()</code>, <code>.getUTCDay()</code>, etc).</p>\n\n<h3 id=\"setters\">Setters</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Method</th>\n      <th>Result</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>.setDate</code> <em>(val)</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>.setDay</code> <em>(val)</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>.setFullYear</code> <em>(val)</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>.setMonth</code> <em>(val)</em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>.setHours</code> <em>(val)</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>.setMinutes</code> <em>(val)</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>.setSeconds</code> <em>(val)</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>.setMilliseconds</code> <em>(val)</em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>.setTime</code> <em>(val)</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>.setTimezoneOffset</code> <em>(val)</em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See the getters list.</p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/JavaScript/js-fetch",
  "title": "fetch()",
  "url": "/sheets/JavaScript/js-fetch",
  "category": "JavaScript",
  "keywords": null,
  "content_html": "<h3 class=\"-prime\" id=\"fetch\">Fetch</h3>\n\n<pre data-line=\"4\"><code class=\"language-js\">fetch('/data.json')\n  .then(response =&gt; response.json())\n  .then(data =&gt; {\n    console.log(data)\n  })\n  .catch(err =&gt; ...)\n</code></pre>\n\n<h3 id=\"response\">Response</h3>\n\n<pre><code class=\"language-js\">fetch('/data.json')\n.then(res =&gt; {\n  res.text()       // response body (=&gt; Promise)\n  res.json()       // parse via JSON (=&gt; Promise)\n  res.status       //=&gt; 200\n  res.statusText   //=&gt; 'OK'\n  res.redirected   //=&gt; false\n  res.ok           //=&gt; true\n  res.url          //=&gt; 'http://site.com/data.json'\n  res.type         //=&gt; 'basic'\n                   //   ('cors' 'default' 'error'\n                   //    'opaque' 'opaqueredirect')\n\n  res.headers.get('Content-Type')\n})\n</code></pre>\n\n<h3 id=\"request-options\">Request options</h3>\n\n<pre><code class=\"language-js\">fetch('/data.json', {\n  method: 'post',\n  body: new FormData(form), // post body\n  body: JSON.stringify(...),\n\n  headers: {\n    'Accept': 'application/json'\n  },\n\n  credentials: 'same-origin', // send cookies\n  credentials: 'include',     // send cookies, even in CORS\n\n})\n</code></pre>\n\n<h3 id=\"catching-errors\">Catching errors</h3>\n\n<pre><code class=\"language-js\">fetch('/data.json')\n  .then(checkStatus)\n</code></pre>\n\n<pre><code class=\"language-js\">function checkStatus (res) {\n  if (res.status &gt;= 200 &amp;&amp; res.status &lt; 300) {\n    return res\n  } else {\n    let err = new Error(res.statusText)\n    err.response = res\n    throw err\n  }\n}\n</code></pre>\n\n<p>Non-2xx responses are still successful requests. Use another function to turn them to errors.</p>\n\n<h3 id=\"using-with-nodejs\">Using with node.js</h3>\n\n<pre><code class=\"language-js\">const fetch = require('isomorphic-fetch')\n</code></pre>\n\n<p>See: <a href=\"https://npmjs.com/package/isomorphic-fetch\">isomorphic-fetch</a> <em>(npmjs.com)</em></p>\n\n<h2 class=\"-one-column\" id=\"references\">References</h2>\n\n<ul>\n  <li><a href=\"https://fetch.spec.whatwg.org/\">https://fetch.spec.whatwg.org/</a></li>\n  <li><a href=\"https://www.npmjs.com/package/whatwg-fetch\">https://www.npmjs.com/package/whatwg-fetch</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/JavaScript/js-lazy",
  "title": "JavaScript lazy shortcuts",
  "url": "/sheets/JavaScript/js-lazy",
  "category": "JavaScript",
  "keywords": null,
  "content_html": "<h2 class=\"-left-reference\" id=\"shortcuts\">Shortcuts</h2>\n\n<h3 id=\"examples\">Examples</h3>\n\n<pre><code class=\"language-js\">n = +'4096'    // n === 4096\ns = '' + 200   // s === '200'\n</code></pre>\n\n<pre><code class=\"language-js\">now = +new Date()\nisPublished = !!post.publishedAt\n</code></pre>\n\n<h3 id=\"shortcuts-1\">Shortcuts</h3>\n\n<table class=\"-left-align -headers\">\n  <thead>\n    <tr>\n      <th>What</th>\n      <th>Lazy mode</th>\n      <th>“The right way”</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>String to number</td>\n      <td><code>+str</code></td>\n      <td><code>parseInt(str, 10)</code> <em>or</em> <code>parseFloat()</code></td>\n    </tr>\n    <tr>\n      <td>Math floor</td>\n      <td><code>num | 0</code></td>\n      <td><code>Math.floor(num)</code></td>\n    </tr>\n    <tr>\n      <td>Number to string</td>\n      <td><code>'' + num</code></td>\n      <td><code>num.toString()</code></td>\n    </tr>\n    <tr>\n      <td>Date to UNIX timestamp</td>\n      <td><code>+new Date()</code></td>\n      <td><code>new Date().getTime()</code></td>\n    </tr>\n    <tr>\n      <td>Any to boolean</td>\n      <td><code>!!value</code></td>\n      <td><code>Boolean(value)</code></td>\n    </tr>\n    <tr>\n      <td>Check array contents</td>\n      <td><code>if (~arr.indexOf(v))</code></td>\n      <td><code>if (arr.includes(v))</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<p><code>.includes</code> is ES6-only, otherwise use <code>.indexOf(val) !== -1</code> if you don’t polyfill.</p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/JavaScript/js-model",
  "title": "js-model",
  "url": "/sheets/JavaScript/js-model",
  "category": "JavaScript libraries",
  "keywords": null,
  "content_html": "<h3 id=\"example\">Example</h3>\n\n<pre><code class=\"language-bash\">Project = Model \"project\", -&gt;\n  @extend\n    findByTitle: (title) -&gt; ...\n\n  @include\n    markAsDone: -&gt; ...\n\n  # ActiveRecord::Base.include_root_in_json = false\n</code></pre>\n\n<pre><code class=\"language-bash\">project = Project.find(1)\nproject = Project.findByTitle(\"hello\")\n\nproject.markAsDone()\n</code></pre>\n\n<h3 id=\"persistence\">Persistence</h3>\n\n<pre><code class=\"language-bash\">Project \"hi\", -&gt;\n  @persistence Model.REST, \"/projects\"\n  @persistence Model.localStorage\n</code></pre>\n\n<pre><code class=\"language-bash\">Project.load -&gt;\n  # loaded\n</code></pre>\n\n<h3 id=\"attrs\">Attrs</h3>\n\n<pre><code class=\"language-bash\">project = new Project(name: \"Hello\")\n\nproject.attr('name', \"Hey\")\nproject.attr('name')\n\nproject.save()\nproject.destroy()\n</code></pre>\n\n<h3 id=\"collection\">Collection</h3>\n\n<pre><code class=\"language-bash\">Food.add(egg)\nFood.all()\nFood.select (food) -&gt; ...\nFood.first()\n</code></pre>\n\n<pre><code class=\"language-bash\">Food.find(id)\n</code></pre>\n\n<h3 id=\"events\">Events</h3>\n\n<pre><code class=\"language-bash\"># Classes\nProject.bind \"add\", (obj) -&gt;\nProject.bind \"remove\", (obj) -&gt;\n</code></pre>\n\n<pre><code class=\"language-bash\"># Instances\nproject.bind \"update\", -&gt;\nproject.bind \"destroy\", -&gt;\n</code></pre>\n\n<pre><code class=\"language-bash\">project.trigger \"turn_blue\"\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"references\">References</h2>\n\n<ul>\n  <li><a href=\"http://benpickles.github.io/js-model/\">http://benpickles.github.io/js-model/</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/JavaScript/js-speech",
  "title": "JavaScript speech synthesis",
  "url": "/sheets/JavaScript/js-speech",
  "category": "JavaScript",
  "keywords": null,
  "content_html": "<h2 class=\"-one-column\" id=\"speechsynthesisutterance\">SpeechSynthesisUtterance</h2>\n\n<pre><code class=\"language-js\">function speak (message) {\n  var msg = new SpeechSynthesisUtterance(message)\n  var voices = window.speechSynthesis.getVoices()\n  msg.voice = voices[0]\n  window.speechSynthesis.speak(msg)\n}\n</code></pre>\n\n<pre><code class=\"language-js\">speak('Hello, world')\n</code></pre>\n\n<p>See: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance\">SpeechSynthesisUtterance</a> <em>(developer.mozilla.org)</em></p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/JavaScript/jscoverage",
  "title": "jscoverage",
  "url": "/sheets/JavaScript/jscoverage",
  "category": "JavaScript libraries",
  "keywords": null,
  "content_html": "<h3 id=\"install\">Install</h3>\n\n<h4 id=\"install-via-npm\">Install via npm</h4>\n\n<pre><code class=\"language-bash\">npm install --save-dev jscoverage\n</code></pre>\n\n<h4 id=\"ignore-output\">Ignore output</h4>\n\n<pre><code class=\"language-bash\">echo coverage.html &gt;&gt; .gitignore\n</code></pre>\n\n<h3 id=\"packagejson\">package.json</h3>\n\n<p class=\"-setup\">The <code>coverage</code> task injects your source files (<code>lib</code>) with jscoverage hooks, runs <code>mocha -R html-cov</code>, then restores later.</p>\n\n<pre class=\"-hard-wrap\"><code class=\"language-bash\">/* directory */\n\"coverage\": \"mv lib lib~; (jscoverage lib~ lib; mocha -R html-cov &gt; coverage.html); rm -rf lib; mv lib~ lib\"\n</code></pre>\n\n<pre class=\"-hard-wrap\"><code class=\"language-bash\">/* single file */\n\"coverage\": \"(cp index.js index.js~; jscoverage index.js; mv index-cov.js index.js; mocha -R html-cov &gt; coverage.html); mv index.js~ index.js\"\n</code></pre>\n\n<h3 id=\"run\">Run</h3>\n\n<pre><code class=\"language-bash\">npm run coverage\n</code></pre>\n\n<pre><code class=\"language-bash\">open coverage.html\n</code></pre>\n\n<h3 id=\"caveats\">Caveats</h3>\n\n<p>If you’re using jsdom, be sure to expose the <code>window._$jscoverage</code> variable into \nthe <code>global</code> scope.</p>",
  "intro_html": "<p>A small guide into installing <a href=\"https://npmjs.com/package./jscoverage\">jscoverage</a>. Also see <a href=\"./mocha-blanket\">mocha-blanket</a>.</p>",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/JavaScript/jsdoc",
  "title": "Jsdoc",
  "url": "/sheets/JavaScript/jsdoc",
  "category": "JavaScript",
  "keywords": null,
  "content_html": "<h3 id=\"functions\">Functions</h3>\n\n<pre><code class=\"language-js\">/**\n * This is a function.\n *\n * @param {string} n - A string param\n * @return {string} A good string\n *\n * @example\n *\n *     foo('hello')\n */\n\nfunction foo(n) {\n  return n\n}\n</code></pre>\n\n<p>See: <a href=\"https://jsdoc.app/index.html\">https://jsdoc.app/index.html</a></p>\n\n<h3 id=\"types\">Types</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Type</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>@param {string=} n</code></td>\n      <td>Optional</td>\n    </tr>\n    <tr>\n      <td><code>@param {string} [n]</code></td>\n      <td>Optional</td>\n    </tr>\n    <tr>\n      <td><code>@param {(string|number)} n</code></td>\n      <td>Multiple types</td>\n    </tr>\n    <tr>\n      <td><code>@param {*} n</code></td>\n      <td>Any type</td>\n    </tr>\n    <tr>\n      <td><code>@param {...string} n</code></td>\n      <td>Repeatable arguments</td>\n    </tr>\n    <tr>\n      <td><code>@param {string} [n=\"hi\"]</code></td>\n      <td>Optional with default</td>\n    </tr>\n    <tr>\n      <td><code>@param {string[]} n</code></td>\n      <td>Array of strings</td>\n    </tr>\n    <tr>\n      <td><code>@return {Promise&lt;string[]&gt;} n</code></td>\n      <td>Promise fulfilled by array of strings</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"https://jsdoc.app/tags-type.html\">https://jsdoc.app/tags-type.html</a></p>\n\n<h3 id=\"variables\">Variables</h3>\n\n<pre><code class=\"language-js\">/**\n * @type {number}\n */\nvar FOO = 1\n</code></pre>\n\n<pre><code class=\"language-js\">/**\n * @const {number}\n */\nconst FOO = 1\n</code></pre>\n\n<h3 id=\"typedef\">Typedef</h3>\n\n<pre><code class=\"language-js\">/**\n * A song\n * @typedef {Object} Song\n * @property {string} title - The title\n * @property {string} artist - The artist\n * @property {number} year - The year\n */\n</code></pre>\n\n<pre><code class=\"language-js\">/**\n * Plays a song\n * @param {Song} song - The {@link Song} to be played\n */\n\nfunction play(song) {}\n</code></pre>\n\n<p>See: <a href=\"https://jsdoc.app/tags-typedef.html\">https://jsdoc.app/tags-typedef.html</a></p>\n\n<h3 id=\"typedef-shorthand\">Typedef Shorthand</h3>\n\n<pre><code class=\"language-js\">/**\n * A song\n * @typedef {{title: string, artist: string, year: number}} Song\n */\n</code></pre>\n\n<pre><code class=\"language-js\">/**\n * Plays a song\n * @param {Song} song - The {@link Song} to be played\n */\n\nfunction play(song) {}\n</code></pre>\n\n<p>See: <a href=\"https://jsdoc.app/tags-typedef.html\">https://jsdoc.app/tags-typedef.html</a></p>\n\n<h3 id=\"importing-types\">Importing types</h3>\n\n<pre><code class=\"language-js\">/**\n * @typedef {import('./Foo').default} Bar\n */\n\n/**\n * @param {Bar} x\n */\n\nfunction test(x) {}\n</code></pre>\n\n<p>This syntax is <a href=\"https://github.com/Microsoft/TypeScript/wiki/JsDoc-support-in-JavaScript#import-types\">TypeScript-specific</a>.</p>\n\n<h3 id=\"other-keywords\">Other keywords</h3>\n\n<pre><code class=\"language-js\">/**\n * @throws {FooException}\n * @private\n * @deprecated\n * @see\n *\n * @function\n * @class\n */\n</code></pre>\n\n<p>See the full list: <a href=\"https://jsdoc.app/index.html#block-tags\">https://jsdoc.app/index.html#block-tags</a></p>\n\n<h3 id=\"renaming\">Renaming</h3>\n\n<pre><code class=\"language-js\">/*\n * @alias Foo.bar\n * @name Foo.bar\n */\n</code></pre>\n\n<p>Prefer <code>alias</code> over <code>name</code>. See: <a href=\"https://jsdoc.app/tags-alias.html\">https://jsdoc.app/tags-alias.html</a></p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-06-23"
},{
  "id": "sheets/JavaScript/jshint",
  "title": "Jshint",
  "url": "/sheets/JavaScript/jshint",
  "category": "JavaScript libraries",
  "keywords": null,
  "content_html": "<h3 id=\"relaxing\">Relaxing</h3>\n\n<p class=\"-setup\">Enable these options to <em>not</em> throw errors in these conditions.\nSee: <a href=\"http://www.jshint.com/docs/options/#relaxing-options\">Relaxing</a></p>\n\n<pre><code class=\"language-js\">/* jshint asi: true */\nallow()\nmissing_semicolons()\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint boss: true */\nif (m = str.match(/.../))\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint debug: true */\ndebugger;\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint eqnull: true */\nif (x == null)\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint evil: true */\neval('...')\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint expr: true */\nproduction &amp;&amp; minify = true;\ndiv.innerWidth;\nexpect(x).be.true;\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint laxcomma: true */\nvar one = 1\n  , two = 2;\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint loopfunc: true */\nfor (i=0; i&lt;10; x++) {\n  (function(i) { ... })(i);\n}\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint sub: true */\nprocess.env['name_here']\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint strict: \"global\" */\n\"use strict\";\n</code></pre>\n\n<h3 id=\"enforcing\">Enforcing</h3>\n\n<p class=\"-setup\">Enable these options to catch more errors.\nSee: <a href=\"http://www.jshint.com/docs/options/#enforcing-options\">Enforcing</a></p>\n\n<pre><code class=\"language-js\">/* jshint curly: true */\nwhile (day)                     // err: use { }'s\n  shuffle();\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint eqeqeq: true */\nif (a == null)                  // err: use ===\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint es3: true */\n// ...for legacy IE compatibility\na.default = function() { ... }; // err: reserved word\narray = [ 1, 2, 3, ];           // err: extra comma\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint forin: true */\nfor (key in obj) { ... }        // err: check obj.hasOwnProperty(key)\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint freeze: true */\nArray.prototype.count = ...;    // err: don't modify native prototypes\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint indent: 4 */\nif (x) {                        // err: expected indent of 4, found 2\n  ...;\n}\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint quotmark: single */\n/* jshint quotmark: double */\nalert(\"hi\");                    // err: only single allowed\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint strict: true */\nfunction() { ... }              // err: need \"use strict\"\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint white: true, indent: 4 */\n/* jshint maxdepth: 2 */\n/* jshint maxparams: 3 */\n/* jshint maxstatements: 4 */\n/* jshint maxcomplexity: 5 */\n/* jshint maxlen: 80 */\n</code></pre>\n\n<h3 id=\"ignore\">Ignore</h3>\n\n<pre><code class=\"language-js\">/* jshint ignore:start */\n/* jshint ignore:end */\n</code></pre>\n\n<h3 id=\"globals-and-environments\">Globals and Environments</h3>\n\n<pre><code class=\"language-js\">/* jshint undef: true */\n/* global jQuery */\n/* global -BAD_LIB */\n</code></pre>\n\n<pre><code class=\"language-js\">/* jshint devel: true */   console, alert, ...\n/* jshint browser: true */ window, document, location, ...\n/* jshint node: true */    module, exports, console, process, ...\n/* jshint jquery: true */  jQuery, $\n</code></pre>\n\n<p>See: <a href=\"http://www.jshint.com/docs/options/#environments\">Environments</a></p>\n\n<h3 id=\"also-see\">Also see</h3>\n\n<ul>\n  <li><a href=\"http://www.jshint.com/docs/options/\">http://www.jshint.com/docs/options/</a></li>\n  <li><a href=\"https://gist.github.com/haschek/2595796\">https://gist.github.com/haschek/2595796</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2017-09-12"
},{
  "id": "sheets/Jvm/kotlin",
  "title": "Kotlin",
  "url": "/sheets/Jvm/kotlin",
  "category": "Java & JVM",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"variables\">Variables</h2>\n\n<h3 id=\"mutability\">Mutability</h3>\n\n<pre><code class=\"language-kotlin\">var mutableString: String = \"Adam\"\nval immutableString: String = \"Adam\"\nval inferredString = \"Adam\"\n</code></pre>\n\n<h3 id=\"strings\">Strings</h3>\n\n<pre><code class=\"language-kotlin\">val name = \"Adam\"\nval greeting = \"Hello, \" + name\nval greetingTemplate = \"Hello, $name\"\n</code></pre>\n\n<h3 id=\"numbers\">Numbers</h3>\n\n<pre><code class=\"language-kotlin\">val intNum = 10\nval doubleNum = 10.0\nval longNum = 10L\nval floatNum = 10.0F\n</code></pre>\n\n<h3 id=\"booleans\">Booleans</h3>\n\n<pre><code class=\"language-kotlin\">val trueBoolean = true\nval falseBoolean = false\nval andCondition = trueBoolean &amp;&amp; falseBoolean\nval orCondition = trueBoolean || falseBoolean\n</code></pre>\n\n<h3 id=\"static-fields\">Static Fields</h3>\n\n<pre><code class=\"language-kotlin\">class Person {\n    companion object {\n        val NAME_KEY = \"name_key\"\n    }\n}\n\nval key = Person.NAME_KEY\n</code></pre>\n\n<h2 class=\"-two-column\" id=\"null-safety\">Null Safety</h2>\n\n<h3 id=\"nullable-properties\">Nullable properties</h3>\n\n<pre><code class=\"language-kotlin\">val cannotBeNull: String = null // Invalid\nval canBeNull: String? = null // Valid\n\nval cannotBeNull: Int = null // Invalid\nval canBeNull: Int? = null // Valid\n</code></pre>\n\n<h3 id=\"checking-for-null\">Checking for null</h3>\n\n<pre><code class=\"language-kotlin\">val name: String? = \"Adam\"\n\nif (name != null &amp;&amp; name.length &gt; 0) {\n    print(\"String length is ${name.length}\")\n} else {\n    print(\"String is empty.\")\n}\n</code></pre>\n\n<h3 id=\"safe-operator\">Safe Operator</h3>\n\n<pre><code class=\"language-kotlin\">val nullableStringLength: Int? = nullableString?.length\nval nullableDepartmentHead: String? = person?.department?.head?.name\n</code></pre>\n\n<h3 id=\"elvis-operator\">Elvis Operator</h3>\n\n<pre><code class=\"language-kotlin\">val nonNullStringLength: Int = nullableString?.length ?: 0\nval nonNullDepartmentHead: String = person?.department?.head?.name ?: \"\"\nval nonNullDepartmentHead: String = person?.department?.head?.name.orEmpty()\n</code></pre>\n\n<h3 id=\"safe-casts\">Safe Casts</h3>\n<pre><code class=\"language-kotlin\">// Will not throw ClassCastException\nval nullableCar: Car? = (input as? Car)\n</code></pre>\n\n<h2 class=\"-two-column\" id=\"collections\">Collections</h2>\n\n<h3 id=\"creation\">Creation</h3>\n\n<pre><code class=\"language-kotlin\">val numArray = arrayOf(1, 2, 3)\nval numList = listOf(1, 2, 3)\nval mutableNumList = mutableListOf(1, 2, 3)\n</code></pre>\n\n<h3 id=\"accessing\">Accessing</h3>\n\n<pre><code class=\"language-kotlin\">val firstItem = numList[0]\nval firstItem = numList.first()\nval firstItem = numList.firstOrNull()\n</code></pre>\n\n<h3 id=\"maps\">Maps</h3>\n\n<pre><code class=\"language-kotlin\">val faceCards = mutableMapOf(\"Jack\" to 11, \"Queen\" to 12, \"King\" to 13)\nval jackValue = faceCards[\"Jack\"] // 11\nfaceCards[\"Ace\"] = 1\n</code></pre>\n\n<h3 id=\"mutability-1\">Mutability</h3>\n\n<pre><code class=\"language-kotlin\">val immutableList = listOf(1, 2, 3)\nval mutableList = immutableList.toMutableList()\n\nval immutableMap = mapOf(\"Jack\" to 11, \"Queen\" to 12, \"King\" to 13)\nval mutableMap = immutableMap.toMutableMap()\n</code></pre>\n\n<h3 id=\"iterating\">Iterating</h3>\n\n<pre><code class=\"language-kotlin\">for (item in myList) {\n    print(item)\n}\n\nmyList.forEach {\n    print(it)\n}\n\nmyList.forEachIndexed { index, item -&gt; \n    print(\"Item at $index is: $item\")\n}\n</code></pre>\n\n<h3 id=\"filtering--searching\">Filtering &amp; Searching</h3>\n\n<pre><code class=\"language-kotlin\">val evenNumbers = numList.filter { it % 2 == 0 }\nval containsEven = numList.any { it % 2 == 0 }\nval containsNoEvens = numList.none { it % 2 == 0 }\nval containsNoEvens = numList.all { it % 2 == 1 }\nval firstEvenNumber: Int = numList.first { it % 2 == 0 }\nval firstEvenOrNull: Int? = numList.firstOrNull { it % 2 == 0 }\n</code></pre>\n\n<p>Note: <code>it</code> is the <a href=\"https://kotlinlang.org/docs/reference/lambdas.html#it-implicit-name-of-a-single-parameter\">implicit name for a single parameter</a>.</p>\n\n<h2 class=\"-two-column\" id=\"functions\">Functions</h2>\n\n<h3 id=\"parameters--return-types\">Parameters &amp; Return Types</h3>\n\n<pre><code class=\"language-kotlin\">fun printName() {\n    print(\"Adam\")\n}\n\nfun printName(person: Person) {\n    print(person.name)\n}\n\nfun getGreeting(person: Person): String {\n    return \"Hello, ${person.name}\"\n}\n\nfun getGreeting(person: Person): String = \"Hello, ${person.name}\"\nfun getGreeting(person: Person) = \"Hello, ${person.name}\"\n</code></pre>\n\n<h3 id=\"higher-order-functions\">Higher Order Functions</h3>\n\n<pre><code class=\"language-kotlin\">fun callbackIfTrue(condition: Boolean, callback: () -&gt; Unit) {\n    if (condition) {\n        callback()\n    }\n}\n\ncallbackIfTrue(someBoolean) {\n    print(\"Condition was true\")\n}\n</code></pre>\n\n<h3 id=\"extension-functions\">Extension Functions</h3>\n\n<pre><code class=\"language-kotlin\">fun Int.timesTwo(): Int {\n    return this * 2\n}\n\nval four = 2.timesTwo()\n</code></pre>\n\n<h3 id=\"default-parameters\">Default Parameters</h3>\n\n<pre><code class=\"language-kotlin\">fun getGreeting(person: Person, intro: String = \"Hello,\") {\n    return \"$intro ${person.name}\"\n}\n\n// Returns \"Hello, Adam\"\nval hello = getGreeting(Person(\"Adam\"))\n\n// Returns \"Welcome, Adam\"\nval welcome = getGreeting(Person(\"Adam\"), \"Welcome,\")\n</code></pre>\n\n<h3 id=\"named-parameters\">Named Parameters</h3>\n\n<pre><code class=\"language-kotlin\">class Person(val name: String = \"\", age: Int = 0)\n\n// All valid\nval person = Person()\nval person = Person(\"Adam\", 100)\nval person = Person(name = \"Adam\", age = 100)\nval person = Person(age = 100)\nval person = Person(age = 100, name = \"Adam\")\n</code></pre>\n\n<h3 id=\"static-functions\">Static Functions</h3>\n\n<pre><code class=\"language-kotlin\">class Fragment(val args: Bundle) {\n    companion object {\n        fun newInstance(args: Bundle): Fragment {\n            return Fragment(args)\n        }\n    }\n}\n\nval fragment = Fragment.newInstance(args)\n</code></pre>\n\n<ul>\n  <li><a href=\"https://kotlinlang.org/docs/reference/object-declarations.html#companion-objects\">Companion Objects</a></li>\n</ul>\n\n<h2 class=\"-two-column\" id=\"classes\">Classes</h2>\n\n<h3 id=\"primary-constructor\">Primary Constructor</h3>\n\n<pre><code class=\"language-kotlin\">class Person(val name: String, val age: Int)\nval adam = Person(\"Adam\", 100)\n</code></pre>\n\n<h3 id=\"secondary-constructors\">Secondary Constructors</h3>\n\n<pre><code class=\"language-kotlin\">class Person(val name: String) {\n    private var age: Int? = null\n\n    constructor(name: String, age: Int) : this(name) {\n        this.age = age\n    }\n}\n\n// Above can be replaced with default params\nclass Person(val name: String, val age: Int? = null)\n</code></pre>\n\n<h3 id=\"inheritance--implementation\">Inheritance &amp; Implementation</h3>\n\n<pre><code class=\"language-kotlin\">open class Vehicle\nclass Car : Vehicle()\n\ninterface Runner {\n    fun run()\n}\n\nclass Machine : Runner {\n    override fun run() {\n        // ...\n    }\n}\n</code></pre>\n\n<h2 class=\"-two-column\" id=\"control-flow\">Control Flow</h2>\n\n<h3 id=\"if-statements\">If Statements</h3>\n\n<pre><code class=\"language-kotlin\">if (someBoolean) {\n    doThing()\n} else {\n    doOtherThing()\n}\n</code></pre>\n\n<h3 id=\"for-loops\">For Loops</h3>\n\n<pre><code class=\"language-kotlin\">for (i in 0..10) { } // 1 - 10\nfor (i in 0 until 10) // 1 - 9\n(0..10).forEach { }\nfor (i in 0 until 10 step 2) // 0, 2, 4, 6, 8\n</code></pre>\n\n<h3 id=\"when-statements\">When Statements</h3>\n\n<pre><code class=\"language-kotlin\">when (direction) {\n    NORTH -&gt; {\n        print(\"North\")\n    }\n    SOUTH -&gt; print(\"South\")\n    EAST, WEST -&gt; print(\"East or West\")\n    \"N/A\" -&gt; print(\"Unavailable\")\n    else -&gt; print(\"Invalid Direction\")\n}\n</code></pre>\n\n<h3 id=\"while-loops\">While Loops</h3>\n\n<pre><code class=\"language-kotlin\">while (x &gt; 0) {\n    x--\n}\n\ndo {\n    x--\n} while (x &gt; 0)\n</code></pre>\n\n<h2 class=\"-two-column\" id=\"destructuring-declarations\">Destructuring Declarations</h2>\n\n<h3 id=\"objects--lists\">Objects &amp; Lists</h3>\n\n<pre><code class=\"language-kotlin\">val person = Person(\"Adam\", 100)\nval (name, age) = person\n\nval pair = Pair(1, 2)\nval (first, second) = pair\n\nval coordinates = arrayOf(1, 2, 3)\nval (x, y, z) = coordinates\n</code></pre>\n\n<h3 id=\"componentn-functions\">ComponentN Functions</h3>\n\n<pre><code class=\"language-kotlin\">class Person(val name: String, val age: Int) {\n\toperator fun component1(): String {\n\t\treturn name\n\t}\n\n\toperator fun component2(): Int {\n\t\treturn age\n\t}\n}\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"references\">References</h2>\n\n<ul>\n  <li><a href=\"https://kotlinlang.org/docs/reference/basic-syntax.html#defining-variables\">Defining Variables</a> <em>(kotlinlang.org)</em></li>\n  <li><a href=\"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html\">Strings Documentation</a> <em>(kotlinlang.org)</em></li>\n  <li><a href=\"https://kotlinlang.org/docs/reference/basic-types.html#string-templates\">String Templates</a> <em>(kotlinlang.org)</em></li>\n  <li><a href=\"https://kotlinlang.org/docs/reference/basic-types.html\">Basic Types</a> <em>(kotlinlang.org)</em></li>\n  <li><a href=\"https://kotlinlang.org/docs/reference/object-declarations.html#companion-objects\">Companion Objects</a> <em>(kotlinlang.org)</em></li>\n  <li><a href=\"https://kotlinlang.org/docs/reference/null-safety.html\">Null Safety</a> <em>(kotlinlang.org)</em></li>\n  <li><a href=\"https://kotlinlang.org/docs/reference/collections.html\">Collections Overview</a> <em>(kotlinlang.org)</em></li>\n  <li><a href=\"https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/index.html\">Collections Documentation</a> <em>(kotlinlang.org)</em></li>\n  <li><a href=\"https://kotlinlang.org/docs/reference/functions.html\">Functions Documentation</a> <em>(kotlinlang.org)</em></li>\n  <li><a href=\"https://kotlinlang.org/docs/reference/classes.html\">Classes Documentation</a> <em>(kotlinlang.org)</em></li>\n  <li><a href=\"https://kotlinlang.org/docs/reference/multi-declarations.html\">Destructuring Declarations</a> <em>(kotlinlang.org)</em></li>\n</ul>",
  "intro_html": "<p><a href=\"http://kotlinlang.org/\">Kotlin</a> is a statically typed programming language for modern multiplatform applications.</p>",
  "description_html": "",
  "tags": null,
  "updated": "2018-12-06"
},{
  "id": "sheets/Html/layout-thrashing",
  "title": "Layout thrashing",
  "url": "/sheets/Html/layout-thrashing",
  "category": "HTML",
  "keywords": null,
  "content_html": "<h2 class=\"-one-column\" id=\"layout-thrashing\">Layout thrashing</h2>\n\n<h3 id=\"things-that-cause-invalidation\">Things that cause invalidation</h3>\n\n<h4 id=\"element\">Element</h4>\n\n<ul class=\"-six-column\">\n  <li>clientHeight</li>\n  <li>clientLeft</li>\n  <li>clientTop</li>\n  <li>clientWidth</li>\n  <li>focus</li>\n  <li>getBoundingClientRect</li>\n  <li>getClientRects</li>\n  <li>innerText</li>\n  <li>offsetHeight</li>\n  <li>offsetLeft</li>\n  <li>offsetParent</li>\n  <li>offsetTop</li>\n  <li>offsetWidth</li>\n  <li>outerText</li>\n  <li>scrollByLines</li>\n  <li>scrollByPages</li>\n  <li>scrollHeight</li>\n  <li>scrollIntoView</li>\n  <li>scrollIntoViewIfNeeded</li>\n  <li>scrollLeft</li>\n  <li>scrollTop</li>\n  <li>scrollWidth</li>\n</ul>\n\n<h4 id=\"mouseevent\">MouseEvent</h4>\n\n<ul class=\"-six-column\">\n  <li>layerX</li>\n  <li>layerY</li>\n  <li>offsetX</li>\n  <li>offsetY</li>\n</ul>\n\n<h4 id=\"window\">Window</h4>\n\n<ul class=\"-six-column\">\n  <li>getComputedStyle</li>\n  <li>scrollBy</li>\n  <li>scrollTo</li>\n  <li>scrollX</li>\n  <li>scrollY</li>\n</ul>\n\n<h4 id=\"frame-document--image\">Frame, Document &amp; Image</h4>\n\n<ul class=\"-six-column\">\n  <li>height</li>\n  <li>width</li>\n</ul>\n\n<h4 id=\"jquery\">jQuery</h4>\n\n<ul class=\"-six-column\">\n  <li>$.fn.offset</li>\n  <li>$.fn.offsetParent</li>\n  <li>$.fn.position</li>\n  <li>$.fn.scrollLeft</li>\n  <li>$.fn.scrollTop</li>\n  <li>$.fn.css(‘…’)</li>\n  <li>$.fn.text(‘…’)</li>\n  <li>$(‘:hidden’)</li>\n  <li>$(‘:contains’)</li>\n</ul>\n\n<h2 id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"http://www.kellegous.com/j/2013/01/26/layout-performance/\">http://www.kellegous.com/j/2013/01/26/layout-performance/</a></li>\n  <li><a href=\"https://gist.github.com/desandro/4657744\">https://gist.github.com/desandro/4657744</a></li>\n  <li><a href=\"http://stackoverflow.com/questions/17199958/why-does-setting-textcontent-cause-layout-thrashing\">http://stackoverflow.com/questions/17199958/why-does-setting-textcontent-cause-layout-thrashing</a></li>\n</ul>",
  "intro_html": "<p>These are CSS properties that will cause “layout thrashing”. Avoid changing them to prevent bottlenecks in your UI performance.</p>",
  "description_html": "",
  "tags": null,
  "updated": "2017-10-19"
},{
  "id": "sheets/Markup/markdown",
  "title": "Markdown",
  "url": "/sheets/Markup/markdown",
  "category": "Markup",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"reference\">Reference</h2>\n\n<h3 id=\"headers\">Headers</h3>\n\n<pre><code class=\"language-markdown\"># h1\n## h2\n### h3\n#### h4\n##### h5\n###### h6\n</code></pre>\n\n<pre><code class=\"language-markdown\">Header 1\n========\n</code></pre>\n\n<pre><code class=\"language-markdown\">Header 2\n--------\n</code></pre>\n\n<h3 id=\"emphasis\">Emphasis</h3>\n\n<pre><code class=\"language-markdown\">*italic*\n_italic_\n</code></pre>\n\n<pre><code class=\"language-markdown\">**bold**\n__bold__\n</code></pre>\n\n<pre><code class=\"language-markdown\">`code`\n</code></pre>\n\n<h3 id=\"lists\">Lists</h3>\n\n<pre><code class=\"language-markdown\">* Item 1\n* Item 2\n</code></pre>\n\n<pre><code class=\"language-markdown\">- Item 1\n- Item 2\n</code></pre>\n\n<pre><code class=\"language-markdown\">- [ ] Checkbox off\n- [x] Checkbox on\n</code></pre>\n\n<pre><code class=\"language-markdown\">1. Item 1\n2. Item 2\n</code></pre>\n\n<h3 id=\"links\">Links</h3>\n\n<pre><code class=\"language-markdown\">[link](http://google.com)\n</code></pre>\n\n<pre><code class=\"language-markdown\">[link][google]\n[google]: http://google.com\n</code></pre>\n\n<pre><code class=\"language-markdown\">&lt;http://google.com&gt;\n</code></pre>\n\n<h3 id=\"images\">Images</h3>\n\n<pre><code class=\"language-markdown\">![Image alt text](/path/to/img.jpg)\n![Image alt text](/path/to/img.jpg \"title\")\n![Image alt text][img]\n</code></pre>\n\n<pre><code class=\"language-markdown\">[img]: http://foo.com/img.jpg\n</code></pre>\n\n<h3 id=\"code\">Code</h3>\n\n<pre><code>    4 space indent\n    makes a code block\n</code></pre>\n\n<pre><code class=\"language-markdown\">```\ncode fences\n```\n</code></pre>\n\n<pre><code class=\"language-markdown\">```js\ncodeFences.withLanguage()\n```\n</code></pre>\n\n<h3 id=\"blockquotes\">Blockquotes</h3>\n\n<pre><code class=\"language-markdown\">&gt; This is\n&gt; a blockquote\n&gt;\n&gt; &gt; Nested\n&gt; &gt; Blockquote\n</code></pre>\n\n<h3 id=\"horizontal-line\">Horizontal line</h3>\n\n<pre><code class=\"language-markdown\">----\n</code></pre>\n\n<pre><code class=\"language-markdown\">****\n</code></pre>\n\n<h3 id=\"tables\">Tables</h3>\n\n<pre><code class=\"language-markdown\">| Column 1 Heading | Column 2 Heading |\n| ---------------- | ---------------- |\n| Some content     | Other content    |\n</code></pre>\n\n<pre><code class=\"language-markdown\">Column 1 Heading | Column 2 Heading\n--- | ---\nSome content | Other content\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-07-01"
},{
  "id": "sheets/Database/mysql",
  "title": "MySQL",
  "url": "/sheets/Database/mysql",
  "category": "Databases",
  "keywords": null,
  "content_html": "<h3 id=\"browsing\">Browsing</h3>\n\n<pre><code class=\"language-sql\">SHOW DATABASES;\nSHOW TABLES;\nSHOW FIELDS FROM table / DESCRIBE table;\nSHOW CREATE TABLE table;\nSHOW PROCESSLIST;\nKILL process_number;\n</code></pre>\n\n<h3 id=\"select\">Select</h3>\n\n<pre><code class=\"language-sql\">SELECT * FROM table;\nSELECT * FROM table1, table2;\nSELECT field1, field2 FROM table1, table2;\nSELECT ... FROM ... WHERE condition\nSELECT ... FROM ... WHERE condition GROUPBY field;\nSELECT ... FROM ... WHERE condition GROUPBY field HAVING condition2;\nSELECT ... FROM ... WHERE condition ORDER BY field1, field2;\nSELECT ... FROM ... WHERE condition ORDER BY field1, field2 DESC;\nSELECT ... FROM ... WHERE condition LIMIT 10;\nSELECT DISTINCT field1 FROM ...\nSELECT DISTINCT field1, field2 FROM ...\n</code></pre>\n\n<h3 id=\"select---join\">Select - Join</h3>\n\n<pre><code class=\"language-sql\">SELECT ... FROM t1 JOIN t2 ON t1.id1 = t2.id2 WHERE condition;\nSELECT ... FROM t1 LEFT JOIN t2 ON t1.id1 = t2.id2 WHERE condition;\nSELECT ... FROM t1 JOIN (t2 JOIN t3 ON ...) ON ...\n</code></pre>\n\n<h3 id=\"conditions\">Conditions</h3>\n\n<pre><code class=\"language-sql\">field1 = value1\nfield1 &lt;&gt; value1\nfield1 LIKE 'value _ %'\nfield1 IS NULL\nfield1 IS NOT NULL\nfield1 IS IN (value1, value2)\nfield1 IS NOT IN (value1, value2)\ncondition1 AND condition2\ncondition1 OR condition2\n</code></pre>\n\n<h3 id=\"create--open--delete-database\">Create / Open / Delete Database</h3>\n\n<pre><code class=\"language-sql\">CREATE DATABASE DatabaseName;\nCREATE DATABASE DatabaseName CHARACTER SET utf8;\nUSE DatabaseName;\nDROP DATABASE DatabaseName;\nALTER DATABASE DatabaseName CHARACTER SET utf8;\n</code></pre>\n\n<h3 id=\"backup-database-to-sql-file\">Backup Database to SQL File</h3>\n\n<pre><code class=\"language-bash\">mysqldump -u Username -p dbNameYouWant &gt; databasename_backup.sql\n</code></pre>\n\n<h3 id=\"restore-from-backup-sql-file\">Restore from backup SQL File</h3>\n\n<pre><code class=\"language-bash\">mysql - u Username -p dbNameYouWant &lt; databasename_backup.sql;\n</code></pre>\n\n<h3 id=\"repair-tables-after-unclean-shutdown\">Repair Tables After Unclean Shutdown</h3>\n\n<pre><code class=\"language-bash\">mysqlcheck --all-databases;\nmysqlcheck --all-databases --fast;\n</code></pre>\n\n<h3 id=\"insert\">Insert</h3>\n\n<pre><code class=\"language-sql\">INSERT INTO table1 (field1, field2) VALUES (value1, value2);\n</code></pre>\n\n<h3 id=\"delete\">Delete</h3>\n\n<pre><code class=\"language-sql\">DELETE FROM table1 / TRUNCATE table1\nDELETE FROM table1 WHERE condition\nDELETE FROM table1, table2 FROM table1, table2 WHERE table1.id1 =\n  table2.id2 AND condition\n</code></pre>\n\n<h3 id=\"update\">Update</h3>\n\n<pre><code class=\"language-sql\">UPDATE table1 SET field1=new_value1 WHERE condition;\nUPDATE table1, table2 SET field1=new_value1, field2=new_value2, ... WHERE\n  table1.id1 = table2.id2 AND condition;\n</code></pre>\n\n<h3 id=\"create--delete--modify-table\">Create / Delete / Modify Table</h3>\n\n<h4 id=\"create\">Create</h4>\n\n<pre><code class=\"language-sql\">CREATE TABLE table (field1 type1, field2 type2);\nCREATE TABLE table (field1 type1, field2 type2, INDEX (field));\nCREATE TABLE table (field1 type1, field2 type2, PRIMARY KEY (field1));\nCREATE TABLE table (field1 type1, field2 type2, PRIMARY KEY (field1,field2));\n</code></pre>\n\n<pre><code class=\"language-sql\">CREATE TABLE table1 (fk_field1 type1, field2 type2, ...,\n  FOREIGN KEY (fk_field1) REFERENCES table2 (t2_fieldA))\n    [ON UPDATE|ON DELETE] [CASCADE|SET NULL]\n</code></pre>\n\n<pre><code class=\"language-sql\">CREATE TABLE table1 (fk_field1 type1, fk_field2 type2, ...,\n FOREIGN KEY (fk_field1, fk_field2) REFERENCES table2 (t2_fieldA, t2_fieldB))\n</code></pre>\n\n<pre><code class=\"language-sql\">CREATE TABLE table IF NOT EXISTS;\n</code></pre>\n\n<pre><code class=\"language-sql\">CREATE TEMPORARY TABLE table;\n</code></pre>\n\n<h4 id=\"drop\">Drop</h4>\n\n<pre><code class=\"language-sql\">DROP TABLE table;\nDROP TABLE IF EXISTS table;\nDROP TABLE table1, table2, ...\n</code></pre>\n\n<h4 id=\"alter\">Alter</h4>\n\n<pre><code class=\"language-sql\">ALTER TABLE table MODIFY field1 type1\nALTER TABLE table MODIFY field1 type1 NOT NULL ...\nALTER TABLE table CHANGE old_name_field1 new_name_field1 type1\nALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 NOT NULL ...\nALTER TABLE table ALTER field1 SET DEFAULT ...\nALTER TABLE table ALTER field1 DROP DEFAULT\nALTER TABLE table ADD new_name_field1 type1\nALTER TABLE table ADD new_name_field1 type1 FIRST\nALTER TABLE table ADD new_name_field1 type1 AFTER another_field\nALTER TABLE table DROP field1\nALTER TABLE table ADD INDEX (field);\n</code></pre>\n\n<h4 id=\"change-field-order\">Change field order</h4>\n\n<pre><code class=\"language-sql\">ALTER TABLE table MODIFY field1 type1 FIRST\nALTER TABLE table MODIFY field1 type1 AFTER another_field\nALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 FIRST\nALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 AFTER\n  another_field\n</code></pre>\n\n<h3 id=\"keys\">Keys</h3>\n\n<pre><code class=\"language-sql\">CREATE TABLE table (..., PRIMARY KEY (field1, field2))\nCREATE TABLE table (..., FOREIGN KEY (field1, field2) REFERENCES table2\n(t2_field1, t2_field2))\n</code></pre>\n\n<h3 id=\"users-and-privileges\">Users and Privileges</h3>\n\n<pre><code class=\"language-sql\">CREATE USER 'user'@'localhost';\nGRANT ALL PRIVILEGES ON base.* TO 'user'@'localhost' IDENTIFIED BY 'password';\nGRANT SELECT, INSERT, DELETE ON base.* TO 'user'@'localhost' IDENTIFIED BY 'password';\nREVOKE ALL PRIVILEGES ON base.* FROM 'user'@'host'; -- one permission only\nREVOKE ALL PRIVILEGES, GRANT OPTION FROM 'user'@'host'; -- all permissions\nFLUSH PRIVILEGES;\n</code></pre>\n\n<pre><code class=\"language-sql\">SET PASSWORD = PASSWORD('new_pass');\nSET PASSWORD FOR 'user'@'host' = PASSWORD('new_pass');\nSET PASSWORD = OLD_PASSWORD('new_pass');\n</code></pre>\n\n<pre><code class=\"language-sql\">DROP USER 'user'@'host';\n</code></pre>\n\n<p>Host ‘%’ indicates any host.</p>\n\n<h3 id=\"main-data-types\">Main Data Types</h3>\n\n<pre><code class=\"language-sql\">TINYINT (1o: -217+128)\nSMALLINT (2o: +-65 000)\nMEDIUMINT (3o: +-16 000 000)\nINT (4o: +- 2 000 000 000)\nBIGINT (8o: +-9.10^18)\n</code></pre>\n\n<pre><code class=\"language-sql\">Precise interval: -(2^(8*N-1)) -&gt; (2^8*N)-1\n</code></pre>\n\n<p>⚠ INT(2) = “2 digits displayed” – NOT “number with 2 digits max”</p>\n\n<pre><code class=\"language-sql\">FLOAT(M,D)\nDOUBLE(M,D)\nFLOAT(D=0-&gt;53)\n</code></pre>\n\n<p>⚠ 8,3 -&gt; 12345,678 – NOT 12345678,123!</p>\n\n<pre><code class=\"language-sql\">TIME (HH:MM)\nYEAR (AAAA)\nDATE (AAAA-MM-JJ)\nDATETIME (AAAA-MM-JJ HH:MM; années 1000-&gt;9999)\nTIMESTAMP (like DATETIME, but 1970-&gt;2038, compatible with Unix)\n</code></pre>\n\n<pre><code class=\"language-sql\">VARCHAR (single-line; explicit size)\nTEXT (multi-lines; max size=65535)\nBLOB (binary; max size=65535)\n</code></pre>\n\n<p>Variants for TEXT&amp;BLOB: <code>TINY</code> (max=255), <code>MEDIUM</code> (max=~16000), and <code>LONG</code> (max=4Go). Ex: <code>VARCHAR(32)</code>, <code>TINYTEXT</code>, <code>LONGBLOB</code>, <code>MEDIUMTEXT</code></p>\n\n<pre><code class=\"language-sql\">ENUM ('value1', 'value2', ...) -- (default NULL, or '' if NOT NULL)\n</code></pre>\n\n<h3 id=\"reset-root-password\">Reset Root Password</h3>\n\n<pre><code class=\"language-bash\">$ /etc/init.d/mysql stop\n</code></pre>\n\n<pre><code class=\"language-bash\">$ mysqld_safe --skip-grant-tables\n</code></pre>\n\n<pre><code class=\"language-bash\">$ mysql # on another terminal\nmysql&gt; UPDATE mysql.user SET password=PASSWORD('new_pass') WHERE user='root';\n</code></pre>\n\n<pre><code class=\"language-bash\">## Switch back to the mysqld_safe terminal and kill the process using Control + \\\n$ /etc/init.d/mysql start\n</code></pre>\n\n<p>Your commands may vary depending on your OS.</p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-07-05"
},{
  "id": "sheets/Nodejs/nodejs-assert",
  "title": "assert",
  "url": "/sheets/Nodejs/nodejs-assert",
  "category": "Node.js",
  "keywords": null,
  "content_html": "<h3 id=\"assertions\">Assertions</h3>\n\n<pre><code class=\"language-js\">assert(val)\nassert.equal(actual, expected)\nassert.notEqual(a, e)\n</code></pre>\n\n<pre><code class=\"language-js\">assert.deepEqual(a, e)\nassert.notDeepEqual(a, e)\n</code></pre>\n\n<pre><code class=\"language-js\">assert.throws(fn)\n</code></pre>\n\n<h3 id=\"references\">References</h3>\n\n<ul>\n  <li>http://nodejs.org/api/assert.html</li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Nodejs/nodejs-fs",
  "title": "fs",
  "url": "/sheets/Nodejs/nodejs-fs",
  "category": "Node.js",
  "keywords": null,
  "content_html": "<h3 id=\"reading\">Reading</h3>\n\n<pre><code>fs.readFile('file.txt', function(err, data) { .. });\nfs.readFile('file.txt', {encoding: 'utf-8'}, function(err, data) { .. });\n</code></pre>\n\n<h3 id=\"writing\">Writing</h3>\n\n<pre><code>fs.writeFile('output.txt', function(err) { .. });\nfs.appendFile('output.txt', function(err) { .. });\n</code></pre>\n\n<h3 id=\"watch\">Watch</h3>\n\n<pre><code>fs.watch('dir OR file.txt', { persistent: true }, function(event, file) {\n  event; /* rename | change */\n});\n</code></pre>\n\n<h3 id=\"getting-info\">Getting info</h3>\n\n<pre><code>fs.exists('file.txt', function(exists /*bool*/) { ... });\n\nfs.stat('file.txt', function(stats) {\n  stats.isFile();\n  stats.isDirectory();\n  stats.isSymbolicLink();\n});\n</code></pre>\n\n<h3 id=\"file-operations\">File operations</h3>\n\n<pre><code>fs.rename('old.txt', 'new.txt', function(){});\nfs.chown('file.txt', uid, gid, function(){});\nfs.symlink('src', 'dest', function(){});\nfs.unlink('path', function(){});\nfs.rmdir('path', function(){});\n\nfs.readdir('path', function(err, files) { .. }); /* `files` = array of names */\n</code></pre>\n\n<h3 id=\"path\">Path</h3>\n\n<pre><code>fs.realpath('/etc/passwd', function(err, path) { /* \"/private/etc/passwd\" */ });\n</code></pre>\n\n<h3 id=\"sync\">Sync</h3>\n\n<pre><code>data = fs.readFileSync('input.txt');\nfs.writeFileSync('output.txt', data);\nfs.appendFileSync('output.txt', data);\nfs.existsSync('file.txt');\n</code></pre>\n\n<h3 id=\"references\">References</h3>\n\n<ul>\n  <li>http://nodejs.org/api/fs.html</li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Nodejs/nodejs-path",
  "title": "Node.js path API",
  "url": "/sheets/Nodejs/nodejs-path",
  "category": "Node.js",
  "keywords": null,
  "content_html": "<h3 id=\"functions\">Functions</h3>\n\n<pre><code class=\"language-js\">const fs = require('fs')\n\nfs.realpath('/etc/passwd', function (err, path) {\n  path // =&gt; \"/private/etc/passwd\"\n})\n</code></pre>\n\n<pre><code class=\"language-js\">const path = require('path')\ndir = path.join('etc', 'passwd')\ndir = path.resolve('/etc', 'passwd', '..', 'var')\n</code></pre>\n\n<pre><code class=\"language-js\">path.dirname('/etc/passwd') //      =&gt; \"/etc\"\npath.basename('/etc/passwd') //     =&gt; \"passwd\"\npath.basename('/etc/rc.d', '.d') // =&gt; \"rc\"\n</code></pre>\n\n<h3 id=\"references\">References</h3>\n\n<ul>\n  <li>https://nodejs.org/api/path.html</li>\n</ul>",
  "intro_html": "<p>Quick reference to the <a href=\"https://nodejs.org/api/path.html\">Node.js path API</a>.</p>",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Nodejs/nodejs-process",
  "title": "process",
  "url": "/sheets/Nodejs/nodejs-process",
  "category": "Node.js",
  "keywords": null,
  "content_html": "<h3 id=\"streams\">Streams</h3>\n\n<pre><code>process.stdout.write('...');\nprocess.stderr.write('...');\n\nfunction stdin(fn) {\n  var data = '';\n\n  process.stdin.setEncoding('utf8');\n  process.stdin.on('readable', function() {\n    var chunk = process.stdin.read();\n    if (chunk !== null) data += chunk;\n  });\n\n  process.stdin.on('end', function() {\n    fn(null, data);\n  });\n}\n</code></pre>\n\n<h3 id=\"stuff\">stuff</h3>\n\n<pre><code>process.argv; //=&gt; ['node', 'file.js', 'one', 'two']\nprocess.env; //=&gt; {TERM: 'screen-256color', SHELL: '/bin/bash', ...}\n\nprocess.exit();\nprocess.exit(1);\n</code></pre>\n\n<h3 id=\"directories\">Directories</h3>\n\n<pre><code>process.cwd(); //=&gt; \"/tmp\"\nprocess.chdir('dir');\n</code></pre>\n\n<h3 id=\"references\">References</h3>\n\n<ul>\n  <li>http://nodejs.org/api/process.html</li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Nodejs/nodejs-stream",
  "title": "Node.js streams",
  "url": "/sheets/Nodejs/nodejs-stream",
  "category": "Node.js",
  "keywords": null,
  "content_html": "<h3 id=\"types\">Types</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Stream</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>Readable</code></td>\n      <td>Data emitter</td>\n    </tr>\n    <tr>\n      <td><code>Writable</code></td>\n      <td>Data receiver</td>\n    </tr>\n    <tr>\n      <td><code>Transform</code></td>\n      <td>Emitter and receiver</td>\n    </tr>\n    <tr>\n      <td><code>Duplex</code></td>\n      <td>Emitter and receiver (independent)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"https://nodejs.org/api/stream.html#stream_stream\">Stream</a> <em>(nodejs.org)</em></p>\n\n<h3 id=\"streams\">Streams</h3>\n\n<pre><code class=\"language-js\">const Readable = require('stream').Readable\nconst Writable = require('stream').Writable\nconst Transform = require('stream').Transform\n</code></pre>\n\n<h3 id=\"piping\">Piping</h3>\n\n<pre><code class=\"language-js\">clock()              // Readable stream\n  .pipe(xformer())   // Transform stream\n  .pipe(renderer())  // Writable stream\n</code></pre>\n\n<h3 id=\"methods\">Methods</h3>\n\n<pre><code class=\"language-js\">stream.push(/*...*/)         // Emit a chunk\nstream.emit('error', error)  // Raise an error\nstream.push(null)            // Close a stream\n</code></pre>\n\n<h3 id=\"events\">Events</h3>\n\n<pre><code class=\"language-js\">const st = source()\nst.on('data', (data) =&gt; { console.log('&lt;-', data) })\nst.on('error', (err) =&gt; { console.log('!', err.message) })\nst.on('close', () =&gt; { console.log('** bye') })\nst.on('finish', () =&gt; { console.log('** bye') })\n</code></pre>\n\n<p>Assuming <code>source()</code> is a readable stream.</p>\n\n<h3 id=\"flowing-mode\">Flowing mode</h3>\n\n<pre><code class=\"language-js\">// Toggle flowing mode\nst.resume()\nst.pause()\n</code></pre>\n\n<pre><code class=\"language-js\">// Automatically turns on flowing mode\nst.on('data', /*...*/)\n</code></pre>\n\n<h2 class=\"-three-column\" id=\"stream-types\">Stream types</h2>\n\n<h3 id=\"readable\">Readable</h3>\n\n<pre><code class=\"language-js\">function clock () {\n  const stream = new Readable({\n    objectMode: true,\n    read() {}\n  })\n\n  setInterval(() =&gt; {\n    stream.push({ time: new Date() })\n  }, 1000)\n\n  return stream\n}\n\n// Implement read() if you\n// need on-demand reading.\n</code></pre>\n\n<p>Readable streams are generators of data. Write data using <code>stream.push()</code>.</p>\n\n<h3 id=\"transform\">Transform</h3>\n\n<pre><code class=\"language-js\">function xformer () {\n  let count = 0\n\n  return new Transform({\n    objectMode: true,\n    transform: (data, _, done) =&gt; {\n      done(null, { ...data, index: count++ })\n    }\n  })\n}\n</code></pre>\n\n<p>Pass the updated chunk to <code>done(null, chunk)</code>.</p>\n\n<h3 id=\"writable\">Writable</h3>\n\n<pre><code class=\"language-js\">function renderer () {\n  return new Writable({\n    objectMode: true,\n    write: (data, _, done) =&gt; {\n      console.log('&lt;-', data)\n      done()\n    }\n  })\n}\n</code></pre>\n\n<h3 id=\"all-together-now\">All together now</h3>\n\n<pre><code class=\"language-js\">clock()              // Readable stream\n  .pipe(xformer())   // Transform stream\n  .pipe(renderer())  // Writable stream\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"https://nodejs.org/api/stream.html\">https://nodejs.org/api/stream.html</a></li>\n  <li><a href=\"https://github.com/substack/stream-handbook\">https://github.com/substack/stream-handbook</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2017-08-30"
},{
  "id": "sheets/Nodejs/nodejs",
  "title": "Node.js API",
  "url": "/sheets/Nodejs/nodejs",
  "category": "Node.js",
  "keywords": null,
  "content_html": "<h2 id=\"globals\">Globals</h2>\n\n<pre><code>__filename\n__dirname\n</code></pre>\n\n<h3 id=\"exec\">exec</h3>\n\n<pre><code>var exec = require('child_process').exec,\n\nvar child = exec('cat *.js bad_file | wc -l',\n  function (error, stdout, stderr) {\n    console.log('stdout: ' + stdout);\n    console.log('stderr: ' + stderr);\n    if (error !== null) {\n      console.log('exec error: ' + error);\n    }\n});\n</code></pre>\n\n<h2 id=\"snippets\">Snippets</h2>\n\n<pre><code>info = require('../package.json')\ninfo.version\n\nprocess.stdout.write(util.inspect(objekt, false, Infinity, true) + '\\n');\n</code></pre>\n\n<h2 id=\"spawn---passthru-the-inout\">Spawn - passthru the in/out</h2>\n\n<pre><code>var spawn = require('child_process').spawn;\nvar proc = spawn(bin, argv, { stdio: 'inherit' });\nproc.on('error', function(err) {\n  if (err.code == \"ENOENT\") { \"does not exist\" }\n  if (err.code == \"EACCES\") { \"not executable\" }\n});\nproc.on('exit', function(code) { ... });\n\n// also { stdio: ['pipe', 'pipe', process.stdout] }\n// also { stdio: [process.stdin, process.stderr, process.stdout] }\n\nproc.stdout.on('data', function (data) {\n});\nproc.stderr.on('data', function (data) {\n});\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/JavaScript/npm",
  "title": "npm",
  "url": "/sheets/JavaScript/npm",
  "category": "JavaScript",
  "keywords": null,
  "content_html": "<h3 id=\"package-management\">Package management</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>npm i</code></td>\n      <td>Alias for <code>npm install</code></td>\n    </tr>\n    <tr>\n      <td><code>npm install</code></td>\n      <td>Install everything in package.json</td>\n    </tr>\n    <tr>\n      <td><code>npm install --production</code></td>\n      <td>Install everything in package.json, except devDependecies</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>npm install lodash</code></td>\n      <td>Install a package</td>\n    </tr>\n    <tr>\n      <td><code>npm install --save-dev lodash</code></td>\n      <td>Install as devDependency</td>\n    </tr>\n    <tr>\n      <td><code>npm install --save-exact lodash</code></td>\n      <td>Install with exact</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><code>--save</code> is the default as of npm@5. Previously, using <code>npm install</code> without <code>--save</code> doesn’t update package.json.</p>\n\n<h3 id=\"install-names\">Install names</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>npm i sax</code></td>\n      <td>NPM package</td>\n    </tr>\n    <tr>\n      <td><code>npm i sax@latest</code></td>\n      <td>Specify tag <code>latest</code></td>\n    </tr>\n    <tr>\n      <td><code>npm i sax@3.0.0</code></td>\n      <td>Specify version <code>3.0.0</code></td>\n    </tr>\n    <tr>\n      <td><code>npm i sax@\"&gt;=1 &lt;2.0\"</code></td>\n      <td>Specify version range</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>npm i @org/sax</code></td>\n      <td>Scoped NPM package</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>npm i user/repo</code></td>\n      <td>GitHub</td>\n    </tr>\n    <tr>\n      <td><code>npm i user/repo#master</code></td>\n      <td>GitHub</td>\n    </tr>\n    <tr>\n      <td><code>npm i github:user/repo</code></td>\n      <td>GitHub</td>\n    </tr>\n    <tr>\n      <td><code>npm i gitlab:user/repo</code></td>\n      <td>GitLab</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>npm i /path/to/repo</code></td>\n      <td>Absolute path</td>\n    </tr>\n    <tr>\n      <td><code>npm i ./archive.tgz</code></td>\n      <td>Tarball</td>\n    </tr>\n    <tr>\n      <td><code>npm i https://site.com/archive.tgz</code></td>\n      <td>Tarball via HTTP</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"listing\">Listing</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>npm list</code></td>\n      <td>Lists the installed versions of all dependencies in this software</td>\n    </tr>\n    <tr>\n      <td><code>npm list -g --depth 0</code></td>\n      <td>Lists the installed versions of all globally installed packages</td>\n    </tr>\n    <tr>\n      <td><code>npm view</code></td>\n      <td>Lists the latest versions of all dependencies in this software</td>\n    </tr>\n    <tr>\n      <td><code>npm outdated</code></td>\n      <td>Lists only the dependencies in this software which are outdated</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"updating\">Updating</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>npm update</code></td>\n      <td>Update production packages</td>\n    </tr>\n    <tr>\n      <td><code>npm update --dev</code></td>\n      <td>Update dev packages</td>\n    </tr>\n    <tr>\n      <td><code>npm update -g</code></td>\n      <td>Update global packages</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>npm update lodash</code></td>\n      <td>Update a package</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"misc-features\">Misc features</h3>\n\n<pre><code class=\"language-bash\"># Add someone as an owner\nnpm owner add USERNAME PACKAGENAME\n</code></pre>\n\n<pre><code class=\"language-bash\"># list packages\nnpm ls\n</code></pre>\n\n<pre><code class=\"language-bash\"># Adds warning to those that install a package of old versions\nnpm deprecate PACKAGE@\"&lt; 0.2.0\" \"critical bug fixed in v0.2.0\"\n</code></pre>\n\n<pre><code class=\"language-bash\"># update all packages, or selected packages\nnpm update [-g] PACKAGE\n</code></pre>\n\n<pre><code class=\"language-bash\"># Check for outdated packages\nnpm outdated [PACKAGE]\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2019-12-24"
},{
  "id": "sheets/Nodejs/package-json",
  "title": "package.json",
  "url": "/sheets/Nodejs/package-json",
  "category": "Node.js",
  "keywords": null,
  "content_html": "<h3 id=\"basic\">Basic</h3>\n\n<pre data-line=\"2,3,4,5\"><code class=\"language-json\">{\n  \"name\": \"expo\",\n  \"description\": \"My package\",\n  \"version\": \"0.1.0\",\n  \"license\": \"MIT\",\n  \"keywords\": [\"http\", \"server\"],\n  \"author\": \"Rico Sta. Cruz &lt;rstacruz@users.noreply.github.com&gt;\",\n  \"engines\": {\n    \"node\": \"&gt;=0.8.0\"\n  },\n  \"main\": \"index\",\n  \"bin\": {\n    \"command\": \"./bin/command\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/rstacruz/___.git\"\n  },\n}\n</code></pre>\n\n<p>Highlighted lines are required.</p>\n\n<h3 id=\"dependencies\">Dependencies</h3>\n\n<pre><code class=\"language-json\">\"dependencies\": {\n  \"colors\":   \"*\",\n  \"flatiron\": \"0.1.x\",\n  \"flatiron\": \"~0.1.0\",\n  \"plates\":   \"https://github.com/user/project/tarball/branch\",\n  \"stuff\":    \"git://github.com/user/project.git#commit-ish\"\n},\n</code></pre>\n\n<pre><code class=\"language-json\">\"devDependencies\": { ··· },\n\"peerDependencies\": { ··· },\n\"optionalDependencies\": { ··· },\n</code></pre>\n\n<p>See <a href=\"./semver\">Semver cheatsheet</a> for explanation of version ranges.</p>\n\n<h3 id=\"scripts\">Scripts</h3>\n\n<pre><code class=\"language-json\">\"scripts\": {\n  \"start\": \"node ./bin/xxx\",       /* npm start */\n  \"test\": \"vows --spec --isolate\", /* npm test */\n  \"postinstall\": \"...\",\n  \"prepublish\": \"grunt build\",     /* after 'npm install' and before 'npm \n                                      publish' */\n}\n</code></pre>\n\n<h3 id=\"misc\">Misc</h3>\n\n<pre><code class=\"language-json\">\"private\": true,\n\"preferGlobal\": true\n</code></pre>\n\n<h3 id=\"config\">Config</h3>\n\n<pre><code class=\"language-json\">{\n  \"config\": {\n    \"foobar\": \"hello\"\n  },\n  \"scripts\": {\n    \"run\": \"echo $npm_package_config_foobar\"\n  }\n}\n</code></pre>\n\n<p>Keys in <code>config</code> are exposed as env vars to scripts.</p>\n\n<h2 class=\"-one-column\" id=\"references\">References</h2>\n\n<ul class=\"-also-see\">\n  <li><a href=\"http://package.json.nodejitsu.com/\">http://package.json.nodejitsu.com/</a></li>\n  <li><code>npm help package.json</code></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-06-23"
},{
  "id": "sheets/Php/php",
  "title": "PHP",
  "url": "/sheets/Php/php",
  "category": "PHP",
  "keywords": null,
  "content_html": "<h3 id=\"hello-world\">Hello world</h3>\n\n<h4 id=\"hellophp\">hello.php</h4>\n\n<pre><code class=\"language-php\">&lt;?php\nfunction greetMe($name) {\n  return \"Hello, \" . $name . \"!\";\n}\n\n$message = greetMe($name);\necho $message;\n</code></pre>\n\n<p>All PHP files start with <code>&lt;?php</code>.</p>\n\n<p>See: <a href=\"http://php.net/manual/en/language.basic-syntax.phptags.php\">PHP tags</a></p>\n\n<h3 id=\"objects\">Objects</h3>\n\n<pre><code class=\"language-php\">&lt;?php\n\n$fruitsArray = array(\n  \"apple\" =&gt; 20,\n  \"banana\" =&gt; 30\n);\necho $fruitsArray['banana'];\n</code></pre>\n\n<p>Or cast as object</p>\n\n<pre><code class=\"language-php\">&lt;?php\n\n$fruitsObject = (object) $fruits;\necho $fruitsObject-&gt;banana;\n</code></pre>\n\n<h3 id=\"inspecting-objects\">Inspecting objects</h3>\n\n<pre><code class=\"language-php\">&lt;?php\nvar_dump($object)\n</code></pre>\n\n<p>Prints the contents of a variable for inspection.</p>\n\n<p>See: <a href=\"http://php.net/var_dump\">var_dump</a></p>\n\n<h3 id=\"classes\">Classes</h3>\n\n<pre><code class=\"language-php\">class Person {\n    public $name = '';\n}\n\n$person = new Person();\n$person-&gt;name = 'bob';\n\necho $person-&gt;name;\n</code></pre>\n\n<h3 id=\"getters-and-setters\">Getters and setters</h3>\n\n<pre><code class=\"language-php\">class Person \n{\n    public $name = '';\n\n    public function getName()\n    {\n        return $this-&gt;name;\n    }\n\n    public function setName($name)\n    {\n        $this-&gt;name = $name;\n        return $this;\n    }\n}\n\n$person = new Person();\n$person-&gt;setName('bob');\n\necho $person-&gt;getName();\n</code></pre>\n\n<h3 id=\"isset-vs-empty\">isset vs empty</h3>\n<pre><code class=\"language-php\">\n$options = [\n  'key' =&gt; 'value',\n  'blank' =&gt; '',\n  'nothing' =&gt; null,\n];\n\nvar_dump(isset($options['key']), empty($options['key'])); // true, false\nvar_dump(isset($options['blank']), empty($options['blank'])); // true, true\nvar_dump(isset($options['nothing']), empty($options['nothing'])); // false, true\n\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/CLI/pm2",
  "title": "pm2",
  "url": "/sheets/CLI/pm2",
  "category": "CLI",
  "keywords": null,
  "content_html": "<h3 id=\"fork-mode\">Fork mode</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>pm2 start app.js --name my-api</code></td>\n      <td>Start and name a process</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"cluster-mode\">Cluster mode</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>pm2 start app.js -i 0</code></td>\n      <td>Will start maximum processes with LB depending on available CPUs</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"listing\">Listing</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>pm2 list</code></td>\n      <td>Display all processes status</td>\n    </tr>\n    <tr>\n      <td><code>pm2 jlist</code></td>\n      <td>Print process list in raw JSON</td>\n    </tr>\n    <tr>\n      <td><code>pm2 prettylist</code></td>\n      <td>Print process list in beautified JSON</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>pm2 describe 0</code></td>\n      <td>Display all information about a specific process</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>pm2 monit</code></td>\n      <td>Monitor all processes</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"logs\">Logs</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>pm2 logs [--raw]</code></td>\n      <td>Display all processes logs in streaming</td>\n    </tr>\n    <tr>\n      <td><code>pm2 flush</code></td>\n      <td>Empty all log files</td>\n    </tr>\n    <tr>\n      <td><code>pm2 reloadLogs</code></td>\n      <td>Reload all logs</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"actions\">Actions</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>pm2 stop all</code></td>\n      <td>Stop all processes</td>\n    </tr>\n    <tr>\n      <td><code>pm2 restart all</code></td>\n      <td>Restart all processes</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>pm2 reload all</code></td>\n      <td>Will 0s downtime reload (for NETWORKED apps)</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>pm2 stop 0</code></td>\n      <td>Stop specific process id</td>\n    </tr>\n    <tr>\n      <td><code>pm2 restart 0</code></td>\n      <td>Restart specific process id</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>pm2 delete 0</code></td>\n      <td>Will remove process from pm2 list</td>\n    </tr>\n    <tr>\n      <td><code>pm2 delete all</code></td>\n      <td>Will remove all processes from pm2 list</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>pm2 save</code></td>\n      <td>Save processes list to respawn at reboot</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"misc\">Misc</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>pm2 reset &lt;process&gt;</code></td>\n      <td>Reset meta data (restarted time…)</td>\n    </tr>\n    <tr>\n      <td><code>pm2 updatePM2</code></td>\n      <td>Update in memory pm2</td>\n    </tr>\n    <tr>\n      <td><code>pm2 ping</code></td>\n      <td>Ensure pm2 daemon has been launched</td>\n    </tr>\n    <tr>\n      <td><code>pm2 sendSignal SIGUSR2 my-app</code></td>\n      <td>Send system signal to script</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>pm2 start app.js --no-daemon</code></td>\n      <td>Run pm2 daemon in the foreground if it doesn’t exist already</td>\n    </tr>\n    <tr>\n      <td><code>pm2 start app.js --no-vizion</code></td>\n      <td>Skip vizion features (versioning control)</td>\n    </tr>\n    <tr>\n      <td><code>pm2 start app.js --no-autorestart</code></td>\n      <td>Do not automatically restart app</td>\n    </tr>\n  </tbody>\n</table>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-05-08"
},{
  "id": "sheets/JavaScript/promise",
  "title": "Promises",
  "url": "/sheets/JavaScript/promise",
  "category": "JavaScript",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"reference\">Reference</h2>\n\n<h3 class=\"-intro\" id=\"introduction\">Introduction</h3>\n\n<p>intro: A quick reference to the JavaScript <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise API</a>.</p>\n\n<ul>\n  <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises\">Using Promises guide</a> <em>(developer.mozilla.org)</em></li>\n  <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise documentation</a> <em>(developer.mozilla.org)</em></li>\n</ul>\n\n<h3 id=\"creating-promises\">Creating promises</h3>\n\n<pre><code class=\"language-js\">new Promise((resolve, reject) =&gt; {\n  doStuff(() =&gt; {\n    if (success) {\n      resolve('good')\n    } else {\n      reject(new Error('oops'))\n    }\n  })\n})\n</code></pre>\n\n<p>Use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise#Contstructor\">new Promise</a> to create new promises.</p>\n\n<h3 id=\"consuming-promises\">Consuming promises</h3>\n\n<pre><code class=\"language-js\">promise\n  .then((result) =&gt; {\n    /* success */\n  })\n  .catch((error) =&gt; {\n    /* failure */\n  })\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then\">then()</a> runs a function when a promise resolves. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch\">catch()</a> runs when a promise fails.</p>\n\n<h3 id=\"multiple-promises\">Multiple promises</h3>\n\n<pre><code class=\"language-js\">const promises = [promise1(), promise2() /* ... */]\n</code></pre>\n\n<pre><code class=\"language-js\">// Succeeds when all succeed\nPromise.all(promises).then((results) =&gt; {\n  /* ... */\n})\n</code></pre>\n\n<pre><code class=\"language-js\">// Succeeds when one finishes first\nPromise.race(promises).then((result) =&gt; {\n  /* ... */\n})\n</code></pre>\n\n<h3 id=\"converting-other-promises\">Converting other promises</h3>\n\n<pre><code class=\"language-js\">return Promise.resolve('result')\nreturn Promise.resolve(promise)\nreturn Promise.resolve(thenable)\n\nreturn Promise.reject('reason')\n\nPromise.resolve(result).then(() =&gt; {\n  /* ... */\n})\n</code></pre>\n\n<p><code>Promise.resolve(val)</code> will return a promise that resolves to the value given to it.</p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/Python/python",
  "title": "Python",
  "url": "/sheets/Python/python",
  "category": "Python",
  "keywords": null,
  "content_html": "<h3 id=\"lists\">Lists</h3>\n\n<pre><code>list = []\nlist[i:j]  # returns list subset\nlist[-1]   # returns last element\nlist[:-1]  # returns all but the last element\n\nlist[i] = val\nlist[i:j] = otherlist  # replace ith to jth-1 elements with otherlist\ndel list[i:j]\n\nlist.append(item)\nlist.extend(another_list)\nlist.insert(index, item)\nlist.pop()        # returns and removes last element from the list\nlist.pop(i)       # returns and removes i-th element from the list\nlist.remove(i)    # removes the first item from the list whose value is i\nlist1 + list2     # combine two list    \nset(list)         # remove duplicate elements from a list\n\nlist.reverse()    # reverses the elements of the list in-place\nlist.count(item)\nsum(list)\n\nzip(list1, list2)  # returns list of tuples with n-th element of both list1 and list2\nlist.sort()        # sorts in-place, returns None\nsorted(list)       # returns sorted copy of list\n\",\".join(list)     # returns a string with list elements seperated by comma\n</code></pre>\n\n<h3 id=\"dict\">Dict</h3>\n\n<pre><code>dict.keys()\ndict.values()\n\"key\" in dict    # let's say this returns False, then...\ndict[\"key\"]      # ...this raises KeyError\ndict.get(\"key\")  # ...this returns None\ndict.setdefault(\"key\", 1)\n</code></pre>\n\n<h3 id=\"iteration\">Iteration</h3>\n\n<pre><code>for item in [\"a\", \"b\", \"c\"]:\nfor i in range(4):        # 0 to 3\nfor i in range(4, 8):     # 4 to 7\nfor i in range(1, 9, 2):  # 1, 3, 5, 7\nfor key, val in dict.items():\nfor index, item in enumerate(list):\n</code></pre>\n\n<h3 id=\"string\"><a href=\"https://docs.python.org/2/library/stdtypes.html#string-methods\">String</a></h3>\n\n<pre><code>str[0:4]\nlen(str)\n\nstring.replace(\"-\", \" \")\n\",\".join(list)\n\"hi {0}\".format('j')\nf\"hi {name}\" # same as \"hi {}\".format('name')\nstr.find(\",\")\nstr.index(\",\")   # same, but raises IndexError\nstr.count(\",\")\nstr.split(\",\")\n\nstr.lower()\nstr.upper()\nstr.title()\n\nstr.lstrip()\nstr.rstrip()\nstr.strip()\n\nstr.islower()\n\n/* escape characters */\n&gt;&gt;&gt; 'doesn\\'t'  # use \\' to escape the single quote...\n    \"doesn't\"\n&gt;&gt;&gt; \"doesn't\"  # ...or use double quotes instead\n    \"doesn't\"\n&gt;&gt;&gt; '\"Yes,\" they said.'\n    '\"Yes,\" they said.'\n&gt;&gt;&gt; \"\\\"Yes,\\\" they said.\"\n    '\"Yes,\" they said.'\n&gt;&gt;&gt; '\"Isn\\'t,\" they said.'\n    '\"Isn\\'t,\" they said.'\n</code></pre>\n\n<h3 id=\"casting\">Casting</h3>\n\n<pre><code>int(str)\nfloat(str)\nstr(int)\nstr(float)\n'string'.encode()\n</code></pre>\n\n<h3 id=\"comprehensions\">Comprehensions</h3>\n\n<pre><code>[fn(i) for i in list]            # .map\nmap(fn, list)                    # .map, returns iterator\n\nfilter(fn, list)                 # .filter, returns iterator\n[fn(i) for i in list if i &gt; 0]   # .filter.map\n</code></pre>\n\n<h3 id=\"regex\">Regex</h3>\n\n<pre><code>import re\n\nre.match(r'^[aeiou]', str)\nre.sub(r'^[aeiou]', '?', str)\nre.sub(r'(xyz)', r'\\1', str)\n\nexpr = re.compile(r'^...$')\nexpr.match(...)\nexpr.sub(...)\n</code></pre>\n\n<h2 id=\"file-manipulation\">File manipulation</h2>\n\n<h3 id=\"reading\">Reading</h3>\n\n<pre><code class=\"language-py\">file = open(\"hello.txt\", \"r\") # open in read mode 'r'\nfile.close() \n</code></pre>\n\n<pre><code class=\"language-py\">print(file.read())  # read the entire file and set the cursor at the end of file\nprint file.readline() # Reading one line\nfile.seek(0, 0) # place the cursor at the beggining of the file\n</code></pre>\n\n<h3 id=\"writing-overwrite\">Writing (overwrite)</h3>\n\n<pre><code class=\"language-py\">file = open(\"hello.txt\", \"w\") # open in write mode 'w'\nfile.write(\"Hello World\") \n\ntext_lines = [\"First line\", \"Second line\", \"Last line\"] \nfile.writelines(text_lines)\n\nfile.close()\n</code></pre>\n\n<h3 id=\"writing-append\">Writing (append)</h3>\n\n<pre><code class=\"language-py\">file = open(\"Hello.txt\", \"a\") # open in append mode\nfile.write(\"Hello World again\")  \nfile.close()\n</code></pre>\n\n<h3 id=\"context-manager\">Context manager</h3>\n\n<pre><code class=\"language-py\">with open(\"welcome.txt\", \"r\") as file:\n    # 'file' refers directly to \"welcome.txt\"\n   data = file.read()\n\n# It closes the file automatically at the end of scope, no need for `file.close()`.\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/React/react-router",
  "title": "React-router",
  "url": "/sheets/React/react-router",
  "category": "React",
  "keywords": null,
  "content_html": "<h3 id=\"basic\">Basic</h3>\n\n<pre><code class=\"language-js\">import { default as Router, Route } from 'react-router'\n\nconst routes = (\n  &lt;Route&gt;\n    &lt;Route path='*' handler={RootView} /&gt;\n  &lt;/Route&gt;\n)\n\nRouter.run(routes, Router.HashLocation, (Root) =&gt; {\n  React.render(&lt;Root /&gt;, document.getElementById('all'))\n})\n</code></pre>\n\n<h3 id=\"nesting\">Nesting</h3>\n\n<pre><code class=\"language-js\">const routes = (\n  &lt;Route handler={Chrome}&gt;\n    &lt;Route path='about' handler={About} /&gt;\n    &lt;Route path='inbox' handler={Inbox} /&gt;\n    &lt;Route path='messages/:id' handler={Message} /&gt;\n  &lt;/Route&gt;\n)\n\nimport { RouteHandler } from 'react-router'\n\nconst Chrome = React.createClass({\n  render () {\n    return (\n      &lt;div&gt;\n        &lt;h1&gt;App&lt;/h1&gt;\n        &lt;RouteHandler /&gt;\n      &lt;/div&gt;\n    )\n  }\n})\n</code></pre>\n\n<h3 id=\"url-params\">URL params</h3>\n\n<pre><code class=\"language-js\">var Message = React.createClass({\n  componentDidMount: function () {\n    // from the path `/inbox/messages/:id`\n    var id = this.props.params.id\n    ...\n</code></pre>\n\n<h3 id=\"link\">Link</h3>\n\n<pre><code class=\"language-js\">import { Link } from 'react-router'\n\n&lt;!-- make a named route `user` --&gt;\n&lt;Link to='user' params={{userId: 10}} /&gt;\n\n&lt;Link to='login'\n  activeClassName='-active'\n  onClick='...'&gt;\n\n</code></pre>\n\n<h3 id=\"other-config\">Other config</h3>\n\n<pre><code class=\"language-js\">&lt;Route path='/'&gt;\n  &lt;DefaultRoute handler={Home} /&gt;\n  &lt;NotFoundRoute handler={NotFound} /&gt;\n  \n  &lt;Redirect from='login' to='sessions/new' /&gt;\n  &lt;Redirect from='login' to='sessions/new' params={{from: 'home'}} /&gt;\n  &lt;Redirect from='profile/:id' to='about-user' /&gt;\n\n  &lt;Route name='about-user' ... /&gt;\n</code></pre>\n\n<h3 id=\"routercreate\">Router.create</h3>\n\n<pre><code class=\"language-js\">var router = Router.create({\n  routes: &lt;Route&gt;...&lt;/Route&gt;,\n  location: Router.HistoryLocation\n})\n\nrouter.run((Root) =&gt; { ... })\n</code></pre>\n\n<h3 id=\"navigation\">Navigation</h3>\n\n<pre><code class=\"language-js\">import { Navigation } from 'react-router'\n\nReact.createClass({\n  mixins: [ Navigation ], ...\n})\n\nthis\n  .transitionTo('user', {id: 10})\n  .transitionTo('/path')\n  .transitionTo('http://...')\n  .replaceWith('about')\n  .makePath('about') // return URL\n  .makeHref('about') // return URL\n  .goBack()\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/React/react",
  "title": "React.js",
  "url": "/sheets/React/react",
  "category": "React",
  "keywords": ["React.Component","render()","componentDidMount()","props/state","dangerouslySetInnerHTML"],
  "content_html": "<h2 class=\"-three-column\" id=\"components\">Components</h2>\n\n<h3 class=\"-prime\" id=\"components-1\">Components</h3>\n\n<pre class=\"-setup\"><code class=\"language-jsx\">import React from 'react'\nimport ReactDOM from 'react-dom'\n</code></pre>\n\n<pre><code class=\"language-jsx\">class Hello extends React.Component {\n  render () {\n    return &lt;div className='message-box'&gt;\n      Hello {this.props.name}\n    &lt;/div&gt;\n  }\n}\n</code></pre>\n\n<pre><code class=\"language-jsx\">const el = document.body\nReactDOM.render(&lt;Hello name='John' /&gt;, el)\n</code></pre>\n\n<p>Use the <a href=\"http://jsfiddle.net/reactjs/69z2wepo/\">React.js jsfiddle</a> to start hacking. (or the unofficial <a href=\"http://jsbin.com/yafixat/edit?js,output\">jsbin</a>)</p>\n\n<h3 class=\"-prime\" id=\"import-multiple-exports\">Import multiple exports</h3>\n\n<pre class=\"-setup\"><code class=\"language-jsx\">import React, {Component} from 'react'\nimport ReactDOM from 'react-dom'\n</code></pre>\n\n<pre><code class=\"language-jsx\">class Hello extends Component {\n  ...\n}\n</code></pre>\n\n<h3 id=\"properties\">Properties</h3>\n\n<pre class=\"-setup\"><code class=\"language-html\">&lt;Video fullscreen={true} autoplay={false} /&gt;\n</code></pre>\n\n<pre data-line=\"2,3\"><code class=\"language-jsx\">render () {\n  this.props.fullscreen\n  const { fullscreen, autoplay } = this.props\n  ···\n}\n</code></pre>\n\n<p>Use <code>this.props</code> to access properties passed to the component.</p>\n\n<p>See: <a href=\"https://reactjs.org/docs/tutorial.html#using-props\">Properties</a></p>\n\n<h3 id=\"states\">States</h3>\n\n<pre><code class=\"language-jsx\">constructor(props) {\n  super(props)\n  this.state = { username: undefined }\n}\n</code></pre>\n\n<pre><code class=\"language-jsx\">this.setState({ username: 'rstacruz' })\n</code></pre>\n\n<pre data-line=\"2,3\"><code class=\"language-jsx\">render () {\n  this.state.username\n  const { username } = this.state\n  ···\n}\n</code></pre>\n\n<p>Use states (<code>this.state</code>) to manage dynamic data.</p>\n\n<p>With <a href=\"https://babeljs.io/\">Babel</a> you can use <a href=\"https://github.com/tc39/proposal-class-fields\">proposal-class-fields</a> and get rid of constructor</p>\n\n<pre><code class=\"language-jsx\">class Hello extends Component {\n  state = { username: undefined };\n  ...\n}\n</code></pre>\n\n<p>See: <a href=\"https://reactjs.org/docs/tutorial.html#reactive-state\">States</a></p>\n\n<h3 id=\"nesting\">Nesting</h3>\n\n<pre><code class=\"language-jsx\">class Info extends Component {\n  render () {\n    const { avatar, username } = this.props\n\n    return &lt;div&gt;\n      &lt;UserAvatar src={avatar} /&gt;\n      &lt;UserProfile username={username} /&gt;\n    &lt;/div&gt;\n  }\n}\n</code></pre>\n<p>As of React v16.2.0, fragments can be used to return multiple children without adding extra wrapping nodes to the DOM.</p>\n\n<pre><code class=\"language-jsx\">import React, {\n  Component,\n  Fragment\n} from 'react'\n\nclass Info extends Component {\n  render () {\n    const { avatar, username } = this.props\n\n    return (\n      &lt;Fragment&gt;\n        &lt;UserAvatar src={avatar} /&gt;\n        &lt;UserProfile username={username} /&gt;\n      &lt;/Fragment&gt;\n    )\n  }\n}\n</code></pre>\n\n<p data-line=\"5,6,7,8,9,10\">Nest components to separate concerns.</p>\n\n<p>See: <a href=\"https://reactjs.org/docs/components-and-props.html#composing-components\">Composing Components</a></p>\n\n<h3 id=\"children\">Children</h3>\n\n<pre data-line=\"2\"><code class=\"language-jsx\">&lt;AlertBox&gt;\n  &lt;h1&gt;You have pending notifications&lt;/h1&gt;\n&lt;/AlertBox&gt;\n</code></pre>\n\n<pre data-line=\"4\"><code class=\"language-jsx\">class AlertBox extends Component {\n  render () {\n    return &lt;div className='alert-box'&gt;\n      {this.props.children}\n    &lt;/div&gt;\n  }\n}\n</code></pre>\n\n<p>Children are passed as the <code>children</code> property.</p>\n\n<h2 id=\"defaults\">Defaults</h2>\n\n<h3 id=\"setting-default-props\">Setting default props</h3>\n\n<pre data-line=\"1\"><code class=\"language-jsx\">Hello.defaultProps = {\n  color: 'blue'\n}\n</code></pre>\n\n<p>See: <a href=\"https://reactjs.org/docs/react-component.html#defaultprops\">defaultProps</a></p>\n\n<h3 id=\"setting-default-state\">Setting default state</h3>\n\n<pre data-line=\"4\"><code class=\"language-jsx\">class Hello extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { visible: true }\n  }\n}\n</code></pre>\n\n<p>Set the default state in the <code>constructor()</code>.</p>\n\n<p>And without constructor using <a href=\"https://babeljs.io/\">Babel</a> with <a href=\"https://github.com/tc39/proposal-class-fields\">proposal-class-fields</a>.</p>\n\n<pre data-line=\"2\"><code class=\"language-jsx\">class Hello extends Component {\n  state = { visible: true }\n}\n</code></pre>\n\n<p>See: <a href=\"https://reactjs.org/docs/react-without-es6.html#setting-the-initial-state\">Setting the default state</a></p>\n\n<h2 class=\"-three-column\" id=\"other-components\">Other components</h2>\n\n<h3 id=\"functional-components\">Functional components</h3>\n\n<pre data-line=\"1\"><code class=\"language-jsx\">function MyComponent ({ name }) {\n  return &lt;div className='message-box'&gt;\n    Hello {name}\n  &lt;/div&gt;\n}\n</code></pre>\n\n<p>Functional components have no state. Also, their <code>props</code> are passed as the first parameter to a function.</p>\n\n<p>See: <a href=\"https://reactjs.org/docs/components-and-props.html#functional-and-class-components\">Function and Class Components</a></p>\n\n<h3 id=\"pure-components\">Pure components</h3>\n\n<pre data-line=\"3\"><code class=\"language-jsx\">import React, {PureComponent} from 'react'\n\nclass MessageBox extends PureComponent {\n  ···\n}\n</code></pre>\n\n<p>Performance-optimized version of <code>React.Component</code>. Doesn’t rerender if props/state hasn’t changed.</p>\n\n<p>See: <a href=\"https://reactjs.org/docs/react-api.html#react.purecomponent\">Pure components</a></p>\n\n<h3 id=\"component-api\">Component API</h3>\n\n<pre><code class=\"language-jsx\">this.forceUpdate()\n</code></pre>\n\n<pre><code class=\"language-jsx\">this.setState({ ... })\nthis.setState(state =&gt; { ... })\n</code></pre>\n\n<pre><code class=\"language-jsx\">this.state\nthis.props\n</code></pre>\n\n<p>These methods and properties are available for <code>Component</code> instances.</p>\n\n<p>See: <a href=\"http://facebook.github.io/react/docs/component-api.html\">Component API</a></p>\n\n<h2 class=\"-two-column\" id=\"lifecycle\">Lifecycle</h2>\n\n<h3 id=\"mounting\">Mounting</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Method</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>constructor</code> <em>(props)</em></td>\n      <td>Before rendering <a href=\"https://reactjs.org/docs/react-component.html#constructor\">#</a></td>\n    </tr>\n    <tr>\n      <td><code>componentWillMount()</code></td>\n      <td><em>Don’t use this</em> <a href=\"https://reactjs.org/docs/react-component.html#componentwillmount\">#</a></td>\n    </tr>\n    <tr>\n      <td><code>render()</code></td>\n      <td>Render <a href=\"https://reactjs.org/docs/react-component.html#render\">#</a></td>\n    </tr>\n    <tr>\n      <td><code>componentDidMount()</code></td>\n      <td>After rendering (DOM available) <a href=\"https://reactjs.org/docs/react-component.html#componentdidmount\">#</a></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>componentWillUnmount()</code></td>\n      <td>Before DOM removal <a href=\"https://reactjs.org/docs/react-component.html#componentwillunmount\">#</a></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>componentDidCatch()</code></td>\n      <td>Catch errors (16+) <a href=\"https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html\">#</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Set initial the state on <code>constructor()</code>.\nAdd DOM event handlers, timers (etc) on <code>componentDidMount()</code>, then remove them on <code>componentWillUnmount()</code>.</p>\n\n<h3 id=\"updating\">Updating</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Method</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>componentDidUpdate</code> <em>(prevProps, prevState, snapshot)</em></td>\n      <td>Use <code>setState()</code> here, but remember to compare props</td>\n    </tr>\n    <tr>\n      <td><code>shouldComponentUpdate</code> <em>(newProps, newState)</em></td>\n      <td>Skips <code>render()</code> if returns false</td>\n    </tr>\n    <tr>\n      <td><code>render()</code></td>\n      <td>Render</td>\n    </tr>\n    <tr>\n      <td><code>componentDidUpdate</code> <em>(prevProps, prevState)</em></td>\n      <td>Operate on the DOM here</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Called when parents change properties and <code>.setState()</code>. These are not called for initial renders.</p>\n\n<p>See: <a href=\"http://facebook.github.io/react/docs/component-specs.html#updating-componentwillreceiveprops\">Component specs</a></p>\n\n<h2 class=\"-two-column\" id=\"hooks-new\">Hooks (New)</h2>\n\n<h3 id=\"state-hook\">State Hook</h3>\n\n<pre data-line=\"5,10\"><code class=\"language-jsx\">import React, { useState } from 'react';\n\nfunction Example() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n\n  return (\n    &lt;div&gt;\n      &lt;p&gt;You clicked {count} times&lt;/p&gt;\n      &lt;button onClick={() =&gt; setCount(count + 1)}&gt;\n        Click me\n      &lt;/button&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>\n\n<p>Hooks are a new addition in React 16.8.</p>\n\n<p>See: <a href=\"https://reactjs.org/docs/hooks-overview.html\">Hooks at a Glance</a></p>\n\n<h3 id=\"declaring-multiple-state-variables\">Declaring multiple state variables</h3>\n\n<pre><code class=\"language-jsx\">function ExampleWithManyStates() {\n  // Declare multiple state variables!\n  const [age, setAge] = useState(42);\n  const [fruit, setFruit] = useState('banana');\n  const [todos, setTodos] = useState([{ text: 'Learn Hooks' }]);\n  // ...\n}\n</code></pre>\n\n<h3 id=\"effect-hook\">Effect hook</h3>\n\n<pre data-line=\"6,7,8,9,10\"><code class=\"language-jsx\">import React, { useState, useEffect } from 'react';\n\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() =&gt; {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n  }, [count]);\n\n  return (\n    &lt;div&gt;\n      &lt;p&gt;You clicked {count} times&lt;/p&gt;\n      &lt;button onClick={() =&gt; setCount(count + 1)}&gt;\n        Click me\n      &lt;/button&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>\n\n<p>If you’re familiar with React class lifecycle methods, you can think of <code>useEffect</code> Hook as <code>componentDidMount</code>, <code>componentDidUpdate</code>, and <code>componentWillUnmount</code> combined.</p>\n\n<p>By default, React runs the effects after every render — including the first render.</p>\n\n<h3 id=\"building-your-own-hooks\">Building your own hooks</h3>\n\n<h4 id=\"define-friendstatus\">Define FriendStatus</h4>\n<pre data-line=\"11,12,13,14\"><code class=\"language-jsx\">import React, { useState, useEffect } from 'react';\n\nfunction FriendStatus(props) {\n  const [isOnline, setIsOnline] = useState(null);\n\n  useEffect(() =&gt; {\n    function handleStatusChange(status) {\n      setIsOnline(status.isOnline);\n    }\n\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n    return () =&gt; {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  }, [props.friend.id]);\n\n  if (isOnline === null) {\n    return 'Loading...';\n  }\n  return isOnline ? 'Online' : 'Offline';\n}\n</code></pre>\n\n<p>Effects may also optionally specify how to “clean up” after them by returning a function.</p>\n\n<h4 id=\"use-friendstatus\">Use FriendStatus</h4>\n\n<pre data-line=\"2\"><code class=\"language-jsx\">function FriendStatus(props) {\n  const isOnline = useFriendStatus(props.friend.id);\n\n  if (isOnline === null) {\n    return 'Loading...';\n  }\n  return isOnline ? 'Online' : 'Offline';\n}\n</code></pre>\n\n<p>See: <a href=\"https://reactjs.org/docs/hooks-custom.html\">Building Your Own Hooks</a></p>\n\n<h3 id=\"hooks-api-reference\">Hooks API Reference</h3>\n\n<p>Also see: <a href=\"https://reactjs.org/docs/hooks-faq.html\">Hooks FAQ</a></p>\n\n<h4 id=\"basic-hooks\">Basic Hooks</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Hook</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>useState</code><em>(initialState)</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>useEffect</code><em>(() =&gt; { … })</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>useContext</code><em>(MyContext)</em></td>\n      <td>value returned from <code>React.createContext</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Full details: <a href=\"https://reactjs.org/docs/hooks-reference.html#basic-hooks\">Basic Hooks</a></p>\n\n<h4 id=\"additional-hooks\">Additional Hooks</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Hook</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>useReducer</code><em>(reducer, initialArg, init)</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>useCallback</code><em>(() =&gt; { … })</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>useMemo</code><em>(() =&gt; { … })</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>useRef</code><em>(initialValue)</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>useImperativeHandle</code><em>(ref, () =&gt; { … })</em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>useLayoutEffect</code></td>\n      <td>identical to <code>useEffect</code>, but it fires synchronously after all DOM mutations</td>\n    </tr>\n    <tr>\n      <td><code>useDebugValue</code><em>(value)</em></td>\n      <td>display a label for custom hooks in React DevTools</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Full details: <a href=\"https://reactjs.org/docs/hooks-reference.html#additional-hooks\">Additional Hooks</a></p>\n\n<h2 class=\"-two-column\" id=\"dom-nodes\">DOM nodes</h2>\n\n<h3 id=\"references\">References</h3>\n\n<pre data-line=\"4,9\"><code class=\"language-jsx\">class MyComponent extends Component {\n  render () {\n    return &lt;div&gt;\n      &lt;input ref={el =&gt; this.input = el} /&gt;\n    &lt;/div&gt;\n  }\n\n  componentDidMount () {\n    this.input.focus()\n  }\n}\n</code></pre>\n\n<p>Allows access to DOM nodes.</p>\n\n<p>See: <a href=\"https://reactjs.org/docs/refs-and-the-dom.html\">Refs and the DOM</a></p>\n\n<h3 id=\"dom-events\">DOM Events</h3>\n\n<pre data-line=\"5,9\"><code class=\"language-jsx\">class MyComponent extends Component {\n  render () {\n    &lt;input type=\"text\"\n        value={this.state.value}\n        onChange={event =&gt; this.onChange(event)} /&gt;\n  }\n\n  onChange (event) {\n    this.setState({ value: event.target.value })\n  }\n}\n</code></pre>\n\n<p>Pass functions to attributes like <code>onChange</code>.</p>\n\n<p>See: <a href=\"https://reactjs.org/docs/events.html\">Events</a></p>\n\n<h2 id=\"other-features\">Other features</h2>\n\n<h3 id=\"transferring-props\">Transferring props</h3>\n\n<pre class=\"-setup\"><code class=\"language-html\">&lt;VideoPlayer src=\"video.mp4\" /&gt;\n</code></pre>\n\n<pre data-line=\"3\"><code class=\"language-jsx\">class VideoPlayer extends Component {\n  render () {\n    return &lt;VideoEmbed {...this.props} /&gt;\n  }\n}\n</code></pre>\n\n<p>Propagates <code>src=\"...\"</code> down to the sub-component.</p>\n\n<p>See <a href=\"http://facebook.github.io/react/docs/transferring-props.html\">Transferring props</a></p>\n\n<h3 id=\"top-level-api\">Top-level API</h3>\n\n<pre><code class=\"language-jsx\">React.createClass({ ... })\nReact.isValidElement(c)\n</code></pre>\n\n<pre><code class=\"language-jsx\">ReactDOM.render(&lt;Component /&gt;, domnode, [callback])\nReactDOM.unmountComponentAtNode(domnode)\n</code></pre>\n\n<pre><code class=\"language-jsx\">ReactDOMServer.renderToString(&lt;Component /&gt;)\nReactDOMServer.renderToStaticMarkup(&lt;Component /&gt;)\n</code></pre>\n\n<p>There are more, but these are most common.</p>\n\n<p>See: <a href=\"https://reactjs.org/docs/react-api.html\">React top-level API</a></p>\n\n<h2 class=\"-two-column\" id=\"jsx-patterns\">JSX patterns</h2>\n\n<h3 id=\"style-shorthand\">Style shorthand</h3>\n\n<pre><code class=\"language-jsx\">const style = { height: 10 }\nreturn &lt;div style={style}&gt;&lt;/div&gt;\n</code></pre>\n\n<pre><code class=\"language-jsx\">return &lt;div style={{ margin: 0, padding: 0 }}&gt;&lt;/div&gt;\n</code></pre>\n\n<p>See: <a href=\"https://reactjs.org/tips/inline-styles.html\">Inline styles</a></p>\n\n<h3 id=\"inner-html\">Inner HTML</h3>\n\n<pre><code class=\"language-jsx\">function markdownify() { return \"&lt;p&gt;...&lt;/p&gt;\"; }\n&lt;div dangerouslySetInnerHTML={{__html: markdownify()}} /&gt;\n</code></pre>\n\n<p>See: <a href=\"https://reactjs.org/tips/dangerously-set-inner-html.html\">Dangerously set innerHTML</a></p>\n\n<h3 id=\"lists\">Lists</h3>\n\n<pre data-line=\"6,7\"><code class=\"language-jsx\">class TodoList extends Component {\n  render () {\n    const { items } = this.props\n\n    return &lt;ul&gt;\n      {items.map(item =&gt;\n        &lt;TodoItem item={item} key={item.key} /&gt;)}\n    &lt;/ul&gt;\n  }\n}\n</code></pre>\n\n<p>Always supply a <code>key</code> property.</p>\n\n<h3 id=\"conditionals\">Conditionals</h3>\n\n<pre><code class=\"language-jsx\">&lt;Fragment&gt;\n  {showMyComponent\n    ? &lt;MyComponent /&gt;\n    : &lt;OtherComponent /&gt;}\n&lt;/Fragment&gt;\n</code></pre>\n\n<h3 id=\"short-circuit-evaluation\">Short-circuit evaluation</h3>\n\n<pre><code class=\"language-jsx\">&lt;Fragment&gt;\n  {showPopup &amp;&amp; &lt;Popup /&gt;}\n  ...\n&lt;/Fragment&gt;\n</code></pre>\n\n<h2 class=\"-three-column\" id=\"new-features\">New features</h2>\n\n<h3 id=\"returning-multiple-elements\">Returning multiple elements</h3>\n\n<p>You can return multiple elements as arrays or fragments.</p>\n\n<h4 id=\"arrays\">Arrays</h4>\n\n<pre data-line=\"3,4,5,6\"><code class=\"language-js\">render () {\n  // Don't forget the keys!\n  return [\n    &lt;li key=\"A\"&gt;First item&lt;/li&gt;,\n    &lt;li key=\"B\"&gt;Second item&lt;/li&gt;\n  ]\n}\n</code></pre>\n\n<h4 id=\"fragments\">Fragments</h4>\n<pre data-line=\"3,4,5,6,7,8\"><code class=\"language-js\">render () {\n  // Fragments don't require keys!\n  return (\n    &lt;Fragment&gt;\n      &lt;li&gt;First item&lt;/li&gt;\n      &lt;li&gt;Second item&lt;/li&gt;\n    &lt;/Fragment&gt;\n  )\n}\n</code></pre>\n\n<p>See: <a href=\"https://reactjs.org/blog/2017/09/26/react-v16.0.html#new-render-return-types-fragments-and-strings\">Fragments and strings</a></p>\n\n<h3 id=\"returning-strings\">Returning strings</h3>\n\n<pre data-line=\"2\"><code class=\"language-js\">render() {\n  return 'Look ma, no spans!';\n}\n</code></pre>\n\n<p>You can return just a string.</p>\n\n<p>See: <a href=\"https://reactjs.org/blog/2017/09/26/react-v16.0.html#new-render-return-types-fragments-and-strings\">Fragments and strings</a></p>\n\n<h3 id=\"errors\">Errors</h3>\n\n<pre data-line=\"3,4,5\"><code class=\"language-js\">class MyComponent extends Component {\n  ···\n  componentDidCatch (error, info) {\n    this.setState({ error })\n  }\n}\n</code></pre>\n\n<p>Catch errors via <code>componentDidCatch</code>. (React 16+)</p>\n\n<p>See: <a href=\"https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html\">Error handling in React 16</a></p>\n\n<h3 id=\"portals\">Portals</h3>\n\n<pre data-line=\"2,3,4,5\"><code class=\"language-js\">render () {\n  return React.createPortal(\n    this.props.children,\n    document.getElementById('menu')\n  )\n}\n</code></pre>\n\n<p>This renders <code>this.props.children</code> into any location in the DOM.</p>\n\n<p>See: <a href=\"https://reactjs.org/docs/portals.html\">Portals</a></p>\n\n<h3 id=\"hydration\">Hydration</h3>\n\n<pre data-line=\"2\"><code class=\"language-js\">const el = document.getElementById('app')\nReactDOM.hydrate(&lt;App /&gt;, el)\n</code></pre>\n\n<p>Use <code>ReactDOM.hydrate</code> instead of using <code>ReactDOM.render</code> if you’re rendering over the output of <a href=\"https://reactjs.org/docs/react-dom-server.html\">ReactDOMServer</a>.</p>\n\n<p>See: <a href=\"https://reactjs.org/docs/react-dom.html#hydrate\">Hydrate</a></p>\n\n<h2 class=\"-three-column\" id=\"property-validation\">Property validation</h2>\n\n<h3 id=\"proptypes\">PropTypes</h3>\n\n<pre class=\"-setup\"><code class=\"language-js\">import PropTypes from 'prop-types'\n</code></pre>\n\n<p>See: <a href=\"https://reactjs.org/docs/typechecking-with-proptypes.html\">Typechecking with PropTypes</a></p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Key</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>any</code></td>\n      <td>Anything</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"basic\">Basic</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Key</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>string</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>number</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>func</code></td>\n      <td>Function</td>\n    </tr>\n    <tr>\n      <td><code>bool</code></td>\n      <td>True or false</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"enum\">Enum</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Key</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>oneOf</code><em>(any)</em></td>\n      <td>Enum types</td>\n    </tr>\n    <tr>\n      <td><code>oneOfType</code><em>(type array)</em></td>\n      <td>Union</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"array\">Array</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Key</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>array</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>arrayOf</code><em>(…)</em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"object\">Object</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Key</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>object</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>objectOf</code><em>(…)</em></td>\n      <td>Object with values of a certain type</td>\n    </tr>\n    <tr>\n      <td><code>instanceOf</code><em>(…)</em></td>\n      <td>Instance of a class</td>\n    </tr>\n    <tr>\n      <td><code>shape</code><em>(…)</em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"elements\">Elements</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Key</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>element</code></td>\n      <td>React element</td>\n    </tr>\n    <tr>\n      <td><code>node</code></td>\n      <td>DOM node</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"required\">Required</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Key</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>(···).isRequired</code></td>\n      <td>Required</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"basic-types\">Basic types</h3>\n\n<pre><code class=\"language-jsx\">MyComponent.propTypes = {\n  email:      PropTypes.string,\n  seats:      PropTypes.number,\n  callback:   PropTypes.func,\n  isClosed:   PropTypes.bool,\n  any:        PropTypes.any\n}\n</code></pre>\n\n<h3 id=\"required-types\">Required types</h3>\n\n<pre><code class=\"language-jsx\">MyCo.propTypes = {\n  name:  PropTypes.string.isRequired\n}\n</code></pre>\n\n<h3 id=\"elements-1\">Elements</h3>\n\n<pre><code class=\"language-jsx\">MyCo.propTypes = {\n  // React element\n  element: PropTypes.element,\n\n  // num, string, element, or an array of those\n  node: PropTypes.node\n}\n</code></pre>\n\n<h3 id=\"enumerables-oneof\">Enumerables (oneOf)</h3>\n\n<pre><code class=\"language-jsx\">MyCo.propTypes = {\n  direction: PropTypes.oneOf([\n    'left', 'right'\n  ])\n}\n</code></pre>\n\n<h3 id=\"arrays-and-objects\">Arrays and objects</h3>\n\n<pre><code class=\"language-jsx\">MyCo.propTypes = {\n  list: PropTypes.array,\n  ages: PropTypes.arrayOf(PropTypes.number),\n  user: PropTypes.object,\n  user: PropTypes.objectOf(PropTypes.number),\n  message: PropTypes.instanceOf(Message)\n}\n</code></pre>\n\n<pre><code class=\"language-jsx\">MyCo.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    age:  PropTypes.number\n  })\n}\n</code></pre>\n\n<p>Use <code>.array[Of]</code>, <code>.object[Of]</code>, <code>.instanceOf</code>, <code>.shape</code>.</p>\n\n<h3 id=\"custom-validation\">Custom validation</h3>\n\n<pre><code class=\"language-jsx\">MyCo.propTypes = {\n  customProp: (props, key, componentName) =&gt; {\n    if (!/matchme/.test(props[key])) {\n      return new Error('Validation failed!')\n    }\n  }\n}\n</code></pre>\n\n<h2 id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"https://reactjs.org\">React website</a> <em>(reactjs.org)</em></li>\n  <li><a href=\"https://reactcheatsheet.com/\">React cheatsheet</a> <em>(reactcheatsheet.com)</em></li>\n  <li><a href=\"https://github.com/enaqx/awesome-react\">Awesome React</a> <em>(github.com)</em></li>\n  <li><a href=\"react@0.14\">React v0.14 cheatsheet</a> <em>Legacy version</em></li>\n</ul>",
  "intro_html": "<p><a href=\"https://reactjs.org/\">React</a> is a JavaScript library for building user interfaces. This guide targets React v15 to v16.</p>",
  "description_html": "",
  "tags": ["Featured"],
  "updated": "2020-07-05"
},{
  "id": "sheets/React/react@0.14",
  "title": "React.js (v0.14)",
  "url": "/sheets/React/react@0.14",
  "category": "React",
  "keywords": null,
  "content_html": "<h3 id=\"components\">Components</h3>\n\n<pre><code class=\"language-js\">var Component = React.createClass({\n  render: function () {\n    return &lt;div&gt;Hello {this.props.name}&lt;/div&gt;;\n  }\n});\n</code></pre>\n\n<pre class=\"light\"><code class=\"language-js\">ReactDOM.render(&lt;Component name=\"John\" /&gt;, document.body);\n</code></pre>\n\n<p>Use the <a href=\"http://jsfiddle.net/reactjs/69z2wepo/\">React.js jsfiddle</a> to start hacking. (or the unofficial <a href=\"http://jsbin.com/yafixat/edit?js,output\">jsbin</a>)</p>\n\n<h3 id=\"nesting\">Nesting</h3>\n\n<pre class=\"light\"><code class=\"language-js\">var UserAvatar  = React.createClass({...});\nvar UserProfile = React.createClass({...});\n</code></pre>\n\n<pre><code class=\"language-js\">var Info = React.createClass({\n  render() {\n    return &lt;div&gt;\n      &lt;UserAvatar src={this.props.avatar} /&gt;\n      &lt;UserProfile username={this.props.username} /&gt;\n    &lt;/div&gt;;\n  }\n});\n</code></pre>\n\n<p>Nest components to separate concerns. See <a href=\"http://facebook.github.io/react/docs/multiple-components.html\">multiple components</a>.</p>\n\n<h2 class=\"center\" id=\"states--properties\">States &amp; Properties</h2>\n\n<h3 id=\"states-and-props\">States and props</h3>\n\n<pre class=\"light\"><code class=\"language-html\">&lt;MyComponent fullscreen={true} /&gt;\n</code></pre>\n\n<pre><code class=\"language-js\">// props\n  this.props.fullscreen //=&gt; true\n\n// state\n  this.setState({ username: 'rstacruz' });\n  this.replaceState({ ... });\n  this.state.username //=&gt; 'rstacruz'\n</code></pre>\n\n<pre><code class=\"language-js\">render: function () {\n  return &lt;div className={this.props.fullscreen ? 'full' : ''}&gt;\n    Welcome, {this.state.username}\n  &lt;/div&gt;;\n}\n</code></pre>\n\n<p>Use <a href=\"https://facebook.github.io/react/docs/tutorial.html#using-props\">props</a> (<code>this.props</code>) to access parameters passed from the parent.\nUse <a href=\"https://facebook.github.io/react/docs/tutorial.html#reactive-state\">states</a> (<code>this.state</code>) to manage dynamic data.</p>\n\n<h3 id=\"setting-defaults\">Setting defaults</h3>\n\n<pre><code class=\"language-js\">React.createClass({\n  getInitialState: function () {\n    return { comments: [] };\n  },\n\n  getDefaultProps: function () {\n    return { name: \"Hello\" };\n  }\n);\n</code></pre>\n\n<p>Pre-populates <code>this.state.comments</code> and <code>this.props.name</code>.</p>\n\n<h2 id=\"components-1\">Components</h2>\n\n<h3 id=\"component-api\">Component API</h3>\n\n<pre class=\"light\"><code class=\"language-js\">ReactDOM.findDOMNode(c)  // 0.14+\nReact.findDOMNode(c)  // 0.13\nc.getDOMNode()        // 0.12 below\n</code></pre>\n\n<pre><code class=\"language-js\">c.forceUpdate()\nc.isMounted()\n\nc.state\nc.props\n\nc.setState({ ... })\nc.replaceState({ ... })\n\nc.setProps({ ... })       // for deprecation\nc.replaceProps({ ... })   // for deprecation\n\nc.refs\n</code></pre>\n\n<p>These are methods available for <code>Component</code> instances. See <a href=\"http://facebook.github.io/react/docs/component-api.html\">Component API</a>.</p>\n\n<h3 id=\"component-specs\">Component specs</h3>\n\n<table class=\"greycode no-head\">\n  <thead>\n    <tr>\n      <th>Method</th>\n      <th>What</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"http://facebook.github.io/react/docs/component-specs.html#render\"><code>render()</code></a></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><a href=\"http://facebook.github.io/react/docs/component-specs.html#getinitialstate\"><code>getInitialState()</code></a></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><a href=\"http://facebook.github.io/react/docs/component-specs.html#getdefaultprops\"><code>getDefaultProps()</code></a></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><a href=\"http://facebook.github.io/react/docs/component-specs.html#mixins\"><code>mixins: [ ... ]</code></a></td>\n      <td>Mixins … <a href=\"#mixins\">more</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://facebook.github.io/react/docs/component-specs.html#proptypes\"><code>propTypes: { ... }</code></a></td>\n      <td>Validation … <a href=\"#property-validation\">more</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"http://facebook.github.io/react/docs/component-specs.html#statics\"><code>statics: { ... }</code></a></td>\n      <td>Static methods</td>\n    </tr>\n    <tr>\n      <td><a href=\"http://facebook.github.io/react/docs/component-specs.html#displayname\"><code>displayName: \"...\"</code></a></td>\n      <td>Automatically filled by JSX</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Methods and properties you can override. See <a href=\"http://facebook.github.io/react/docs/component-specs.html\">component specs</a>.</p>\n\n<h2 id=\"lifecycle\">Lifecycle</h2>\n\n<h3 id=\"mounting\">Mounting</h3>\n\n<table class=\"greycode no-head lc\">\n  <tbody>\n    <tr>\n      <td><code>componentWillMount()</code></td>\n      <td>Before rendering (no DOM yet)</td>\n    </tr>\n    <tr>\n      <td><code>componentDidMount()</code></td>\n      <td>After rendering</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Before initial rendering occurs. Add your DOM stuff on didMount (events, timers, etc). See <a href=\"http://facebook.github.io/react/docs/component-specs.html#mounting-componentwillmount\">reference</a>.</p>\n\n<h3 id=\"updating\">Updating</h3>\n\n<table class=\"greycode no-head lc\">\n  <tbody>\n    <tr>\n      <td><code>componentWillReceiveProps</code><em>(newProps={})</em></td>\n      <td>Use <code>setState()</code> here</td>\n    </tr>\n    <tr>\n      <td><code>shouldComponentUpdate</code><em>(newProps={}, newState={})</em></td>\n      <td>Skips <code>render()</code> if returns false</td>\n    </tr>\n    <tr>\n      <td><code>componentWillUpdate</code><em>(newProps={}, newState={})</em></td>\n      <td>Can’t use <code>setState()</code> here</td>\n    </tr>\n    <tr>\n      <td><code>componentDidUpdate</code><em>(prevProps={}, prevState={})</em></td>\n      <td>Operate on the DOM here</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Called when parents change properties and <code>.setState()</code>. These are not called for initial renders. See <a href=\"http://facebook.github.io/react/docs/component-specs.html#updating-componentwillreceiveprops\">reference</a>.</p>\n\n<h3 id=\"unmounting\">Unmounting</h3>\n\n<table class=\"greycode no-head lc\">\n  <tbody>\n    <tr>\n      <td><code>componentWillUnmount()</code></td>\n      <td>Invoked before DOM removal</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Clear your DOM stuff here (probably done on didMount). See <a href=\"http://facebook.github.io/react/docs/component-specs.html#unmounting-componentwillunmount\">reference</a>.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<h3 id=\"example-loading-data\">Example: loading data</h3>\n\n<pre><code class=\"language-js\">React.createClass({\n  componentDidMount: function () {\n    $.get(this.props.url, function (data) {\n      this.setState(data);\n    }.bind(this));\n  },\n\n  render: function () {\n    return &lt;CommentList data={this.state.data} /&gt;\n  }\n});\n</code></pre>\n\n<p>See <a href=\"http://facebook.github.io/react/tips/initial-ajax.html\">initial AJAX data</a>.</p>\n\n<h2 id=\"dom-nodes\">DOM nodes</h2>\n\n<h3 id=\"references\">References</h3>\n\n<pre class=\"light\"><code class=\"language-html\">&lt;input ref=\"myInput\"&gt;\n</code></pre>\n\n<pre><code class=\"language-js\">this.refs.myInput\nReactDOM.findDOMNode(this.refs.myInput).focus()\nReactDOM.findDOMNode(this.refs.myInput).value\n</code></pre>\n\n<h3 id=\"dom-events\">DOM Events</h3>\n<p>Add attributes like <code>onChange</code>. See <a href=\"https://facebook.github.io/react/docs/events.html\">events</a>.</p>\n\n<pre class=\"light\"><code class=\"language-html\">&lt;input type=\"text\"\n    value={this.state.value}\n    onChange={this.handleChange} /&gt;\n</code></pre>\n\n<pre><code class=\"language-js\">handleChange: function(event) {\n  this.setState({ value: event.target.value });\n}\n</code></pre>\n\n<p>Allows access to DOM nodes. See <a href=\"http://facebook.github.io/react/docs/more-about-refs.html\">References</a>.</p>\n\n<h3 id=\"two-way-binding\">Two-way binding</h3>\n\n<pre class=\"light\"><code class=\"language-html\">Email: &lt;input type=\"text\" valueLink={this.linkState('email')} /&gt;\n</code></pre>\n\n<pre><code class=\"language-js\">React.createClass({\n  mixins: [React.addons.LinkedStateMixin]\n});\n</code></pre>\n\n<pre><code class=\"language-js\">this.state.email\n</code></pre>\n\n<p>Use <a href=\"http://facebook.github.io/react/docs/two-way-binding-helpers.html\">LinkedStateMixin</a> for easier two-way binding.</p>\n\n<h2 id=\"property-validation\">Property validation</h2>\n\n<h3 id=\"basic-types\">Basic types</h3>\n\n<pre><code class=\"language-js\">React.createClass({\n  propTypes: {\n    email:      React.PropTypes.string,\n    seats:      React.PropTypes.number,\n    settings:   React.PropTypes.object,\n    callback:   React.PropTypes.func,\n    isClosed:   React.PropTypes.bool,\n    any:        React.PropTypes.any,\n  }\n});\n</code></pre>\n<p>Primitive types: <code>.string</code>, <code>.number</code>, <code>.func</code>, and <code>.bool</code>. See <a href=\"http://facebook.github.io/react/docs/reusable-components.html#prop-validation\">propTypes</a>.</p>\n\n<h3 id=\"required-types\">Required types</h3>\n\n<pre><code class=\"language-js\">propTypes: {\n  requiredFunc:  React.PropTypes.func.isRequired,\n  requiredAny:   React.PropTypes.any.isRequired,\n</code></pre>\n\n<p>Add <code>.isRequired</code>.</p>\n\n<h3 id=\"react-elements\">React elements</h3>\n\n<pre><code class=\"language-js\">propTypes: {\n  element:  React.PropTypes.element,  // react element\n  node:     React.PropTypes.node,     // num, string, element\n                                      // ...or array of those\n</code></pre>\n\n<p>Use <code>.element</code>, <code>.node</code>.</p>\n\n<h3 id=\"enumerables\">Enumerables</h3>\n\n<pre><code>propTypes: {\n  enum:     React.PropTypes.oneOf(['M','F']),  // enum\n  union:    React.PropTypes.oneOfType([        // any\n              React.PropTypes.string,\n              React.PropTypes.number ]),\n</code></pre>\n\n<p>Use <code>.oneOf</code>, <code>.oneOfType</code>.</p>\n\n<h3 id=\"arrays-and-objects\">Arrays and objects</h3>\n\n<pre><code class=\"language-js\">propTypes: {\n  array:    React.PropTypes.array,\n  arrayOf:  React.PropTypes.arrayOf(React.PropTypes.number),\n  object:   React.PropTypes.object,\n  objectOf: React.PropTypes.objectOf(React.PropTypes.number),\n\n  message:  React.PropTypes.instanceOf(Message),\n\n  object2:  React.PropTypes.shape({\n    color:  React.PropTypes.string,\n    size:   React.PropTypes.number\n  }),\n</code></pre>\n\n<p>Use <code>.array[Of]</code>, <code>.object[Of]</code>, <code>.instanceOf</code>, <code>.shape</code>.</p>\n\n<h3 id=\"custom-validation\">Custom validation</h3>\n\n<pre><code class=\"language-js\">propTypes: {\n  customProp: function(props, propName, componentName) {\n    if (!/matchme/.test(props[propName])) {\n      return new Error('Validation failed!');\n    }\n  }\n}\n</code></pre>\n\n<p>Supply your own function.</p>\n\n<h2 id=\"other-features\">Other features</h2>\n\n<h3 id=\"class-set\">Class set</h3>\n\n<pre><code class=\"language-js\">var cx = require('classnames');\n\nrender: function() {\n  var classes = cx({\n    'message': true,\n    'message-important': this.props.isImportant,\n    'message-read': this.props.isRead\n  });\n\n  return &lt;div className={classes}&gt;Great Scott!&lt;/div&gt;;\n}\n</code></pre>\n\n<p>Manipulate DOM classes with <a href=\"https://www.npmjs.org/package/classnames\">classnames</a>, previously known as <code>React.addons.classSet</code>. See <a href=\"http://facebook.github.io/react/docs/class-name-manipulation.html\">Class set</a>.</p>\n\n<h3 id=\"propagating-properties\">Propagating properties</h3>\n\n<pre class=\"light\"><code class=\"language-html\">&lt;VideoPlayer src=\"video.mp4\" /&gt;\n</code></pre>\n\n<pre><code class=\"language-js\">var VideoPlayer = React.createClass({\n  render: function() {\n    /* propagates src=\"...\" down to this sub component */\n    return &lt;VideoEmbed {...this.props} controls='false' /&gt;;\n  }\n});\n</code></pre>\n\n<p>See <a href=\"http://facebook.github.io/react/docs/transferring-props.html\">Transferring props</a>.</p>\n\n<h3 id=\"mixins\">Mixins</h3>\n\n<pre class=\"light\"><code class=\"language-js\">var SetIntervalMixin = {\n  componentWillMount: function() { .. }\n}\n</code></pre>\n\n<pre><code class=\"language-js\">var TickTock = React.createClass({\n  mixins: [SetIntervalMixin]\n}\n</code></pre>\n\n<p>See <a href=\"https://facebook.github.io/react/docs/addons.html\">addons</a> for some built-in mixins.</p>\n\n<h2 id=\"top-level-api\"><a href=\"https://facebook.github.io/react/docs/top-level-api.html\">Top level API</a></h2>\n\n<pre><code class=\"language-js\">React.createClass({ ... })\n\nReact.isValidElement(c)\n\nReactDOM.findDOMNode(c) // 0.14+\nReactDOM.render(&lt;Component /&gt;, domnode, [callback]) // 0.14+\nReactDOM.unmountComponentAtNode(domnode) // 0.14+\n\nReactDOMServer.renderToString(&lt;Component /&gt;) // 0.14+\nReactDOMServer.renderToStaticMarkup(&lt;Component /&gt;) // 0.14+\n</code></pre>\n\n<h2 id=\"jsx-patterns\">JSX patterns</h2>\n\n<h3 id=\"style-shorthand\">Style shorthand</h3>\n\n<pre><code class=\"language-js\">var style = { backgroundImage: 'url(x.jpg)', height: 10 };\nreturn &lt;div style={style}&gt;&lt;/div&gt;;\n</code></pre>\n\n<p>See <a href=\"https://facebook.github.io/react/tips/inline-styles.html\">inline styles</a>.</p>\n\n<h3 id=\"innerhtml\">InnerHTML</h3>\n\n<pre><code class=\"language-js\">function markdownify() { return \"&lt;p&gt;...&lt;/p&gt;\"; }\n&lt;div dangerouslySetInnerHTML={{__html: markdownify()}} /&gt;\n</code></pre>\n\n<p>See <a href=\"https://facebook.github.io/react/tips/dangerously-set-inner-html.html\">dangerously set innerHTML</a>.</p>\n\n<h3 id=\"lists\">Lists</h3>\n\n<pre><code class=\"language-js\">var TodoList = React.createClass({\n  render: function() {\n    function item(itemText) {\n      return &lt;li&gt;{itemText}&lt;/li&gt;;\n    };\n    return &lt;ul&gt;{this.props.items.map(item)}&lt;/ul&gt;;\n  }\n});\n</code></pre>\n\n<h2 id=\"see-also\">See also</h2>\n\n<ul>\n  <li><a href=\"http://facebook.github.io/react/docs/animation.html\">Animations</a></li>\n</ul>",
  "intro_html": "<p><strong>Deprecated:</strong> this guide targets an old version of React (v0.14). See the <a href=\"react\">updated React cheatsheet</a> for new versions.</p>",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/React/redux",
  "title": "Redux",
  "url": "/sheets/React/redux",
  "category": "React",
  "keywords": null,
  "content_html": "<h3 id=\"creating-a-store\">Creating a store</h3>\n\n<pre class=\"-setup\"><code class=\"language-js\">import { createStore } from 'redux'\n</code></pre>\n\n<pre><code class=\"language-js\">// Reducer\nfunction counter (state = { value: 0 }, action) {\n  switch (action.type) {\n  case 'INCREMENT':\n    return { value: state.value + 1 }\n  case 'DECREMENT':\n    return { value: state.value - 1 }\n  default:\n    return state\n  }\n}\n</code></pre>\n\n<pre><code class=\"language-js\">let store = createStore(counter)\n</code></pre>\n\n<pre><code class=\"language-js\">// Optional - you can pass `initialState` as a second arg\nlet store = createStore(counter, { value: 0 })\n</code></pre>\n\n<p>A store is made from a reducer function, which takes the current <code>state</code>, and\nreturns a new <code>state</code> depending on the <code>action</code> it was given.</p>\n\n<h3 id=\"using-a-store\">Using a store</h3>\n\n<pre class=\"-setup\"><code class=\"language-js\">let store = createStore(counter)\n</code></pre>\n\n<pre><code class=\"language-js\">// Dispatches an action; this changes the state\nstore.dispatch({ type: 'INCREMENT' })\nstore.dispatch({ type: 'DECREMENT' })\n</code></pre>\n\n<pre><code class=\"language-js\">// Gets the current state\nstore.getState()\n</code></pre>\n\n<pre><code class=\"language-js\">// Listens for changes\nstore.subscribe(() =&gt; { ... })\n</code></pre>\n\n<p>Dispatch actions to change the store’s state.</p>\n\n<h2 id=\"react-redux\">React Redux</h2>\n\n<h3 id=\"provider\">Provider</h3>\n\n<pre class=\"-setup\"><code class=\"language-js\">import { Provider } from 'react-redux'\n</code></pre>\n\n<pre><code class=\"language-js\">React.render(\n  &lt;Provider store={store}&gt;\n    &lt;App /&gt;\n  &lt;/Provider&gt;, mountNode)\n</code></pre>\n\n<p>The <code>&lt;Provider&gt;</code> component makes the store available in your React components. You need this so you can use <code>connect()</code>.</p>\n\n<h3 id=\"mapping-state\">Mapping state</h3>\n\n<pre class=\"-setup\"><code class=\"language-js\">import { connect } from 'react-redux'\n</code></pre>\n\n<pre><code class=\"language-js\">// A functional React component\nfunction App ({ message, onMessageClick }) {\n  return (\n    &lt;div onClick={() =&gt; onMessageClick('hello')}&gt;\n      {message}\n    &lt;/div&gt;\n  )\n}\n</code></pre>\n\n<pre><code class=\"language-js\">// Maps `state` to `props`:\n// These will be added as props to the component.\nfunction mapState (state) {\n  return { message: state.message }\n}\n\n// Maps `dispatch` to `props`:\nfunction mapDispatch (dispatch) {\n  return {\n    onMessageClick (message) {\n      dispatch({ type: 'click', message })\n    }\n  }\n}\n\n// Connect them:\nexport default connect(mapState, mapDispatch)(App)\n</code></pre>\n\n<h3 id=\"shorthand\">Shorthand</h3>\n\n<pre><code class=\"language-js\">export default connect(\n  (state) =&gt; ({\n    message: state.message\n  }),\n  (dispatch) =&gt; ({\n    onMessageClick: (message) =&gt; {\n      dispatch({ type: 'click', message })\n    }\n  })\n)(App)\n</code></pre>\n\n<p>Same as above, but shorter.</p>\n\n<h3 id=\"combining-reducers\">Combining reducers</h3>\n\n<pre><code class=\"language-js\">const reducer = combineReducers({\n  counter, user, store\n})\n</code></pre>\n\n<p>Combines multiple reducers into one reducer function. See: <a href=\"https://redux.js.org/docs/api/combineReducers.html\">combineReducers</a> <em>(redux.js.org)</em></p>\n\n<h2 id=\"middleware\">Middleware</h2>\n\n<h3 id=\"signature\">Signature</h3>\n\n<pre><code class=\"language-js\">// noop middleware\nconst logger = store =&gt; dispatch =&gt; action { dispatch(action) }\n</code></pre>\n\n<pre><code class=\"language-js\">const logger = store =&gt; {\n  // This function runs on createStore().\n  // It returns a decorator for dispatch().\n\n  return dispatch =&gt; {\n    // Runs on createStore(), too.\n    // It returns a new dispatch() function\n\n    return action =&gt; {\n      // Runs on every dispatch()\n    }\n  }\n}\n</code></pre>\n\n<p>Middlewares are simply decorators for <code>dispatch()</code> to allow you to take\ndifferent kinds of actions, and to perform different tasks when receiving\nactions.</p>\n\n<h3 id=\"applying-middleware\">Applying middleware</h3>\n\n<pre><code class=\"language-js\">const enhancer = applyMiddleware(logger, thunk, ...)\n</code></pre>\n\n<pre data-line=\"1\"><code class=\"language-js\">const store = createStore(reducer, {}, enhancer)\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"references\">References</h2>\n\n<ul class=\"-also-see\">\n  <li><a href=\"https://www.npmjs.com/package/redux\">Redux</a> <em>(npmjs.com)</em></li>\n  <li><a href=\"https://www.npmjs.com/package/react-redux\">React-redux</a> <em>(npmjs.com)</em></li>\n  <li><a href=\"http://redux.js.org/docs/basics/UsageWithReact.html\">Usage with React</a> <em>(redux.js.org)</em></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2018-01-17"
},{
  "id": "sheets/API/rest-api",
  "title": "RESTful API",
  "url": "/sheets/API/rest-api",
  "category": "API",
  "keywords": null,
  "content_html": "<h3 id=\"status-codes\">Status codes</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>200 OK</code></td>\n      <td>Successful get, patch (return a JSON object)</td>\n    </tr>\n    <tr>\n      <td><code>201 Created</code></td>\n      <td>Successful post (return a JSON object)</td>\n    </tr>\n    <tr>\n      <td><code>202 Accepted</code></td>\n      <td>Successful post, delete, path - async</td>\n    </tr>\n    <tr>\n      <td><code>204 No content</code></td>\n      <td>Successful delete</td>\n    </tr>\n    <tr>\n      <td><code>206 Partial content</code></td>\n      <td>Successful get - async</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"error-status\">Error status</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>401 Unauthorized</code></td>\n      <td>Not authenticated</td>\n    </tr>\n    <tr>\n      <td><code>403 Forbidden</code></td>\n      <td>Authenticated, but no permissions</td>\n    </tr>\n    <tr>\n      <td><code>422 Unprocessable entity</code></td>\n      <td>Validation</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"errors\">Errors</h3>\n\n<pre><code>HTTP/1.1 401 Unauthorized\nContent-Type: application/json\n{\n  'id': 'auth_failed',\n  'message': \"You're not logged in.\"\n}\n</code></pre>\n\n<p>Here’s an example of a possible error reply.</p>\n\n<h3 id=\"versioning\">Versioning</h3>\n\n<pre><code>GET /api/foo\nAccept: application/json; version=1\n</code></pre>\n\n<p>You can pass a <code>version=x</code> to the Accept request header. <a href=\"https://github.com/interagent/http-api-design#version-with-accepts-header\">Info here</a></p>\n\n<h3 id=\"authentication\">Authentication</h3>\n\n<pre><code>curl -is https://$TOKEN@api.example.com/\n</code></pre>\n\n<h3 id=\"methods\">Methods</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Request</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>GET /articles/1</code></td>\n      <td>read, returns <em>200</em></td>\n    </tr>\n    <tr>\n      <td><code>PUT /articles/1</code></td>\n      <td>edit (or path), returns <em>200</em></td>\n    </tr>\n    <tr>\n      <td><code>DELETE /articles/1</code></td>\n      <td>delete, returns <em>200</em></td>\n    </tr>\n    <tr>\n      <td><code>POST /articles</code></td>\n      <td>create, returns <em>201</em></td>\n    </tr>\n    <tr>\n      <td><code>GET /articles</code></td>\n      <td>list, returns <em>200</em></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"references\">References</h3>\n\n<ul>\n  <li><a href=\"https://github.com/interagent/http-api-design\">interagent/http-api-design</a> <em>(github.com)</em></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2019-07-07"
},{
  "id": "sheets/CSS/sass",
  "title": "Sass",
  "url": "/sheets/CSS/sass",
  "category": "CSS",
  "keywords": ["Variables","mixins","darken()","adjust-color()","@for @each @while @if @else","$list: (a b c)","$map: (a: b, c: d)"],
  "content_html": "<h2 class=\"-three-column\" id=\"basics\">Basics</h2>\n\n<h3 class=\"-intro\" id=\"introduction\">Introduction</h3>\n\n<p>This is a quick reference to <a href=\"https://sass-lang.com\">Sass stylesheets</a>.</p>\n\n<ul>\n  <li><a href=\"https://sass-lang.com/documentation\">Sass documentation</a> <em>(sass-lang.com)</em></li>\n</ul>\n\n<h3 id=\"variables\">Variables</h3>\n\n<pre><code class=\"language-scss\">$red: #833;\n</code></pre>\n\n<pre><code class=\"language-scss\">body {\n  color: $red;\n}\n</code></pre>\n\n<h3 id=\"nesting\">Nesting</h3>\n\n<pre><code class=\"language-scss\">.markdown-body {\n  a {\n    color: blue;\n    &amp;:hover {\n      color: red;\n    }\n  }\n}\n</code></pre>\n\n<h4 id=\"to-properties\">to properties</h4>\n<pre><code class=\"language-scss\">text: {\n  align: center;          // like text-align: center\n  transform: uppercase;   // like text-transform: uppercase\n}\n</code></pre>\n\n<h3 id=\"comments\">Comments</h3>\n\n<pre><code class=\"language-scss\">/* Block comments */\n// Line comments\n</code></pre>\n\n<h3 id=\"mixins\">Mixins</h3>\n\n<pre><code class=\"language-scss\">@mixin heading-font {\n  font-family: sans-serif;\n  font-weight: bold;\n}\n</code></pre>\n\n<pre><code class=\"language-scss\">h1 {\n  @include heading-font;\n}\n</code></pre>\n\n<h4 id=\"with-parameters\">with parameters</h4>\n\n<pre><code class=\"language-scss\">@mixin font-size($n) {\n  font-size: $n * 1.2em;\n}\n</code></pre>\n\n<pre><code class=\"language-scss\">body {\n  @include font-size(2);\n}\n</code></pre>\n\n<h4 id=\"with-default-values\">with default values</h4>\n\n<pre><code class=\"language-scss\">@mixin pad($n: 10px) {\n  padding: $n;\n}\n</code></pre>\n\n<pre><code class=\"language-scss\">body {\n  @include pad(15px);\n}\n</code></pre>\n\n<h4 id=\"with-a-default-variable\">with a default variable</h4>\n\n<pre><code class=\"language-scss\">// Set a default value\n$default-padding: 10px;\n</code></pre>\n\n<pre><code class=\"language-scss\">@mixin pad($n: $default-padding) {\n  padding: $n;\n}\n</code></pre>\n\n<pre><code class=\"language-scss\">body {\n  @include pad(15px);\n}\n</code></pre>\n\n<h3 id=\"extend\">Extend</h3>\n\n<pre><code class=\"language-scss\">.button {\n  ···\n}\n</code></pre>\n\n<pre><code class=\"language-scss\">.push-button {\n  @extend .button;\n}\n</code></pre>\n\n<h3 id=\"composing\">Composing</h3>\n\n<pre><code class=\"language-scss\">@import './other_sass_file';\n</code></pre>\n\n<p>The <code>.scss</code> or <code>.sass</code> extension is optional.</p>\n\n<h2 id=\"color-functions\">Color functions</h2>\n\n<h3 id=\"rgba\">rgba</h3>\n\n<pre><code class=\"language-scss\">rgb(100, 120, 140)\nrgba(100, 120, 140, .5)\nrgba($color, .5)\n</code></pre>\n\n<h3 id=\"mixing\">Mixing</h3>\n\n<pre><code class=\"language-scss\">mix($a, $b, 10%)   // 10% a, 90% b\n</code></pre>\n\n<h3 id=\"modifying-hsla\">Modifying HSLA</h3>\n\n<pre><code class=\"language-scss\">darken($color, 5%)\nlighten($color, 5%)\n</code></pre>\n\n<pre><code class=\"language-scss\">saturate($color, 5%)\ndesaturate($color, 5%)\ngrayscale($color)\n</code></pre>\n\n<pre><code class=\"language-scss\">adjust-hue($color, 15deg)\ncomplement($color)    // like adjust-hue(_, 180deg)\ninvert($color)\n</code></pre>\n\n<pre><code class=\"language-scss\">fade-in($color, .5)   // aka opacify()\nfade-out($color, .5)  // aka transparentize() - halves the opacity\nrgba($color, .5)      // sets alpha to .5\n</code></pre>\n\n<h3 id=\"getting-individual-values\">Getting individual values</h3>\n\n<h4 id=\"hsla\">HSLA</h4>\n\n<pre><code class=\"language-scss\">hue($color)         // → 0deg..360deg\nsaturation($color)  // → 0%..100%\nlightness($color)   // → 0%..100%\nalpha($color)       // → 0..1 (aka opacity())\n</code></pre>\n\n<h4 id=\"rgb\">RGB</h4>\n\n<pre><code class=\"language-scss\">red($color)         // → 0..255\ngreen($color)\nblue($color)\n</code></pre>\n\n<p>See: <a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html#hue-instance_method\">hue()</a>, <a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html#red-instance_method\">red()</a></p>\n\n<h3 id=\"adjustments\">Adjustments</h3>\n\n<pre><code class=\"language-scss\">// Changes by fixed amounts\nadjust-color($color, $blue: 5)\nadjust-color($color, $lightness: -30%)   // like darken(_, 30%)\nadjust-color($color, $alpha: -0.4)       // like fade-out(_, .4)\nadjust-color($color, $hue: 30deg)        // like adjust-hue(_, 15deg)\n</code></pre>\n\n<pre><code class=\"language-scss\">// Changes via percentage\nscale-color($color, $lightness: 50%)\n</code></pre>\n\n<pre><code class=\"language-scss\">// Changes one property completely\nchange-color($color, $hue: 180deg)\nchange-color($color, $blue: 250)\n</code></pre>\n\n<p>Supported: <code>$red</code> <code>$green</code> <code>$blue</code> <code>$hue</code> <code>$saturation</code> <code>$lightness</code> <code>$alpha</code></p>\n\n<h2 id=\"other-functions\">Other functions</h2>\n\n<h3 id=\"strings\">Strings</h3>\n\n<pre><code class=\"language-scss\">unquote('hello')\nquote(hello)\n</code></pre>\n\n<pre><code class=\"language-scss\">to-upper-case(hello)\nto-lower-case(hello)\n</code></pre>\n\n<pre><code class=\"language-scss\">str-length(hello world)\nstr-slice(hello, 2, 5)      // \"ello\" - it's 1-based, not 0-based\nstr-insert(\"abcd\", \"X\", 1)  // \"Xabcd\"\n</code></pre>\n\n<h3 id=\"units\">Units</h3>\n\n<pre><code class=\"language-scss\">unit(3em)        // 'em'\nunitless(100px)  // false\n</code></pre>\n\n<h3 id=\"numbers\">Numbers</h3>\n\n<pre><code class=\"language-scss\">floor(3.5)\nceil(3.5)\nround(3.5)\nabs(3.5)\n</code></pre>\n\n<pre><code class=\"language-scss\">min(1, 2, 3)\nmax(1, 2, 3)\n</code></pre>\n\n<pre><code class=\"language-scss\">percentage(.5)   // 50%\nrandom(3)        // 0..3\n</code></pre>\n\n<h3 id=\"misc\">Misc</h3>\n\n<pre><code class=\"language-scss\">variable-exists(red)    // checks for $red\nmixin-exists(red-text)  // checks for @mixin red-text\nfunction-exists(redify)\n</code></pre>\n\n<pre><code class=\"language-scss\">global-variable-exists(red)\n</code></pre>\n\n<pre><code class=\"language-scss\">selector-append('.menu', 'li', 'a')   // .menu li a\nselector-nest('.menu', '&amp;:hover li')  // .menu:hover li\nselector-extend(...)\nselector-parse(...)\nselector-replace(...)\nselector-unify(...)\n</code></pre>\n\n<h2 id=\"feature-checks\">Feature checks</h2>\n\n<h3 id=\"feature-check\">Feature check</h3>\n\n<pre><code class=\"language-scss\">feature-exists(global-variable-shadowing)\n</code></pre>\n\n<h3 id=\"features\">Features</h3>\n\n<ul>\n  <li>global-variable-shadowing</li>\n  <li>extend-selector-pseudoclass</li>\n  <li>units-level-3</li>\n  <li>at-error</li>\n</ul>\n\n<h2 id=\"loops\">Loops</h2>\n\n<h3 id=\"for-loops\">For loops</h3>\n\n<pre><code class=\"language-scss\">@for $i from 1 through 4 {\n  .item-#{$i} { left: 20px * $i; }\n}\n</code></pre>\n\n<h3 id=\"each-loops-simple\">Each loops (simple)</h3>\n\n<pre><code class=\"language-scss\">$menu-items: home about services contact;\n\n@each $item in $menu-items {\n  .photo-#{$item} {\n    background: url('images/#{$item}.jpg');\n  }\n}\n</code></pre>\n\n<h3 id=\"each-loops-nested\">Each loops (nested)</h3>\n<pre><code class=\"language-scss\">$backgrounds: (home, 'home.jpg'), (about, 'about.jpg');\n\n@each $id, $image in $backgrounds {\n  .photo-#{$id} {\n    background: url($image);\n  }\n}\n</code></pre>\n\n<h3 id=\"while-loops\">While loops</h3>\n\n<pre><code class=\"language-scss\">$i: 6;\n@while $i &gt; 0 {\n  .item-#{$i} { width: 2em * $i; }\n  $i: $i - 2;\n}\n</code></pre>\n\n<h2 id=\"other-features\">Other features</h2>\n\n<h3 id=\"conditionals\">Conditionals</h3>\n\n<pre><code class=\"language-scss\">@if $position == 'left' {\n   position: absolute;\n   left: 0;\n}\n@else if $position == 'right' {\n   position: absolute;\n   right: 0;\n}\n@else {\n   position: static;\n}\n</code></pre>\n\n<h3 id=\"interpolation\">Interpolation</h3>\n\n<pre><code class=\"language-scss\">.#{$klass} { ... }      // Class\ncall($function-name)    // Functions\n\n@media #{$tablet}\nfont: #{$size}/#{$line-height}\nurl(\"#{$background}.jpg\")\n</code></pre>\n\n<h3 id=\"lists\">Lists</h3>\n\n<pre><code class=\"language-scss\">$list: (a b c);\n\nnth($list, 1)  // starts with 1\nlength($list)\n\n@each $item in $list { ... }\n</code></pre>\n\n<h3 id=\"maps\">Maps</h3>\n\n<pre><code class=\"language-scss\">$map: (key1: value1, key2: value2, key3: value3);\n\nmap-get($map, key1)\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"see-also\">See also</h2>\n\n<ul>\n  <li><a href=\"http://sass-lang.com/documentation/Sass/Script/Functions.html\">http://sass-lang.com/documentation/Sass/Script/Functions.html</a></li>\n  <li><a href=\"http://sass-lang.com/documentation/file.SASS_REFERENCE.html#sassscript\">http://sass-lang.com/documentation/file.SASS_REFERENCE.html#sassscript</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": ["Featured"],
  "updated": "2020-07-03"
},{
  "id": "sheets/Markup/textile",
  "title": "Textile",
  "url": "/sheets/Markup/textile",
  "category": "Markup",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"reference\">Reference</h2>\n\n<h3 id=\"inlines\">Inlines</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>_em_</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>*strong*</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>__bold-italic__</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>@code@</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>??citation??</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>-strikethrough-</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>+insertion+</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>%span%</code></td>\n      <td>HTML tag</td>\n    </tr>\n    <tr>\n      <td><code>%{color:red}formatting%</code></td>\n      <td>CSS styles</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"blocks\">Blocks</h3>\n\n<pre><code class=\"language-textile\">h1. Header 1\n</code></pre>\n\n<pre><code class=\"language-textile\">h2. Header 2\n</code></pre>\n\n<pre><code class=\"language-textile\">bq. Blockquote\n</code></pre>\n\n<pre><code class=\"language-textile\">p(classname). Class.\n</code></pre>\n\n<pre><code class=\"language-textile\">p(#id). ID.\n</code></pre>\n\n<h3 id=\"lists\">Lists</h3>\n\n<pre><code class=\"language-textile\">## ordered list\n</code></pre>\n\n<pre><code class=\"language-textile\">* unordered list\n</code></pre>\n\n<h3 id=\"links\">Links</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>\"Hypertext\":index.html</code></td>\n      <td>Link</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>\"Text link\":link</code> <br /> <code>[link]http://link.com</code></td>\n      <td>Link via reference</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"images\">Images</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>!image.jpg!</code></td>\n      <td>Image</td>\n    </tr>\n    <tr>\n      <td><code>!image.jpg(title text)!</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>!image.jpg!:link.html</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>!&gt;right.jpg!</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"escaped-html\">Escaped HTML</h3>\n\n<pre><code class=\"language-html\">&lt;pre&gt;\nI am &lt;b&gt;very serious.&lt;/b&gt; -- this\nwill get escaped.\n&lt;/pre&gt;\n</code></pre>\n\n<h3 id=\"line-breaks\">Line breaks</h3>\n\n<pre><code class=\"language-textile\">Line breaks.\nJust break the lines.\n</code></pre>\n\n<h3 id=\"entities\">Entities</h3>\n\n<pre><code class=\"language-textile\">one(TM), two(R), three(C).\n</code></pre>\n\n<h3 id=\"horizontal-line\">Horizontal line</h3>\n\n<pre><code class=\"language-textile\">--\n</code></pre>\n\n<h3 id=\"footnotes\">Footnotes</h3>\n\n<pre><code class=\"language-textile\">Footnotes[1].\n</code></pre>\n\n<pre><code class=\"language-textile\">fn1. Something.\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2017-09-20"
},{
  "id": "sheets/Git/tig",
  "title": "Tig",
  "url": "/sheets/Git/tig",
  "category": "Git",
  "keywords": null,
  "content_html": "<h3 id=\"installing\">Installing</h3>\n\n<pre><code class=\"language-bash\"># MacOS + Homebrew\n$ brew install tig --HEAD\n</code></pre>\n\n<pre><code class=\"language-bash\"># Ubuntu\n$ sudo apt install tig\n</code></pre>\n\n<h3 id=\"invocation\">Invocation</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>tig</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>tig status</code></td>\n      <td>Status</td>\n    </tr>\n    <tr>\n      <td><code>tig blame FILE</code></td>\n      <td>Blame</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>tig master</code></td>\n      <td>Show a branch</td>\n    </tr>\n    <tr>\n      <td><code>tig test..master</code></td>\n      <td>Show difference between two branches</td>\n    </tr>\n    <tr>\n      <td><code>tig FILE</code></td>\n      <td>Show history of file</td>\n    </tr>\n    <tr>\n      <td><code>tig v0.0.3:README</code></td>\n      <td>Show contents of file in a specific revision</td>\n    </tr>\n    <tr>\n      <td><code>tig -C /repo/path</code></td>\n      <td>Run in dir <code>/repo/path</code> (like <code>git -C</code>)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>You can substitute <code>git log</code> → <code>tig</code>.</p>\n\n<h2 class=\"-three-column\" id=\"shortcut-keys\">Shortcut keys</h2>\n\n<h3 id=\"switching-views\">Switching views</h3>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>m</code></td>\n      <td>Main view</td>\n    </tr>\n    <tr>\n      <td><code>s</code></td>\n      <td>Status</td>\n    </tr>\n    <tr>\n      <td><code>t</code></td>\n      <td>Tree (files)</td>\n    </tr>\n    <tr>\n      <td><code>y</code></td>\n      <td>Stash view</td>\n    </tr>\n    <tr>\n      <td><code>g</code></td>\n      <td>Grep</td>\n    </tr>\n    <tr>\n      <td><code>h</code></td>\n      <td>Help</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"all-views\">All views</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>j</code>  <code>k</code></td>\n      <td>Up/down</td>\n    </tr>\n    <tr>\n      <td><code>J</code>  <code>K</code></td>\n      <td>Next/previous</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>&lt;</code></td>\n      <td>Back</td>\n    </tr>\n    <tr>\n      <td><code>R</code></td>\n      <td>Refresh</td>\n    </tr>\n    <tr>\n      <td><code>q</code></td>\n      <td>Close</td>\n    </tr>\n    <tr>\n      <td><code>Q</code></td>\n      <td>Close all</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>^N</code></td>\n      <td>Next on parent view</td>\n    </tr>\n    <tr>\n      <td><code>^P</code></td>\n      <td>Previous on parent view</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"m---main-view\"><code>m</code> - Main view</h3>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>D</code></td>\n      <td>Toggle date display modes</td>\n    </tr>\n    <tr>\n      <td><code>A</code></td>\n      <td>Toggle author display modes</td>\n    </tr>\n    <tr>\n      <td><code>X</code></td>\n      <td>Toggle commit sha</td>\n    </tr>\n    <tr>\n      <td><code>C</code></td>\n      <td>Cherry pick a commit</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"s---stage-view\"><code>s</code> - Stage view</h3>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>u</code></td>\n      <td>Stage/unstage file or chunk</td>\n    </tr>\n    <tr>\n      <td><code>!</code></td>\n      <td>Revert file or chunk</td>\n    </tr>\n    <tr>\n      <td><code>C</code></td>\n      <td>Commit</td>\n    </tr>\n    <tr>\n      <td><code>M</code></td>\n      <td>Merge</td>\n    </tr>\n    <tr>\n      <td><code>1</code></td>\n      <td>Stage line</td>\n    </tr>\n    <tr>\n      <td><code>[</code> <code>]</code></td>\n      <td>Increase/decrease the diff context</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"h---branch-view\"><code>h</code> - Branch view</h3>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>i</code></td>\n      <td>Change sort header</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"h---blame-view\"><code>h</code> - Blame view</h3>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>,</code></td>\n      <td>Parent commit</td>\n    </tr>\n  </tbody>\n</table>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2018-11-16"
},{
  "id": "sheets/Devops/travis",
  "title": "Travis.yml",
  "url": "/sheets/Devops/travis",
  "category": "Devops",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"reference\">Reference</h2>\n\n<h3 id=\"nodejs\">Node.js</h3>\n\n<pre><code class=\"language-yaml\">language: node_js\nnode_js:\n  - '4'\n</code></pre>\n\n<p>Defaults install to <code>npm install</code>, and defaults test to <code>npm test</code>.</p>\n\n<h3 id=\"ruby\">Ruby</h3>\n\n<pre><code class=\"language-yaml\">language: ruby\nrvm:\n  - 2.0.0\n  - 1.9.3\n  - 1.8.7\n</code></pre>\n\n<p>Defaults install to <code>bundle install</code>, defaults test to <code>rake</code>.</p>\n\n<h3 id=\"build-lifecycle\">Build lifecycle</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Lifecycle</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>before_install</code></td>\n    </tr>\n    <tr>\n      <td><code>install</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>before_script</code></td>\n    </tr>\n    <tr>\n      <td><code>script</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>after_success</code> or <code>after_failure</code></td>\n    </tr>\n    <tr>\n      <td><code>after_script</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>before_deploy</code> (optional)</td>\n    </tr>\n    <tr>\n      <td><code>deploy</code> (optional)</td>\n    </tr>\n    <tr>\n      <td><code>after_deploy</code> (optional)</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"branches\">Branches</h3>\n\n<pre><code class=\"language-yaml\">branches:\n  except: ['..']\n  only: ['master']\n</code></pre>\n\n<h3 id=\"environment-vars\">Environment vars</h3>\n\n<pre><code class=\"language-yaml\">env:\n  - 'rack=master'\n  - 'rack=1.3.4'\n</code></pre>\n\n<h3 id=\"custom-test-command\">Custom test command</h3>\n\n<pre><code class=\"language-yaml\">script: make test\nbefore_script: make pretest\nafter_script:  make clean\n\nbefore_script:\n  - make pretest1\n  - make pretest2\n</code></pre>\n\n<h3 id=\"branches-1\">Branches</h3>\n\n<pre><code class=\"language-yaml\">branches:\n  except:\n    - legacy\n\n  only:\n    - gh-pages\n    - /^deploy/\n</code></pre>\n\n<h3 id=\"apt-packages\">Apt packages</h3>\n\n<pre><code class=\"language-yaml\">before_install:\n  - sudo apt-get update -q\n  - sudo apt-get install gcc-4.8 -y\n</code></pre>\n\n<p><a href=\"https://docs.travis-ci.com/user/installing-dependencies/\">https://docs.travis-ci.com/user/installing-dependencies/</a></p>\n\n<h3 id=\"etc\">Etc</h3>\n\n<pre><code class=\"language-yaml\">gemfile:\n  - gemfiles/Gemfile.rails-2.3.x\n  - gemfiles/Gemfile.rails-3.0.x\n</code></pre>\n\n<h3 id=\"references\">References</h3>\n\n<ul>\n  <li>http://about.travis-ci.org/docs/user/build-configuration/</li>\n  <li>http://about.travis-ci.org/docs/user/languages/javascript-with-nodejs/</li>\n  <li>http://about.travis-ci.org/docs/user/languages/ruby/</li>\n</ul>",
  "intro_html": "<p>Quick reference for <a href=\"https://travis-ci.org\">Travis CI</a> yaml configuration. See <a href=\"https://docs.travis-ci.com/user/customizing-the-build/\">official documentation</a>.</p>",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/JavaScript/vue",
  "title": "Vue.js",
  "url": "/sheets/JavaScript/vue",
  "category": "JavaScript",
  "keywords": null,
  "content_html": "<p>{%raw%}</p>\n\n<h2 class=\"-three-column\" id=\"expressions\">Expressions</h2>\n\n<h3 id=\"expressions-1\">Expressions</h3>\n\n<pre><code class=\"language-html\">&lt;div id=\"app\"&gt;\n  &lt;p&gt;I have a {{ product }}&lt;/p&gt;\n  &lt;p&gt;{{ product + 's' }}&lt;/p&gt;\n  &lt;p&gt;{{ isWorking ? 'YES' : 'NO' }}&lt;/p&gt;\n  &lt;p&gt;{{ product.getSalePrice() }}&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>See: <a href=\"https://vuejs.org/v2/api/#delimiters\">Delimiters</a></p>\n\n<h3 id=\"binding\">Binding</h3>\n\n<pre><code class=\"language-html\">&lt;a v-bind:href=\"url\"&gt;...&lt;/a&gt;\n</code></pre>\n\n<h4 id=\"shorthand-syntax\">Shorthand syntax</h4>\n<pre data-line=\"1\"><code class=\"language-html\">&lt;a :href=\"url\"&gt;...&lt;/a&gt;\n</code></pre>\n\n<h4 id=\"true-or-false-will-add-or-remove-attribute\">True or false will add or remove attribute</h4>\n<pre><code class=\"language-html\">&lt;button :disabled=\"isButtonDisabled\"&gt;...\n</code></pre>\n\n<h4 id=\"if-isactive-is-truthy-the-class-active-will-appear\">If isActive is truthy, the class ‘active’ will appear</h4>\n<pre><code class=\"language-html\">&lt;div :class=\"{ active: isActive }\"&gt;...\n</code></pre>\n\n<h4 id=\"style-color-set-to-value-of-activecolor\">Style color set to value of activeColor</h4>\n<pre><code class=\"language-html\">&lt;div :style=\"{ color: activeColor }\"&gt;\n</code></pre>\n\n<p>See: <a href=\"https://vuejs.org/v2/api/#v-bind\">v-bind</a></p>\n\n<h3 id=\"directives\">Directives</h3>\n\n<h4 id=\"element-insertedremoved-based-on-truthiness\">Element inserted/removed based on truthiness</h4>\n<pre><code class=\"language-html\">&lt;p v-if=\"inStock\"&gt;{{ product }}&lt;/p&gt;\n</code></pre>\n<pre><code class=\"language-html\">&lt;p v-else-if=\"onSale\"&gt;...&lt;/p&gt;\n&lt;p v-else&gt;...&lt;/p&gt;\n</code></pre>\n\n<h4 id=\"toggles-the-display-none-css-property\">Toggles the display: none CSS property</h4>\n<pre><code class=\"language-html\">&lt;p v-show=\"showProductDetails\"&gt;...&lt;/p&gt;\n</code></pre>\n\n<h4 id=\"two-way-data-binding\">Two-way data binding</h4>\n<pre><code class=\"language-html\">&lt;input v-model=\"firstName\" &gt;\n</code></pre>\n\n<table>\n  <thead>\n    <tr>\n      <th>Method</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>v-model.lazy=\"...\"</code></td>\n      <td>Syncs input after change event</td>\n    </tr>\n    <tr>\n      <td><code>v-model.number=\"...\"</code></td>\n      <td>Always returns a number</td>\n    </tr>\n    <tr>\n      <td><code>v-model.trim=\"...\"</code></td>\n      <td>Strips whitespace</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"https://vuejs.org/v2/api/#Directives\">Directives</a></p>\n\n<h3 id=\"actionsevents\">Actions/Events</h3>\n\n<h4 id=\"calls-addtocart-method-on-component\">Calls addToCart method on component</h4>\n<pre><code class=\"language-html\">&lt;button v-on:click=\"addToCart\"&gt;...\n</code></pre>\n\n<h4 id=\"shorthand-syntax-1\">Shorthand syntax</h4>\n<pre data-line=\"1\"><code class=\"language-html\">&lt;button @click=\"addToCart\"&gt;...\n</code></pre>\n\n<h4 id=\"arguments-can-be-passed\">Arguments can be passed</h4>\n<pre><code class=\"language-html\">&lt;button @click=\"addToCart(product)\"&gt;...\n</code></pre>\n\n<h4 id=\"to-prevent-default-behavior-eg-page-reload\">To prevent default behavior (e.g. page reload)</h4>\n<pre><code class=\"language-html\">&lt;form @submit.prevent=\"addProduct\"&gt;...\n</code></pre>\n\n<h4 id=\"only-trigger-once\">Only trigger once</h4>\n<pre><code class=\"language-html\">&lt;img @mouseover.once=\"showImage\"&gt;...\n</code></pre>\n\n<table>\n  <thead>\n    <tr>\n      <th>Method</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>.stop</code></td>\n      <td>Stop all event propagation</td>\n    </tr>\n    <tr>\n      <td><code>.self </code></td>\n      <td>Only trigger if event.target is element itself</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"keyboard-entry-example\">Keyboard entry example</h4>\n<pre><code class=\"language-html\">&lt;input @keyup.enter=\"submit\"&gt;\n</code></pre>\n\n<h4 id=\"call-oncopy-when-control-c-is-pressed\">Call onCopy when control-c is pressed</h4>\n<pre><code class=\"language-html\">&lt;input @keyup.ctrl.c=\"onCopy\"&gt;\n</code></pre>\n\n<p>See: <a href=\"https://vuejs.org/v2/guide/events.html\">Events</a></p>\n\n<h3 id=\"list-rendering\">List rendering</h3>\n\n<h4 id=\"the-key-is-always-recommended\">The <code>:key</code> is always recommended</h4>\n<pre data-line=\"2\"><code class=\"language-html\">&lt;li v-for=\"item in items\"\n    :key=\"item.id\"&gt;\n  {{ item }}\n&lt;/li&gt;\n</code></pre>\n\n<h4 id=\"to-access-the-position-in-the-array\">To access the position in the array</h4>\n<pre><code class=\"language-html\">&lt;li v-for=\"(item, index) in items\"&gt;...\n</code></pre>\n\n<h4 id=\"to-iterate-through-objects\">To iterate through objects</h4>\n<pre><code class=\"language-html\">&lt;li v-for=\"(value, key) in object\"&gt;...\n</code></pre>\n\n<h4 id=\"using-v-for-with-a-component\">Using <code>v-for</code> with a component</h4>\n<pre><code class=\"language-html\">&lt;cart-product v-for=\"item in products\"\n              :product=\"item\"\n              :key=\"item.id\"&gt;\n</code></pre>\n\n<p>See: <a href=\"https://vuejs.org/v2/guide/list.html\">List Rendering</a></p>\n\n<h2 id=\"component\">Component</h2>\n\n<h3 id=\"component-anatomy\">Component anatomy</h3>\n\n<pre data-line=\"3, 8, 16, 21, 28, 34, 39\"><code class=\"language-js\">Vue.component('my-component', {\n  components: {\n    // Components that can be used in the template\n    ProductComponent,\n    ReviewComponent\n  },\n  props: {\n    // The parameters the component accepts\n    message: String,\n    product: Object,\n    email: {\n      type: String,\n      required: true,\n      default: \"none\"\n      validator: function (value) {\n        // Should return true if value is valid\n      }\n    }\n  },\n  data: function() {\n    // `data` must be a function\n    return {\n      firstName: 'Vue',\n      lastName: 'Mastery'\n    }\n  },\n  computed: {\n    // Return cached values until dependencies change\n    fullName: function () {\n      return this.firstName + ' ' + this.lastName\n    }\n  },\n  watch: {\n    // Called when firstName changes value\n    firstName: function (value, oldValue) { ... }\n  },\n  methods: { ... },\n  template: '&lt;span&gt;{{ message }}&lt;/span&gt;',\n  // Can also use backticks in `template` for multi-line\n})\n</code></pre>\n\n<p>See: <a href=\"https://vuejs.org/v2/guide/components.html\">Components Basics</a></p>\n\n<h3 id=\"lifecycle-hooks\">Lifecycle hooks</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Method</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>beforeCreate</code></td>\n      <td>After the instance has been initialized <a href=\"https://vuejs.org/v2/api/#beforeCreate\">#</a></td>\n    </tr>\n    <tr>\n      <td><code>created</code></td>\n      <td>After the instance is created <a href=\"https://vuejs.org/v2/api/#created\">#</a></td>\n    </tr>\n    <tr>\n      <td><code>beforeMount</code></td>\n      <td>Before the first render <a href=\"https://vuejs.org/v2/api/#beforeMount\">#</a></td>\n    </tr>\n    <tr>\n      <td><code>mounted</code></td>\n      <td>After the instance has been mounted <a href=\"https://vuejs.org/v2/api/#mounted\">#</a></td>\n    </tr>\n    <tr>\n      <td><code>beforeUpdate</code></td>\n      <td>When data changes, before the DOM is patched <a href=\"https://vuejs.org/v2/api/#beforeUpdate\">#</a></td>\n    </tr>\n    <tr>\n      <td><code>updated</code></td>\n      <td>After a data change <a href=\"https://vuejs.org/v2/api/#updated\">#</a></td>\n    </tr>\n    <tr>\n      <td><code>beforeDestroy</code></td>\n      <td>Before the instance is destroyed <a href=\"https://vuejs.org/v2/api/#beforeDestroy\">#</a></td>\n    </tr>\n    <tr>\n      <td><code>destroyed</code></td>\n      <td>After a Vue instance has been destroyed <a href=\"https://vuejs.org/v2/api/#destroyed\">#</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"https://vuejs.org/v2/api/#Options-Lifecycle-Hooks\">Lifecycle Hooks</a></p>\n\n<h3 id=\"custom-events\">Custom events</h3>\n\n<h4 id=\"set-listener-on-component-within-its-parent\">Set listener on component, within its parent</h4>\n<pre><code class=\"language-html\">&lt;button-counter v-on:incrementBy=\"incWithVal\"&gt;\n</code></pre>\n\n<h4 id=\"inside-parent-component\">Inside parent component</h4>\n<pre><code class=\"language-js\">methods: {\n  incWithVal: function (toAdd) { ... }\n}\n</code></pre>\n\n<h4 id=\"inside-button-counter-template\">Inside button-counter template</h4>\n<pre><code class=\"language-js\">this.$emit(\n    'incrementBy', // Custom event name\n    5 // Data sent up to parent\n  )\n</code></pre>\n\n<p>Use props to pass data into child components,\ncustom events to pass data to parent elements.</p>\n\n<p>See: <a href=\"https://vuejs.org/v2/guide/components-custom-events.html\">Custom Events</a></p>\n\n<h2 id=\"single-file-components\">Single file components</h2>\n\n<h3 id=\"single-file\">Single file</h3>\n<pre><code class=\"language-html\">&lt;template&gt;\n  &lt;p&gt;{{ greeting }} World!&lt;/p&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nmodule.exports = {\n  data: function () {\n    return {\n      greeting: 'Hello'\n    }\n  }\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\np {\n  font-size: 2em;\n  text-align: center;\n}\n&lt;/style&gt;\n</code></pre>\n\n<p>See: <a href=\"https://vuejs.org/v2/guide/single-file-components.html\">Single File Components</a></p>\n\n<h3 id=\"separation\">Separation</h3>\n<pre><code class=\"language-html\">&lt;template&gt;\n  &lt;div&gt;This will be pre-compiled&lt;/div&gt;\n&lt;/template&gt;\n&lt;script src=\"./my-component.js\"&gt;&lt;/script&gt;\n&lt;style src=\"./my-component.css\"&gt;&lt;/style&gt;\n</code></pre>\n\n<p>See: <a href=\"https://vuejs.org/v2/guide/single-file-components.html#What-About-Separation-of-Concerns\">What About Separation of Concerns?</a></p>\n\n<h2 id=\"slots\">Slots</h2>\n\n<h3 id=\"using-a-single-slot\">Using a single slot</h3>\n\n<h4 id=\"component-template\">Component template</h4>\n<pre data-line=\"3,4,5\"><code class=\"language-html\">&lt;div&gt;\n  &lt;h2&gt;I'm a title&lt;/h2&gt;\n  &lt;slot&gt;\n    Only displayed if no slot content\n  &lt;/slot&gt;\n&lt;/div&gt;\n</code></pre>\n\n<h4 id=\"use-of-component-with-data-for-slot\">Use of component with data for slot</h4>\n<pre data-line=\"2\"><code class=\"language-html\">&lt;my-component&gt;\n  &lt;p&gt;This will go in the slot&lt;/p&gt;\n&lt;/my-component&gt;\n</code></pre>\n\n<p>See: <a href=\"https://vuejs.org/v2/guide/components-slots.html\">Slots</a></p>\n\n<h3 id=\"multiple-slots\">Multiple slots</h3>\n\n<h4 id=\"component-template-1\">Component template</h4>\n<pre data-line=\"3,6,9\"><code class=\"language-html\">&lt;div class=\"container\"&gt;\n  &lt;header&gt;\n    &lt;slot name=\"header\"&gt;&lt;/slot&gt;\n  &lt;/header&gt;\n  &lt;main&gt;\n    &lt;slot&gt;Default content&lt;/slot&gt;\n  &lt;/main&gt;\n  &lt;footer&gt;\n    &lt;slot name=\"footer\"&gt;&lt;/slot&gt;\n  &lt;/footer&gt;\n&lt;/div&gt;\n</code></pre>\n\n<h4 id=\"use-of-component-with-data-for-slots\">Use of component with data for slots</h4>\n<pre data-line=\"2,3,4\"><code class=\"language-html\">&lt;app-layout&gt;\n  &lt;h1 slot=\"header\"&gt;Page title&lt;/h1&gt;\n  &lt;p&gt;the main content.&lt;/p&gt;\n  &lt;p slot=\"footer\"&gt;Contact info&lt;/p&gt;\n&lt;/app-layout&gt;\n</code></pre>\n\n<p>See: <a href=\"https://vuejs.org/v2/guide/components-slots.html\">Slots</a></p>\n\n<h2 id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"https://cli.vuejs.org/\">Vue CLI</a> <em>(cli.vuejs.org)</em></li>\n  <li><a href=\"https://router.vuejs.org/\">Vue Router</a> <em>(router.vuejs.org)</em></li>\n  <li><a href=\"https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=en\">Vue DevTools</a> <em>(chrome.google.com)</em></li>\n  <li><a href=\"https://nuxtjs.org/\">Nuxt.js</a> <em>(nuxtjs.org)</em></li>\n  <li><a href=\"vue@1.0.28/\">Vue.js v1.0.28 cheatsheet</a> <em>Legacy version</em></li>\n</ul>\n\n<p>{%endraw%}</p>",
  "intro_html": "<p><a href=\"https://vuejs.org/\">Vue.js</a> is an open-source Model–view–viewmodel JavaScript framework for building user interfaces and single-page applications.</p>",
  "description_html": "",
  "tags": null,
  "updated": "2019-12-26"
},{
  "id": "sheets/Html/xpath",
  "title": "Xpath",
  "url": "/sheets/Html/xpath",
  "category": "HTML",
  "keywords": null,
  "content_html": "<h2 id=\"testing\">Testing</h2>\n\n<h3 class=\"-intro\" id=\"xpath-test-bed\">Xpath test bed</h3>\n\n<p>Test queries in the Xpath test bed:</p>\n\n<ul>\n  <li><a href=\"http://www.whitebeam.org/library/guide/TechNotes/xpathtestbed.rhtm\">Xpath test bed</a> <em>(whitebeam.org)</em></li>\n</ul>\n\n<h3 id=\"browser-console\">Browser console</h3>\n\n<pre><code class=\"language-js\">$x(\"//div\")\n</code></pre>\n\n<p>Works in Firefox and Chrome.</p>\n\n<h2 id=\"selectors\">Selectors</h2>\n\n<h3 id=\"descendant-selectors\">Descendant selectors</h3>\n\n<table class=\"xp\">\n  <thead>\n    <tr>\n      <th>CSS</th>\n      <th>Xpath</th>\n      <th>?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>h1</code></td>\n      <td><code>//h1</code></td>\n      <td><a href=\"#prefixes\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>div p</code></td>\n      <td><code>//div//p</code></td>\n      <td><a href=\"#axes\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>ul &gt; li</code></td>\n      <td><code>//ul/li</code></td>\n      <td><a href=\"#axes\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>ul &gt; li &gt; a</code></td>\n      <td><code>//ul/li/a</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>div &gt; *</code></td>\n      <td><code>//div/*</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>:root</code></td>\n      <td><code>/</code></td>\n      <td><a href=\"#prefixes\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>:root &gt; body</code></td>\n      <td><code>/body</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"attribute-selectors\">Attribute selectors</h3>\n\n<table class=\"xp\">\n  <thead>\n    <tr>\n      <th>CSS</th>\n      <th>Xpath</th>\n      <th>?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>#id</code></td>\n      <td><code>//*[@id=\"id\"]</code></td>\n      <td><a href=\"#predicates\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>.class</code></td>\n      <td><code>//*[@class=\"class\"]</code> <em>…<a href=\"#class-check\">kinda</a></em></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>input[type=\"submit\"]</code></td>\n      <td><code>//input[@type=\"submit\"]</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>a#abc[for=\"xyz\"]</code></td>\n      <td><code>//a[@id=\"abc\"][@for=\"xyz\"]</code></td>\n      <td><a href=\"#chaining-order\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>a[rel]</code></td>\n      <td><code>//a[@rel]</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>a[href^='/']</code></td>\n      <td><code>//a[starts-with(@href, '/')]</code></td>\n      <td><a href=\"#string-functions\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>a[href$='pdf']</code></td>\n      <td><code>//a[ends-with(@href, '.pdf')]</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>a[href*='://']</code></td>\n      <td><code>//a[contains(@href, '://')]</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>a[rel~='help']</code></td>\n      <td><code>//a[contains(@rel, 'help')]</code> <em>…<a href=\"#class-check\">kinda</a></em></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"order-selectors\">Order selectors</h3>\n\n<table class=\"xp\">\n  <thead>\n    <tr>\n      <th>CSS</th>\n      <th>Xpath</th>\n      <th>?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>ul &gt; li:first-child</code></td>\n      <td><code>//ul/li[1]</code></td>\n      <td><a href=\"#indexing\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>ul &gt; li:nth-child(2)</code></td>\n      <td><code>//ul/li[2]</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ul &gt; li:last-child</code></td>\n      <td><code>//ul/li[last()]</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>li#id:first-child</code></td>\n      <td><code>//li[@id=\"id\"][1]</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>a:first-child</code></td>\n      <td><code>//a[1]</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>a:last-child</code></td>\n      <td><code>//a[last()]</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"siblings\">Siblings</h3>\n\n<table class=\"xp\">\n  <thead>\n    <tr>\n      <th>CSS</th>\n      <th>Xpath</th>\n      <th>?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>h1 ~ ul</code></td>\n      <td><code>//h1/following-sibling::ul</code></td>\n      <td><a href=\"#using-axes\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>h1 + ul</code></td>\n      <td><code>//h1/following-sibling::ul[1]</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>h1 ~ #id</code></td>\n      <td><code>//h1/following-sibling::[@id=\"id\"]</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"jquery\">jQuery</h3>\n\n<table class=\"xp\">\n  <thead>\n    <tr>\n      <th>CSS</th>\n      <th>Xpath</th>\n      <th>?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>$('ul &gt; li').parent()</code></td>\n      <td><code>//ul/li/..</code></td>\n      <td><a href=\"#other-axes\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>$('li').closest('section')</code></td>\n      <td><code>//li/ancestor-or-self::section</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>$('a').attr('href')</code></td>\n      <td><code>//a/@href</code></td>\n      <td><a href=\"#steps\">?</a></td>\n    </tr>\n    <tr>\n      <td><code>$('span').text()</code></td>\n      <td><code>//span/text()</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"other-things\">Other things</h3>\n\n<table class=\"xp\">\n  <thead>\n    <tr>\n      <th>CSS</th>\n      <th>Xpath</th>\n      <th>?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>h1:not([id])</code></td>\n      <td><code>//h1[not(@id)]</code></td>\n      <td><a href=\"#boolean-functions\">?</a></td>\n    </tr>\n    <tr>\n      <td>Text match</td>\n      <td><code>//button[text()=\"Submit\"]</code></td>\n      <td><a href=\"#operators\">?</a></td>\n    </tr>\n    <tr>\n      <td>Text match (substring)</td>\n      <td><code>//button[contains(text(),\"Go\")]</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>Arithmetic</td>\n      <td><code>//product[@price &gt; 2.50]</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>Has children</td>\n      <td><code>//ul[*]</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>Has children (specific)</td>\n      <td><code>//ul[li]</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td>Or logic</td>\n      <td><code>//a[@name or @href]</code></td>\n      <td><a href=\"#operators\">?</a></td>\n    </tr>\n    <tr>\n      <td>Union (joins results)</td>\n      <td><code>//a | //div</code></td>\n      <td><a href=\"#unions\">?</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<style>\n/* ensure tables align */\ntable.xp {table-layout: fixed;}\ntable.xp tr>:nth-child(1) {width: 35%;}\ntable.xp tr>:nth-child(2) {width: auto;}\ntable.xp tr>:nth-child(3) {width: 10%; text-align:right;}\n</style>\n\n<h3 id=\"class-check\">Class check</h3>\n\n<pre><code class=\"language-bash\">//div[contains(concat(' ',normalize-space(@class),' '),' foobar ')]\n</code></pre>\n\n<p>Xpath doesn’t have the “check if part of space-separated list” operator, so this is the workaround (<a href=\"http://pivotallabs.com/xpath-css-class-matching/\">source</a>).</p>\n\n<h2 id=\"expressions\">Expressions</h2>\n\n<h3 id=\"steps-and-axes\">Steps and axes</h3>\n\n<table class=\"-css-breakdown\">\n  <tbody>\n    <tr>\n      <td><code>//</code></td>\n      <td><code>ul</code></td>\n      <td><code>/</code></td>\n      <td><code>a[@id='link']</code></td>\n    </tr>\n    <tr>\n      <td>Axis</td>\n      <td>Step</td>\n      <td>Axis</td>\n      <td>Step</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"prefixes\">Prefixes</h3>\n\n<table class=\"-headers\">\n  <thead>\n    <tr>\n      <th>Prefix</th>\n      <th>Example</th>\n      <th>What</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>//</code></td>\n      <td><code>//hr[@class='edge']</code></td>\n      <td>Anywhere</td>\n    </tr>\n    <tr>\n      <td><code>./</code></td>\n      <td><code>./a</code></td>\n      <td>Relative</td>\n    </tr>\n    <tr>\n      <td><code>/</code></td>\n      <td><code>/html/body/div</code></td>\n      <td>Root</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Begin your expression with any of these.</p>\n\n<h3 id=\"axes\">Axes</h3>\n\n<table class=\"-headers\">\n  <thead>\n    <tr>\n      <th>Axis</th>\n      <th>Example</th>\n      <th>What</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>/</code></td>\n      <td><code>//ul/li/a</code></td>\n      <td>Child</td>\n    </tr>\n    <tr>\n      <td><code>//</code></td>\n      <td><code>//[@id=\"list\"]//a</code></td>\n      <td>Descendant</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Separate your steps with <code>/</code>. Use two (<code>//</code>) if you don’t want to select direct children.</p>\n\n<h3 id=\"steps\">Steps</h3>\n\n<pre><code class=\"language-bash\">//div\n//div[@name='box']\n//[@id='link']\n</code></pre>\n\n<p>A step may have an element name (<code>div</code>) and <a href=\"#predicate\">predicates</a> (<code>[...]</code>). Both are optional.\nThey can also be these other things:</p>\n\n<pre><code class=\"language-bash\">//a/text()     #=&gt; \"Go home\"\n//a/@href      #=&gt; \"index.html\"\n//a/*          #=&gt; All a's child elements\n</code></pre>\n\n<h2 id=\"predicates\">Predicates</h2>\n\n<h3 id=\"predicates-1\">Predicates</h3>\n\n<pre><code class=\"language-bash\">//div[true()]\n//div[@class=\"head\"]\n//div[@class=\"head\"][@id=\"top\"]\n</code></pre>\n\n<p>Restricts a nodeset only if some condition is true. They can be chained.</p>\n\n<h3 id=\"operators\">Operators</h3>\n\n<pre><code class=\"language-bash\"># Comparison\n//a[@id = \"xyz\"]\n//a[@id != \"xyz\"]\n//a[@price &gt; 25]\n</code></pre>\n\n<pre><code class=\"language-bash\"># Logic (and/or)\n//div[@id=\"head\" and position()=2]\n//div[(x and y) or not(z)]\n</code></pre>\n\n<p>Use comparison and logic operators to make conditionals.</p>\n\n<h3 id=\"using-nodes\">Using nodes</h3>\n\n<pre><code class=\"language-bash\"># Use them inside functions\n//ul[count(li) &gt; 2]\n//ul[count(li[@class='hide']) &gt; 0]\n</code></pre>\n\n<pre><code class=\"language-bash\"># This returns `&lt;ul&gt;` that has a `&lt;li&gt;` child\n//ul[li]\n</code></pre>\n\n<p>You can use nodes inside predicates.</p>\n\n<h3 id=\"indexing\">Indexing</h3>\n\n<pre><code class=\"language-bash\">//a[1]                  # first &lt;a&gt;\n//a[last()]             # last &lt;a&gt;\n//ol/li[2]              # second &lt;li&gt;\n//ol/li[position()=2]   # same as above\n//ol/li[position()&gt;1]   # :not(:first-child)\n</code></pre>\n\n<p>Use <code>[]</code> with a number, or <code>last()</code> or <code>position()</code>.</p>\n\n<h3 id=\"chaining-order\">Chaining order</h3>\n\n<pre><code class=\"language-bash\">a[1][@href='/']\na[@href='/'][1]\n</code></pre>\n\n<p>Order is significant, these two are different.</p>\n\n<h3 id=\"nesting-predicates\">Nesting predicates</h3>\n\n<pre><code>//section[.//h1[@id='hi']]\n</code></pre>\n\n<p>This returns <code>&lt;section&gt;</code> if it has an <code>&lt;h1&gt;</code> descendant with <code>id='hi'</code>.</p>\n\n<h2 id=\"functions\">Functions</h2>\n\n<h3 id=\"node-functions\">Node functions</h3>\n\n<pre><code class=\"language-bash\">name()                     # //[starts-with(name(), 'h')]\ntext()                     # //button[text()=\"Submit\"]\n                           # //button/text()\nlang(str)\nnamespace-uri()\n</code></pre>\n\n<pre><code class=\"language-bash\">count()                    # //table[count(tr)=1]\nposition()                 # //ol/li[position()=2]\n</code></pre>\n\n<h3 id=\"boolean-functions\">Boolean functions</h3>\n\n<pre><code class=\"language-bash\">not(expr)                  # button[not(starts-with(text(),\"Submit\"))]\n</code></pre>\n\n<h3 id=\"string-functions\">String functions</h3>\n\n<pre><code class=\"language-bash\">contains()                 # font[contains(@class,\"head\")]\nstarts-with()              # font[starts-with(@class,\"head\")]\nends-with()                # font[ends-with(@class,\"head\")]\n</code></pre>\n\n<pre><code class=\"language-bash\">concat(x,y)\nsubstring(str, start, len)\nsubstring-before(\"01/02\", \"/\")  #=&gt; 01\nsubstring-after(\"01/02\", \"/\")   #=&gt; 02\ntranslate()\nnormalize-space()\nstring-length()\n</code></pre>\n\n<h3 id=\"type-conversion\">Type conversion</h3>\n\n<pre><code class=\"language-bash\">string()\nnumber()\nboolean()\n</code></pre>\n\n<h2 id=\"axes-1\">Axes</h2>\n\n<h3 id=\"using-axes\">Using axes</h3>\n\n<pre><code class=\"language-bash\">//ul/li                       # ul &gt; li\n//ul/child::li                # ul &gt; li (same)\n//ul/following-sibling::li    # ul ~ li\n//ul/descendant-or-self::li   # ul li\n//ul/ancestor-or-self::li     # $('ul').closest('li')\n</code></pre>\n\n<p>Steps of an expression are separated by <code>/</code>, usually used to pick child nodes. That’s not always true: you can specify a different “axis” with <code>::</code>.</p>\n\n<table class=\"-css-breakdown\">\n  <tbody>\n    <tr>\n      <td><code>//</code></td>\n      <td><code>ul</code></td>\n      <td><code>/child::</code></td>\n      <td><code>li</code></td>\n    </tr>\n    <tr>\n      <td>Axis</td>\n      <td>Step</td>\n      <td>Axis</td>\n      <td>Step</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"child-axis\">Child axis</h3>\n\n<pre><code class=\"language-bash\"># both the same\n//ul/li/a\n//child::ul/child::li/child::a\n</code></pre>\n\n<p><code>child::</code> is the default axis. This makes <code>//a/b/c</code> work.</p>\n\n<pre><code class=\"language-bash\"># both the same\n# this works because `child::li` is truthy, so the predicate succeeds\n//ul[li]\n//ul[child::li]\n</code></pre>\n\n<pre><code class=\"language-bash\"># both the same\n//ul[count(li) &gt; 2]\n//ul[count(child::li) &gt; 2]\n</code></pre>\n\n<h3 id=\"descendant-or-self-axis\">Descendant-or-self axis</h3>\n\n<pre><code class=\"language-bash\"># both the same\n//div//h4\n//div/descendant-or-self::h4\n</code></pre>\n\n<p><code>//</code> is short for the <code>descendant-or-self::</code> axis.</p>\n\n<pre><code class=\"language-bash\"># both the same\n//ul//[last()]\n//ul/descendant-or-self::[last()]\n</code></pre>\n\n<h3 id=\"other-axes\">Other axes</h3>\n\n<table class=\"-headers\">\n  <thead>\n    <tr>\n      <th>Axis</th>\n      <th>Abbrev</th>\n      <th>Notes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>ancestor</code></td>\n      <td> </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>ancestor-or-self</code></td>\n      <td> </td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>attribute</code></td>\n      <td><code>@</code></td>\n      <td><code>@href</code> is short for <code>attribute::href</code></td>\n    </tr>\n    <tr>\n      <td><code>child</code></td>\n      <td> </td>\n      <td><code>div</code> is short for <code>child::div</code></td>\n    </tr>\n    <tr>\n      <td><code>descendant</code></td>\n      <td> </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>descendant-or-self</code></td>\n      <td><code>//</code></td>\n      <td><code>//</code> is short for <code>/descendant-or-self::node()/</code></td>\n    </tr>\n    <tr>\n      <td><code>namespace</code></td>\n      <td> </td>\n      <td> </td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>self</code></td>\n      <td><code>.</code></td>\n      <td><code>.</code> is short for <code>self::node()</code></td>\n    </tr>\n    <tr>\n      <td><code>parent</code></td>\n      <td><code>..</code></td>\n      <td><code>..</code> is short for <code>parent::node()</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>following</code></td>\n      <td> </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>following-sibling</code></td>\n      <td> </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>preceding</code></td>\n      <td> </td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>preceding-sibling</code></td>\n      <td> </td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<p>There are other axes you can use.</p>\n\n<h3 id=\"unions\">Unions</h3>\n\n<pre><code class=\"language-bash\">//a | //span\n</code></pre>\n\n<p>Use <code>|</code> to join two expressions.</p>\n\n<h2 id=\"more-examples\">More examples</h2>\n\n<h3 id=\"examples\">Examples</h3>\n\n<pre><code class=\"language-bash\">//*                 # all elements\ncount(//*)          # count all elements\n(//h1)[1]/text()    # text of the first h1 heading\n//li[span]          # find a &lt;li&gt; with an &lt;span&gt; inside it\n                    # ...expands to //li[child::span]\n//ul/li/..          # use .. to select a parent\n</code></pre>\n\n<h3 id=\"find-a-parent\">Find a parent</h3>\n\n<pre><code class=\"language-bash\">//section[h1[@id='section-name']]\n</code></pre>\n<p>Finds a <code>&lt;section&gt;</code> that directly contains <code>h1#section-name</code></p>\n\n<pre><code class=\"language-bash\">//section[//h1[@id='section-name']]\n</code></pre>\n\n<p>Finds a <code>&lt;section&gt;</code> that contains <code>h1#section-name</code>.\n(Same as above, but uses descendant-or-self instead of child)</p>\n\n<h3 id=\"closest\">Closest</h3>\n\n<pre><code class=\"language-bash\">./ancestor-or-self::[@class=\"box\"]\n</code></pre>\n\n<p>Works like jQuery’s <code>$().closest('.box')</code>.</p>\n\n<h3 id=\"attributes\">Attributes</h3>\n\n<pre><code class=\"language-bash\">//item[@price &gt; 2*@discount]\n</code></pre>\n\n<p>Finds <code>&lt;item&gt;</code> and check its attributes</p>\n\n<h2 class=\"-one-column\" id=\"references\">References</h2>\n\n<ul>\n  <li><a href=\"http://www.whitebeam.org/library/guide/TechNotes/xpathtestbed.rhtm\">Xpath test bed</a> <em>(whitebeam.org)</em></li>\n</ul>",
  "intro_html": "",
  "description_html": "<p>$x(‘//div//p//*’) == $(‘div p *’), $x(‘//[@id=”item”]’) == $(‘#item’), and many other Xpath examples.</p>",
  "tags": ["Featured"],
  "updated": null
},{
  "id": "sheets/Markup/yaml",
  "title": "Yaml",
  "url": "/sheets/Markup/yaml",
  "category": "Markup",
  "keywords": null,
  "content_html": "<h3 id=\"multiline-strings\">Multiline strings</h3>\n\n<pre><code class=\"language-yaml\">Multiline: |\n  hello\n  world\n</code></pre>\n\n<h3 id=\"inheritance\">Inheritance</h3>\n\n<pre><code class=\"language-yaml\">parent: &amp;defaults\n  a: 2\n  b: 3\n\nchild:\n  &lt;&lt;: *defaults\n  b: 4\n</code></pre>\n\n<h3 id=\"reference-content\">Reference content</h3>\n\n<pre><code class=\"language-yaml\">values: &amp;ref\n  - These values\n  - will be reused below\n  \nother_values:\n  &lt;&lt;: *ref\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sheets/JavaScript/yarn",
  "title": "Yarn",
  "url": "/sheets/JavaScript/yarn",
  "category": "JavaScript libraries",
  "keywords": null,
  "content_html": "<h3 id=\"npm-equivalents\">npm equivalents</h3>\n\n<table class=\"-left-align -headers\">\n  <thead>\n    <tr>\n      <th>npm</th>\n      <th>yarn</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>npm init</code></td>\n      <td><code>yarn init</code></td>\n    </tr>\n    <tr>\n      <td><code>npm install</code></td>\n      <td><code>yarn</code></td>\n    </tr>\n    <tr>\n      <td><code>npm install gulp --save</code></td>\n      <td><code>yarn add gulp</code></td>\n    </tr>\n    <tr>\n      <td><code>npm install gulp --save-dev --save-exact</code></td>\n      <td><code>yarn add gulp --dev --exact</code></td>\n    </tr>\n    <tr>\n      <td><code>npm install -g gulp</code></td>\n      <td><code>yarn global add gulp</code></td>\n    </tr>\n    <tr>\n      <td><code>npm update</code></td>\n      <td><code>yarn upgrade</code></td>\n    </tr>\n    <tr>\n      <td><code>./node_modules/.bin/gulp</code></td>\n      <td><code>yarn run gulp</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"yarn-install\">yarn install</h3>\n\n<pre><code>--no-lockfile\n--pure-lockfile\n--frozen-lockfile\n--silent\n--offline\n--update-checksums\n--check-files\n--flat\n--force\n--ignore-scripts\n--modules-folder &lt;path&gt;\n--production[=true|false]\n</code></pre>\n\n<p>These options are available for <code>yarn install</code>.</p>\n\n<h3 id=\"yarn-add\">yarn add</h3>\n\n<pre><code>--dev\n--peer\n--optional\n--exact\n--tilde\n</code></pre>\n\n<p>These options are available for <code>yarn add</code>.</p>\n\n<h3 id=\"workspaces\">Workspaces</h3>\n\n<p class=\"-setup\">In <code>package.json</code>:</p>\n\n<pre><code class=\"language-json\">\"workspaces\": [\n  \"packages/*\"\n]\n</code></pre>\n\n<pre class=\"-box-chars\"><code>jest/\n├─ package.json\n└─ packages/\n   ├─ jest-matcher-utils/\n   │  └─ package.json\n   └─ jest-diff/\n      └─ package.json\n</code></pre>\n\n<p>(New in 1.0) Allows monorepos to share packages with each other. See: <a href=\"https://yarnpkg.com/blog/2017/08/02/introducing-workspaces/\">Introducing workspaces</a></p>\n\n<h3 id=\"selective-version-resolution\">Selective version resolution</h3>\n\n<p class=\"-setup\">In <code>package.json</code>:</p>\n\n<pre><code class=\"language-json\">\"resolutions\": {\n  \"**/sass-brunch/node-sass\": \"4.5.2\"\n}\n</code></pre>\n\n<p>(New in 1.0) Allows you to specify versions for sub-dependencies. See: <a href=\"https://github.com/yarnpkg/yarn/pull/4105\">Selective version resolutions</a></p>\n\n<h3 id=\"create\">Create</h3>\n\n<pre><code class=\"language-bash\">yarn create react-app hello\n</code></pre>\n\n<p>Install <code>create-react-app</code> and runs it. See: <a href=\"https://github.com/yarnpkg/rfcs/blob/master/implemented/0000-yarn-create.md\">yarn create</a></p>",
  "intro_html": "",
  "description_html": "",
  "tags": ["Featurable"],
  "updated": "2019-09-30"
},{
  "id": "assets/css/style.css",
  "title": null,
  "url": "/assets/css/style.css",
  "category": "Hidden",
  "keywords": null,
  "content_html": "<p>@import “jekyll-theme-primer”;</p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "redirects.json",
  "title": null,
  "url": "/redirects.json",
  "category": "Hidden",
  "keywords": null,
  "content_html": "<p>{}</p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
}
]

